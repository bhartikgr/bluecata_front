{"version":3,"file":"static/js/3436.243d7d51.chunk.js","mappings":"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","sources":["pages/Investors/Profile.jsx","components/Investor/ModuleSideNav.jsx","components/Investor/MainHeaderInvestor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MainHeaderInvestor from \"../../components/Investor/MainHeaderInvestor.js\";\r\nimport ModuleSideNav from \"../../components/Investor/ModuleSideNav\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  DataRoomSection,\r\n  FormProfile,\r\n} from \"../../components/Styles/DataRoomStyle.js\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../components/Styles/MainHeadStyles.js\";\r\nimport axios from \"axios\";\r\nexport default function Profile() {\r\n  const navigate = useNavigate();\r\n  const [records, setrecords] = useState(\"\");\r\n  var apiURL = \"https://blueprintcatalyst.com/api/user/investorreport/\";\r\n  const storedUsername = localStorage.getItem(\"InvestorData\");\r\n  const userLogin = JSON.parse(storedUsername);\r\n  const [dangerMessage, setdangerMessage] = useState(\"\");\r\n  const [errr, seterrr] = useState(false);\r\n  document.title = \"Investor Profile\";\r\n  useEffect(() => {\r\n    getinvestordetail();\r\n  }, []);\r\n  const getinvestordetail = async () => {\r\n    const formData = {\r\n      email: userLogin.email,\r\n    };\r\n    try {\r\n      const res = await axios.post(apiURL + \"getinvestorData\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.data.results.length > 0) {\r\n        setrecords(res.data.results[0]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n    //  Optionally, call AI Summary API here\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = {\r\n      first_name: e.target.first_name.value,\r\n      last_name: e.target.last_name.value,\r\n      phone: e.target.phone.value,\r\n      city: e.target.city.value,\r\n      email: userLogin.email,\r\n    };\r\n\r\n    try {\r\n      const respo = await axios.post(`${apiURL}investordataUpdate`, formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      setdangerMessage(\"Profile updated successfully\");\r\n      getinvestordetail();\r\n      setTimeout(() => {\r\n        setdangerMessage(\"\");\r\n      }, 2500);\r\n    } catch (err) {}\r\n  };\r\n  //handle Share Report\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  //handle Share Report\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <div className=\"fullpage d-block\">\r\n          <MainHeaderInvestor />\r\n          <SectionWrapper className=\"d-block py-5\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                  <ModuleSideNav\r\n                    isCollapsed={isCollapsed}\r\n                    setIsCollapsed={setIsCollapsed}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                  {dangerMessage && (\r\n                    <p\r\n                      className={errr ? \" mt-3 error_pop\" : \"success_pop mt-3\"}\r\n                    >\r\n                      {dangerMessage}\r\n                    </p>\r\n                  )}\r\n                  <DataRoomSection className=\"d-flex flex-column gap-4\">\r\n                    <div className=\"titleroom d-flex  justify-content-between align-items-center text-center\">\r\n                      <h4>Profile Settings</h4>\r\n                    </div>\r\n                    <FormProfile>\r\n                      <form\r\n                        method=\"post\"\r\n                        action=\"javascript:void(0)\"\r\n                        onSubmit={handleSubmit}\r\n                      >\r\n                        <div className=\"row gy-4\">\r\n                          {/* Name */}\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"d-flex flex-column gap-1\">\r\n                              <label htmlFor=\"name\">\r\n                                First Name{\" \"}\r\n                                <span className=\"text-danger fs-5\">*</span>\r\n                              </label>\r\n                              <input\r\n                                required\r\n                                defaultValue={records.first_name}\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n                                id=\"name\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter your first name\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"d-flex flex-column gap-1\">\r\n                              <label htmlFor=\"name\">\r\n                                Last Name{\" \"}\r\n                                <span className=\"text-danger fs-5\">*</span>\r\n                              </label>\r\n                              <input\r\n                                required\r\n                                defaultValue={records.first_name}\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n                                id=\"name\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter your last name\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Email */}\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"d-flex flex-column gap-1\">\r\n                              <label htmlFor=\"email\">\r\n                                Email{\" \"}\r\n                                <span className=\"text-danger fs-5\">*</span>\r\n                              </label>\r\n                              <input\r\n                                disabled\r\n                                defaultValue={records.email}\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter your email\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Phone */}\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"d-flex flex-column gap-1\">\r\n                              <label htmlFor=\"phone\">\r\n                                Phone{\" \"}\r\n                                <span className=\"text-danger fs-5\">*</span>\r\n                              </label>\r\n                              <input\r\n                                defaultValue={records.phone}\r\n                                type=\"tel\"\r\n                                name=\"phone\"\r\n                                id=\"phone\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter phone number\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* LinkedIn Profile */}\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"d-flex flex-column gap-1\">\r\n                              <label htmlFor=\"linkedin\">\r\n                                City <span className=\"text-danger fs-5\">*</span>\r\n                              </label>\r\n                              <input\r\n                                defaultValue={records.city}\r\n                                type=\"text\"\r\n                                name=\"city\"\r\n                                id=\"linkedin\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Enter city\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Save Button */}\r\n                          <div className=\"col-12 text-end mt-3\">\r\n                            <button type=\"submit\" className=\"\">\r\n                              Save Changes\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </FormProfile>\r\n                  </DataRoomSection>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </SectionWrapper>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Tophead,\r\n  Slan,\r\n  CenterNav,\r\n  MenuButtonWrapper,\r\n  NavItem,\r\n  NavList,\r\n  NavContainer,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Arrow,\r\n} from \"../../components/Styles/MainHeadStyles\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Globe, Menu } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\nconst menuItems = [\r\n  {\r\n    label: \"Report\",\r\n    href: \"/investor/documentview\",\r\n  },\r\n  {\r\n    label: \"Company\",\r\n    href: \"/investor/allcompany\",\r\n  },\r\n  {\r\n    label: \"Profile\",\r\n    href: \"/investor/profile\",\r\n  },\r\n];\r\n\r\nexport default function ModuleSideNav({ isOpen }) {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [userdataa, setuserdataa] = useState(\"\");\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const [getdatamodule, setgetdatamodule] = useState([]);\r\n  const apiURL = \"https://blueprintcatalyst.com/api/user/\";\r\n\r\n  useEffect(() => {\r\n    // Check if the username key exists in session storage\r\n    const storedUsername = localStorage.getItem(\"InvestorData\");\r\n    const userLogin = JSON.parse(storedUsername);\r\n    setuserdataa(userLogin);\r\n    if (userLogin === null) {\r\n      localStorage.removeItem(\"InvestorData\");\r\n      window.location.href = \"/investor/login\";\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getModules();\r\n    // Check if there's a previously selected dropdown in storage\r\n    const selectedDropdown = localStorage.getItem(\"selectedDropdown\");\r\n    if (selectedDropdown) {\r\n      setOpenDropdown(Number(selectedDropdown)); // Use Number to parse as integer\r\n    }\r\n  }, []);\r\n\r\n  const getModules = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(apiURL + \"getModules\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      setgetdatamodule(res.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error fetching modules:\", err);\r\n    }\r\n  };\r\n\r\n  const toggleDropdown = (index) => {\r\n    const newIndex = openDropdown === index ? null : index;\r\n    setOpenDropdown(newIndex);\r\n\r\n    // Store the selected dropdown in localStorage to keep it after page refresh\r\n    localStorage.setItem(\"selectedDropdown\", newIndex !== null ? newIndex : \"\");\r\n  };\r\n  const location = useLocation();\r\n\r\n  const shouldBeActive = location.pathname === \"/advicevideos\";\r\n\r\n  return (\r\n    <>\r\n      <MenuButtonWrapper>\r\n        <button type=\"button\" onClick={() => setMenuOpen(!menuOpen)}>\r\n          <Menu strokeWidth={2} />\r\n        </button>\r\n      </MenuButtonWrapper>\r\n\r\n      <NavContainer isOpen={isOpen}>\r\n        <NavList>\r\n          {menuItems.map((item, index) => {\r\n            const isActive =\r\n              (item.matchPaths &&\r\n                item.matchPaths.some((path) =>\r\n                  location.pathname.startsWith(path)\r\n                )) ||\r\n              location.pathname === item.href;\r\n\r\n            return (\r\n              <NavItem key={index}>\r\n                {item.dropdown || item.dynamicDropdownKey ? (\r\n                  <>\r\n                    <DropdownToggle\r\n                      title={item.label}\r\n                      onClick={() => toggleDropdown(index)}\r\n                    >\r\n                      <div className=\"d-flex gap-2 align-items-start\">\r\n                        <Arrow isOpen={openDropdown === index}>▾</Arrow>\r\n                        {item.label}\r\n                      </div>\r\n                    </DropdownToggle>\r\n\r\n                    {openDropdown === index && (\r\n                      <DropdownMenu>\r\n                        {/* Static dropdown items */}\r\n\r\n                        {item.dropdown &&\r\n                          item.dropdown.map((sub, subIndex) => {\r\n                            const isSubActive = location.pathname === sub.href;\r\n                            return (\r\n                              <li key={subIndex}>\r\n                                <Link\r\n                                  title={sub.label}\r\n                                  to={sub.href}\r\n                                  className={`sidebar ${\r\n                                    isSubActive ? \"active\" : \"\"\r\n                                  }`}\r\n                                >\r\n                                  {sub.label}\r\n                                </Link>\r\n                              </li>\r\n                            );\r\n                          })}\r\n\r\n                        {/* Dynamic dropdown items */}\r\n                      </DropdownMenu>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Link\r\n                    to={item.href}\r\n                    title={item.label}\r\n                    className={`sidebar ${isActive ? \"active\" : \"\"}`}\r\n                  >\r\n                    {item.label}\r\n                  </Link>\r\n                )}\r\n              </NavItem>\r\n            );\r\n          })}\r\n        </NavList>\r\n      </NavContainer>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tophead,\r\n  Slan,\r\n  MenuButtonWrapper,\r\n} from \"../../components/Styles/MainHeadStyles\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Globe, Menu } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nexport default function MainHeaderInvestor() {\r\n  const [userdataa, setuserdataa] = useState(\"\");\r\n  const code = useParams();\r\n  const navigate = useNavigate();\r\n  const [getdatamodule, setgetdatamodule] = useState([]);\r\n  var apiURL = \"https://blueprintcatalyst.com/api/user/\";\r\n  var apiURLINFile = \"https://blueprintcatalyst.com/api/user/investorreport/\";\r\n  const [InvestorData, setInvestorData] = useState(\"\");\r\n  useEffect(() => {\r\n    // Check if the username key exists in session storage\r\n    const storedUsername = localStorage.getItem(\"InvestorData\");\r\n    const userLogin = JSON.parse(storedUsername);\r\n    console.log(userLogin);\r\n    setuserdataa(userLogin);\r\n    if (userLogin === null) {\r\n      localStorage.removeItem(\"InvestorData\");\r\n      window.location.href = \"/investor/login\";\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    checkinvestorCode();\r\n  }, []);\r\n\r\n  const checkinvestorCode = async () => {\r\n    let formData = {\r\n      code: code,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        apiURLINFile + \"checkinvestorCode\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.data.results.length === 0) {\r\n        //navigate(\"/\");\r\n      } else {\r\n        setInvestorData(res.data.results[0]);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  useEffect(() => {\r\n    getModules();\r\n  }, []);\r\n\r\n  const getModules = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(apiURL + \"getModules\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      setgetdatamodule(res.data.results);\r\n    } catch (err) {}\r\n  };\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n  const [creditBalanceData, setcreditBalanceData] = useState(\"\");\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const handleClosepayPopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n  const dateformate = (date) => {\r\n    const formattedDate = new Date(date).toLocaleDateString(\"en-GB\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n    return formattedDate;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tophead>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"d-flex gap-4 position-relative\">\r\n            <Link href=\"/\" className=\"logo\">\r\n              <img src=\"/logos/logo.png\" alt=\"logo\" />\r\n            </Link>\r\n            <MenuButtonWrapper>\r\n              <button type=\"button\" onClick={toggleMenu}>\r\n                <Menu strokeWidth={2} />\r\n              </button>\r\n            </MenuButtonWrapper>\r\n            <Slan>\r\n              <Link to=\"/investor/logout\" className=\"btn bg-dark py-2 hoverbge\">\r\n                Logout\r\n              </Link>\r\n            </Slan>\r\n          </div>\r\n        </div>\r\n      </Tophead>\r\n      {showPopup && creditBalanceData && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"paymentModalLabel\"\r\n          aria-hidden=\"false\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\">\r\n            <div className=\"modal-content rounded-4 shadow-lg p-4\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close position-absolute top-0 end-0 m-3\"\r\n                onClick={handleClosepayPopup}\r\n                aria-label=\"Close\"\r\n              ></button>\r\n\r\n              <>\r\n                <h2\r\n                  className=\"modal-title text-center fw-bold text-dark mb-4 \"\r\n                  id=\"paymentModalLabel\"\r\n                >\r\n                  Credit Balance\r\n                </h2>\r\n\r\n                <div className=\"mb-4\">\r\n                  <ul className=\"list-group list-group-flush mt-3\">\r\n                    <li className=\"list-group-item text-dark ps-0\">\r\n                      Access to Dataroom for 3 months (till{\" \"}\r\n                      <strong>\r\n                        {dateformate(creditBalanceData.valid_until)}\r\n                      </strong>\r\n                      )\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item text-dark ps-0\">\r\n                      Due diligence documents generated:{\" \"}\r\n                      <strong>{creditBalanceData.total_generated}</strong> / 2\r\n                      allowed\r\n                    </li>\r\n                    <li className=\"list-group-item text-dark ps-0\">\r\n                      Credit Balance Left:{\" \"}\r\n                      <strong>{creditBalanceData.credit_balance}</strong>\r\n                    </li>\r\n                    {creditBalanceData.extra_generations > 0 && (\r\n                      <li className=\"list-group-item text-danger ps-0\">\r\n                        <strong>\r\n                          {creditBalanceData.extra_generations} additional\r\n                          generation (s) will incur €100 each\r\n                        </strong>\r\n                      </li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Profile","useNavigate","records","setrecords","useState","apiURL","storedUsername","localStorage","getItem","userLogin","JSON","parse","dangerMessage","setdangerMessage","errr","seterrr","document","title","useEffect","getinvestordetail","async","formData","email","res","axios","post","headers","Accept","data","results","length","err","console","error","isCollapsed","setIsCollapsed","_jsx","_Fragment","children","Wrapper","_jsxs","className","MainHeaderInvestor","SectionWrapper","ModuleSideNav","DataRoomSection","FormProfile","method","action","onSubmit","e","preventDefault","first_name","target","value","last_name","phone","city","setTimeout","htmlFor","required","defaultValue","type","name","id","placeholder","disabled","menuItems","label","href","_ref","isOpen","menuOpen","setMenuOpen","userdataa","setuserdataa","openDropdown","setOpenDropdown","getdatamodule","setgetdatamodule","removeItem","window","location","getModules","selectedDropdown","Number","useLocation","pathname","MenuButtonWrapper","onClick","Menu","strokeWidth","NavContainer","NavList","map","item","index","isActive","matchPaths","some","path","startsWith","NavItem","dropdown","dynamicDropdownKey","DropdownToggle","newIndex","setItem","toggleDropdown","Arrow","DropdownMenu","sub","subIndex","isSubActive","Link","to","code","useParams","InvestorData","setInvestorData","log","checkinvestorCode","apiURLINFile","creditBalanceData","setcreditBalanceData","showPopup","setShowPopup","Tophead","src","alt","toggleMenu","Slan","style","backgroundColor","tabIndex","role","handleClosepayPopup","date","valid_until","Date","toLocaleDateString","year","month","day","total_generated","credit_balance","extra_generations"],"sourceRoot":""}
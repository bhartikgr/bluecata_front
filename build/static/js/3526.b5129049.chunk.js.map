{"version":3,"file":"static/js/3526.b5129049.chunk.js","mappings":"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","sources":["components/Footer.jsx","pages/Groupimages.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport GDPRPopup from \"./GDPRPopup\";\n\nexport const Footer = () => {\n  const { t } = useTranslation();\n  const [signedup, setsignedup] = useState(false);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const currentYear = new Date().getFullYear();\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin !== null) {\n      setsignedup(true);\n    }\n  }, []);\n  return (\n    <>\n      <footer className=\"d-block\">\n        <div className=\"ftblocks py-5\">\n          <div className=\"container-lg\">\n            <div className=\"row gy-4\">\n              <div className=\"col-md-6\">\n                <div className=\"d-flex flex-column gap-3 ftlogoblock\">\n                  <h4>{t(\"WELCOMETOAMOURETTE\")}</h4>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <h6>{t(\"Yourenow\")}</h6>\n                    <Link to=\"/helpsupport\" className=\"needsign\">\n                      <span\n                        dangerouslySetInnerHTML={{ __html: t(\"Needhelp\") }}\n                      />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"d-flex flex-column gap-3 ftblock ps-md-5\">\n                  <h3>{t(\"About\")}</h3>\n                  <div className=\"d-flex flex-column gap-2 ftlink\">\n                    <Link to=\"/setting\">{t(\"Membership\")}</Link>\n                    <Link to=\"/helpsupport\">{t(\"Help_and_support\")}</Link>\n                    <Link to=\"/setting\">{t(\"Contact_us\")}</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"d-flex flex-column gap-3 ftblock ps-md-5\">\n                  <h3>{t(\"Resources\")}</h3>\n                  <div className=\"d-flex flex-column gap-2 ftlink\">\n                    <Link to=\"/securitypage\">{t(\"Security\")}</Link>\n                    <Link to=\"/setting\">{t(\"privacy\")}</Link>\n                    <Link to=\"/helpsupport\">{t(\"Terms_and_conditions\")}</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12\">\n                <div className=\"d-block ftlogoblock\">\n                  <p className=\"copyrighttext\">\n                    &copy; {t(\"Copyright_2024_all_rights_reserved\")}{\" \"}\n                    {currentYear}, {t(\"all_rights_reserved\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <GDPRPopup />\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Headertwo from \"../components/Headertwo\";\r\nimport { Footer } from \"../components/Footer\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport MediaRenderer from \"../components/MediaRenderer\";\r\nimport image1 from \"../assets/images/image1.jfif\";\r\nimport image2 from \"../assets/images/image2.jfif\";\r\nimport image3 from \"../assets/images/image4.jfif\";\r\nimport image4 from \"../assets/images/image5.jfif\";\r\nimport image5 from \"../assets/images/angular.jpg\";\r\nimport image6 from \"../assets/images/image3.png\";\r\nimport axios from \"axios\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../i18n\";\r\nexport default function Groupimages() {\r\n  const navigate = useNavigate();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\r\n  const [isGrouppost, setGrouppost] = useState([]);\r\n  const [groupId, setgroupId] = useState(\"\");\r\n  const [isGrouppostvideo, setGrouppostvideo] = useState([]);\r\n  const [LoginData, setLoginData] = useState(null);\r\n  const [Isslug, setSlug] = useState(\"\");\r\n  const { slug } = useParams();\r\n  const [groupdetail, setgroupdetail] = useState(\"\");\r\n  const images = [\r\n    {\r\n      src: image1,\r\n      wideSrc: image1,\r\n      alt: \"Nature\",\r\n    },\r\n    {\r\n      src: image2,\r\n      wideSrc: image3,\r\n      alt: \"Snow\",\r\n    },\r\n    {\r\n      src: image4,\r\n      wideSrc: image5,\r\n      alt: \"Mountains\",\r\n    },\r\n    {\r\n      src: image6,\r\n      wideSrc: image6,\r\n      alt: \"Lights\",\r\n    },\r\n    {\r\n      src: image1,\r\n      wideSrc: image1,\r\n      alt: \"Nature\",\r\n    },\r\n    {\r\n      src: image2,\r\n      wideSrc: image3,\r\n      alt: \"Snow\",\r\n    },\r\n    {\r\n      src: image4,\r\n      wideSrc: image5,\r\n      alt: \"Mountains\",\r\n    },\r\n    {\r\n      src: image6,\r\n      wideSrc: image6,\r\n      alt: \"Lights\",\r\n    },\r\n  ];\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\r\n    console.log(\"language\");\r\n    console.log(savedLanguage);\r\n\r\n    // Change the language if it's not already the current language\r\n    if (i18n.language !== savedLanguage) {\r\n      i18n.changeLanguage(savedLanguage);\r\n    }\r\n  }, [i18n, t]);\r\n  const openModal = () => setModalOpen(true);\r\n  const closeModal = () => setModalOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (modalOpen) {\r\n      // Disable scrolling when modal is open\r\n      document.body.style.overflowY = \"hidden\";\r\n    } else {\r\n      // Enable scrolling when modal is closed\r\n      document.body.style.overflowY = \"auto\";\r\n    }\r\n\r\n    // Cleanup to restore the overflow style when the component unmounts\r\n    return () => {\r\n      document.body.style.overflowY = \"auto\";\r\n    };\r\n  }, [modalOpen]);\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (!modalOpen) return; // Ensure key events work only when modal is open\r\n\r\n      if (event.key === \"ArrowRight\") {\r\n        showSlide(currentSlideIndex + 1); // Right arrow → moves to next slide\r\n      } else if (event.key === \"ArrowLeft\") {\r\n        showSlide(currentSlideIndex - 1); // Left arrow ← moves to previous slide\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [currentSlideIndex, modalOpen]);\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === \"Escape\") {\r\n        setModalOpen(false);\r\n      }\r\n    };\r\n\r\n    // Add event listener\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    // Cleanup event listener on unmount\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    setLoginData(userLogin);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (slug !== undefined) {\r\n      setSlug(slug); // Ensure setSlug is defined and does not cause issues\r\n      getDetails(slug);\r\n    }\r\n  }, [LoginData, slug]);\r\n  useEffect(() => {\r\n    if (LoginData && groupId) {\r\n      getpostComment(groupId);\r\n    }\r\n  }, [LoginData, groupId]);\r\n  const getDetails = async (slug) => {\r\n    let formData = {\r\n      slug: slug,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getGroupDetailSlug\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      var respo = res.data.group;\r\n      console.log(respo);\r\n      console.log(\"vh\");\r\n      setgroupdetail(respo);\r\n\r\n      if (res.data.group === \"\" || res.data.group === undefined) {\r\n        navigate(\"/groups\");\r\n      } else {\r\n        console.log(LoginData);\r\n      }\r\n      setgroupId(respo.id);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        //console.error(\"Request data:\", err.request);\r\n      } else {\r\n        // console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const getpostComment = async (idd) => {\r\n    let formData = {\r\n      group_id: idd,\r\n      user_id: LoginData.id,\r\n    };\r\n    console.log(formData);\r\n    try {\r\n      const res = await axios.post(apiUrl + \"get_postComment\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      console.log(\"res.data\");\r\n      const images = [];\r\n      const videos = [];\r\n      if (res.data.results.length > 0) {\r\n        res.data.results.forEach((item) => {\r\n          const file = item.file; // Assuming 'file' contains the file URL\r\n\r\n          if (file && typeof file === \"string\") {\r\n            // Ensure file exists and is a string\r\n            images.push(item);\r\n            if (file.match(/\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i)) {\r\n              images.push(item);\r\n            } else if (\r\n              file.match(/\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp|webm)$/i)\r\n            ) {\r\n              videos.push(item);\r\n            }\r\n          } else {\r\n            console.warn(\"Invalid file URL:\", file); // Debugging log\r\n          }\r\n        });\r\n      }\r\n\r\n      setGrouppost(res.data.results);\r\n      setGrouppostvideo(videos);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const validPosts = isGrouppost.filter((post) => post.file);\r\n  const showSlide = (n) => {\r\n    if (n < 1) {\r\n      setCurrentSlideIndex(validPosts.length); // wrap to last slide\r\n    } else if (n > validPosts.length) {\r\n      setCurrentSlideIndex(1); // wrap to first slide\r\n    } else {\r\n      setCurrentSlideIndex(n);\r\n    }\r\n  };\r\n  console.log(isGrouppost);\r\n  return (\r\n    <>\r\n      <Headertwo />\r\n      <section className=\"ggboxes d-block gapy\">\r\n        <div className=\"container-lg\">\r\n          <div className=\"row gy-4 mb-5\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex justify-content-start gap-2\">\r\n                <h1 className=\"pagetitle\">{`${t(\"Photos\")}`}</h1>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex justify-content-md-end\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <Tabs>\r\n                <TabList>\r\n                  <Tab>{`${t(\"Media\")}`}</Tab>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => navigate(`/group/${slug}`)}\r\n                    className=\"btn backbtn\"\r\n                  >\r\n                    Back\r\n                  </button>\r\n                  {/* <Tab>{`${t(\"Album\")}`}</Tab> */}\r\n                </TabList>\r\n\r\n                <TabPanel>\r\n                  <div className=\"row gy-4\">\r\n                    {isGrouppost.length > 0 ? (\r\n                      isGrouppost.map(\r\n                        (post, index) =>\r\n                          post.file && typeof post.file === \"string\" ? (\r\n                            <div className=\"col-md-3\" key={index}>\r\n                              <div className=\"d-flex flex-column gap-2\">\r\n                                <div className=\"overflow-hidden ggimagebox ofit position-relative rounded-3 d-block\">\r\n                                  <MediaRenderer\r\n                                    url={post.file}\r\n                                    onClick={() => {\r\n                                      openModal();\r\n                                      showSlide(index + 1);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                                <Link\r\n                                  to={`/friend/${post.uid}`}\r\n                                  target=\"_blank\"\r\n                                  className=\"goupmediatext\"\r\n                                >\r\n                                  {post.username}\r\n                                </Link>\r\n                              </div>\r\n                            </div>\r\n                          ) : null // <-- Skip rendering if no valid media file\r\n                      )\r\n                    ) : (\r\n                      <p>{`${t(\"No_available_media\")}`}</p>\r\n                    )}\r\n                  </div>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <div className=\"row gy-4\">\r\n                    {isGrouppost.length > 0 ? (\r\n                      isGrouppost.map((post, index) => (\r\n                        <div className=\"col-md-3\" key={index}>\r\n                          <div className=\"d-flex flex-column gap-2\">\r\n                            <div className=\"ggimagebox ofit\">\r\n                              <video\r\n                                onClick={() => {\r\n                                  openModal();\r\n                                  showSlide(index + 1);\r\n                                }}\r\n                                controls\r\n                                alt=\"video\"\r\n                              >\r\n                                <source src={post.file} type=\"video/mp4\" />\r\n                                {`${t(\"Your_browser_does\")}`}\r\n                              </video>\r\n                            </div>\r\n                            {/* <h6 className=\"urnamgg\">{post.name}</h6> */}\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                    )}\r\n                  </div>\r\n                </TabPanel>\r\n                {/* <TabPanel>\r\n                  <h2>Any content 3</h2>\r\n                </TabPanel> */}\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* pop up code */}\r\n      {modalOpen && (\r\n        <div\r\n          className=\"p-5\"\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            zIndex: 989898,\r\n          }}\r\n          onClick={closeModal} // Close modal when background is clicked\r\n        >\r\n          <div\r\n            className=\"rel d-block h-100\"\r\n            style={{ position: \"relative\" }}\r\n            onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside modal\r\n          >\r\n            {/* Close Button */}\r\n            <button type=\"button\" className=\"closebtnpic\" onClick={closeModal}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width={24}\r\n                height={24}\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth={2}\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                className=\"icon icon-tabler icon-tabler-x\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                <path d=\"M18 6l-12 12\" />\r\n                <path d=\"M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n\r\n            {/* Slides */}\r\n            {validPosts.length > 0 ? (\r\n              validPosts.map((post, index) => (\r\n                <div\r\n                  className=\"mySlides\"\r\n                  style={{\r\n                    display: currentSlideIndex === index + 1 ? \"block\" : \"none\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <div\r\n                    className=\"numbertext\"\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      fontSize: \"16px\",\r\n                      marginBottom: \"10px\",\r\n                    }}\r\n                  >\r\n                    {index + 1} / {validPosts.length}\r\n                  </div>\r\n                  <MediaRenderer\r\n                    className=\"w-100 h-100 object-fit-cover\"\r\n                    url={post.file}\r\n                    style={{\r\n                      maxWidth: \"100%\",\r\n                      maxHeight: \"100%\",\r\n                      borderRadius: \"10px\",\r\n                      height: \"85vh\",\r\n                      objectFit: \"contain\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p style={{ color: \"#fff\", textAlign: \"center\" }}>\r\n                {`${t(\"No_available_media\")}`}\r\n              </p>\r\n            )}\r\n\r\n            {/* Navigation Arrows */}\r\n            <a\r\n              className=\"prev\"\r\n              onClick={() => showSlide(currentSlideIndex - 1)}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"0\",\r\n                padding: \"16px\",\r\n                color: \"#fff\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"30px\",\r\n                userSelect: \"none\",\r\n                zIndex: 990000,\r\n              }}\r\n            >\r\n              &#10094;\r\n            </a>\r\n            <a\r\n              className=\"next\"\r\n              onClick={() => showSlide(currentSlideIndex + 1)}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                right: \"0\",\r\n                padding: \"16px\",\r\n                color: \"#fff\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"30px\",\r\n                userSelect: \"none\",\r\n                zIndex: 990000,\r\n              }}\r\n            >\r\n              &#10095;\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* pop up code */}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"names":["Footer","t","useTranslation","signedup","setsignedup","useState","useEffect","savedLanguage","localStorage","getItem","i18n","language","changeLanguage","currentYear","Date","getFullYear","storedUsername","JSON","parse","_jsx","_Fragment","children","className","_jsxs","Link","to","dangerouslySetInnerHTML","__html","GDPRPopup","Groupimages","navigate","useNavigate","modalOpen","setModalOpen","currentSlideIndex","setCurrentSlideIndex","isGrouppost","setGrouppost","groupId","setgroupId","isGrouppostvideo","setGrouppostvideo","LoginData","setLoginData","Isslug","setSlug","slug","useParams","groupdetail","setgroupdetail","console","log","openModal","closeModal","document","body","style","overflowY","handleKeyDown","event","key","showSlide","addEventListener","removeEventListener","window","apiUrl","userLogin","undefined","getDetails","getpostComment","async","formData","res","axios","post","headers","Accept","respo","data","group","id","err","response","request","group_id","idd","user_id","images","videos","results","length","forEach","item","file","push","match","warn","error","message","validPosts","filter","n","Headertwo","Tabs","TabList","Tab","type","onClick","TabPanel","map","index","MediaRenderer","url","uid","target","username","controls","alt","src","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","e","stopPropagation","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","textAlign","color","fontSize","marginBottom","maxWidth","maxHeight","borderRadius","objectFit","cursor","padding","fontWeight","userSelect","right"],"sourceRoot":""}
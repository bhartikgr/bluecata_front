{"version":3,"file":"static/js/2590.7d487077.chunk.js","mappings":"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","sources":["pages/User/Crm/InvestorRecordReoundConfirm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport TopBar from \"../../../components/Users/TopBar\";\r\nimport ModuleSideNav from \"../../../components/Users/ModuleSideNav.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../../components/Styles/MainHeadStyles.js\";\r\nimport {\r\n  ModalContainer1,\r\n  ModalTitle,\r\n  DropArea,\r\n  ModalBtn,\r\n  ButtonGroup,\r\n} from \"../../../components/Styles/DataRoomStyle.js\";\r\nimport { IoCloseCircleOutline } from \"react-icons/io5\";\r\nimport axios from \"axios\";\r\nimport { FaCheck, FaEye, FaEllipsisV } from \"react-icons/fa\"; // FontAwesome icons\r\nimport ViewInvestorEndRecordRound from \"../../../components/Users/popup/ViewInvestorEndRecordRound\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nexport default function InvestorRecordReoundConfirm() {\r\n  const navigate = useNavigate();\r\n\r\n  const storedUsername = localStorage.getItem(\"SignatoryLoginData\");\r\n  const [ViewRecordRounds, setViewRecordRounds] = useState(false);\r\n  const userLogin = JSON.parse(storedUsername);\r\n  const [records, setrecords] = useState([]);\r\n  const [errr, seterrr] = useState(false);\r\n  const [recordViewData, setrecordViewData] = useState(\"\");\r\n  const [InvestorInfo, setInvestorInfo] = useState(\"\");\r\n  const [messagesuccessError, setmessagesuccessError] = useState(\"\");\r\n  var apiURLInvestor = \"https://blueprintcatalyst.com/api/user/investor/\";\r\n  document.title = \"Investor Record Round Confirm\";\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    checkInvestor();\r\n    getInvestorReportCapitalRound();\r\n  }, []);\r\n\r\n  const checkInvestor = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      id: id,\r\n    };\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"checkInvestorRecordround\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (generateRes.data.results.length === 0) {\r\n        navigate(\"/crm/investorreport\");\r\n      } else {\r\n        setInvestorInfo(generateRes.data.results[0]);\r\n      }\r\n      // setrecords(generateRes.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [reason, setReason] = useState(\"\");\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const getInvestorReportCapitalRound = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      id: id,\r\n    };\r\n    try {\r\n      const resp = await axios.post(\r\n        apiURLInvestor + \"getInvestorReportCapitalRound\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setrecords(resp.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Share Class (Name of Round)\",\r\n      selector: (row) => row.shareClassType + \" \" + row.nameOfRound,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Number of Shares\",\r\n      selector: (row) => Number(row.roundsize).toLocaleString(\"en-US\"),\r\n      sortable: true,\r\n    },\r\n\r\n    {\r\n      name: \"Status of Round\",\r\n      selector: (row) => Number(row.issuedshares).toLocaleString(\"en-US\"),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date of Report\",\r\n      selector: (row) => formatCurrentDate(row.created_at),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date Viewed\",\r\n      selector: (row) =>\r\n        row.date_view ? formatCurrentDate(row.date_view) : \"N/A\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"View\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex gap-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => handleviewData(row)}\r\n            rel=\"noopener noreferrer\"\r\n            className=\"btn btn-sm btn-outline-success fw-bold\"\r\n            title=\"View Detail\"\r\n          >\r\n            <FaEye /> view\r\n          </button>\r\n        </div>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex gap-2\">\r\n          {row.report_status === \"Confirm\" ? (\r\n            // Show confirmed icon instead of button\r\n            <span className=\"text-success fw-bold\" title=\"Confirmed\">\r\n              <FaCheck /> Confirmed\r\n            </span>\r\n          ) : (\r\n            // Show Confirm button\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleConfirmData(row, \"Confirm\")}\r\n              rel=\"noopener noreferrer\"\r\n              className=\"btn btn-sm btn-outline-success fw-bold\"\r\n              title=\"Confirm Report\"\r\n            >\r\n              Confirm\r\n            </button>\r\n          )}\r\n        </div>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n    },\r\n  ];\r\n  const handleConfirmData = async (dataa, types) => {\r\n    //setViewRecordRounds(true);\r\n    // setrecordViewData(dataa);\r\n\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      id: id,\r\n      dataa: dataa,\r\n      types: types,\r\n    };\r\n    try {\r\n      const resp = await axios.post(\r\n        apiURLInvestor + \"InvestorAuthorizeConfimataion\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      getInvestorReportCapitalRound();\r\n      setmessagesuccessError(resp.data.message);\r\n      setTimeout(() => {\r\n        setmessagesuccessError(\"\");\r\n      }, 3500);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const handleviewData = (dataa) => {\r\n    setViewRecordRounds(true);\r\n    setrecordViewData(dataa);\r\n  };\r\n  const customStyles = {\r\n    table: {\r\n      style: {\r\n        overflow: \"visible !important\",\r\n        minWidth: \"100%\",\r\n        boxShadow: \"0px 3px 12px rgb(0 0 0 / 16%)\",\r\n        borderRadius: \"12px\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        backgroundColor: \"#efefef !important\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"0.9rem\",\r\n        color: \"#000 !important\",\r\n        whiteSpace: \"nowrap\",\r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\",\r\n        backgroundColor: \"#fff !important\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"0.8rem\",\r\n        fontWeight: \"500\",\r\n        \"&:hover\": {\r\n          backgroundColor: \"#e8f0fe\",\r\n        },\r\n      },\r\n      stripedStyle: {\r\n        backgroundColor: \"#f4f6f8\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        backgroundColor: \"#fafafa\",\r\n        padding: \"12px 16px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const conditionalRowStyles = [\r\n    {\r\n      when: (row) => true, // apply to all rows\r\n      style: {\r\n        \"&:hover\": {\r\n          backgroundColor: \"var(--lightRed)\", // apna hover color\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  // Filter data by nameofreport (case insensitive)\r\n  const filteredData = records.filter((item) => {\r\n    const search = searchText.toLowerCase();\r\n\r\n    // Combine all searchable fields into one string\r\n    const combinedFields = `\r\n    ${item.nameOfRound || \"\"}\r\n    ${item.shareClassType || \"\"}\r\n     ${item.roundsize || \"\"}\r\n    ${item.issuedshares || \"\"}\r\n    ${item.description || \"\"}\r\n    ${item.instrumentType || \"\"}\r\n    ${item.customInstrument || \"\"}\r\n    ${item.roundsize || \"\"}\r\n    ${item.issuedshares || \"\"}\r\n    ${item.liquidationpreferences || \"\"}\r\n  `.toLowerCase();\r\n\r\n    return combinedFields.includes(search);\r\n  });\r\n\r\n  function formatCurrentDate(input) {\r\n    const date = new Date(input);\r\n\r\n    if (isNaN(date)) return \"\";\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n\r\n    const getOrdinal = (n) => {\r\n      if (n >= 11 && n <= 13) return \"th\";\r\n      switch (n % 10) {\r\n        case 1:\r\n          return \"st\";\r\n        case 2:\r\n          return \"nd\";\r\n        case 3:\r\n          return \"rd\";\r\n        default:\r\n          return \"th\";\r\n      }\r\n    };\r\n\r\n    return `${month} ${day}${getOrdinal(day)}, ${year}`;\r\n  }\r\n  const handleDownload = async (url) => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  //Share Report\r\n\r\n  //Due diligence Record\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleOpen = () => setIsOpen(true);\r\n  let files = [];\r\n\r\n  // Ensure we have an array\r\n  if (InvestorInfo.kyc_document) {\r\n    if (Array.isArray(InvestorInfo.kyc_document)) {\r\n      try {\r\n        // Try parsing first element if it looks like JSON\r\n        files = JSON.parse(InvestorInfo.kyc_document[0]);\r\n      } catch (e) {\r\n        // fallback: it's already an array of strings\r\n        files = InvestorInfo.kyc_document;\r\n      }\r\n    } else {\r\n      // single string case\r\n      try {\r\n        files = JSON.parse(InvestorInfo.kyc_document);\r\n      } catch (e) {\r\n        files = [InvestorInfo.kyc_document];\r\n      }\r\n    }\r\n  }\r\n\r\n  const isImage = (file) => {\r\n    return /\\.(jpg|jpeg|png|gif)$/i.test(file);\r\n  };\r\n  const baseUrl =\r\n    \"https://blueprintcatalyst.com/api/upload/investor/inv_\" +\r\n    InvestorInfo.investor_id;\r\n  return (\r\n    <>\r\n      <>\r\n        <Wrapper>\r\n          <div className=\"fullpage d-block\">\r\n            <div className=\"d-flex align-items-start gap-0\">\r\n              <ModuleSideNav\r\n                isCollapsed={isCollapsed}\r\n                setIsCollapsed={setIsCollapsed}\r\n              />\r\n              <div\r\n                className={`global_view ${\r\n                  isCollapsed ? \"global_view_col\" : \"\"\r\n                }`}\r\n              >\r\n                <TopBar />\r\n                <SectionWrapper className=\"d-block p-md-4 p-3\">\r\n                  <div className=\"container-fluid\">\r\n                    {messagesuccessError && (\r\n                      <p\r\n                        className={errr ? \"mt-3 error_pop\" : \"success_pop mt-3\"}\r\n                      >\r\n                        {messagesuccessError}\r\n                      </p>\r\n                    )}\r\n\r\n                    {/* --- REPORT SUMMARY CARDS --- */}\r\n                    <div className=\"titleroom d-flex justify-content-between align-items-center border-bottom pb-3\">\r\n                      <h3 className=\"text-lg font-bold mb-2\">\r\n                        Investor Report (Capital Round Documents)\r\n                      </h3>\r\n                    </div>\r\n\r\n                    {/* --- SEARCH & DATA TABLE --- */}\r\n\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-start tb-box\">\r\n                      <style>\r\n                        {`\r\n                        .sc-fGlNzy.ewfgjA.datatb-report {\r\n                          overflow: visible !important;\r\n                        }\r\n                      `}\r\n                      </style>\r\n                      <DataTable\r\n                        customStyles={customStyles}\r\n                        conditionalRowStyles={conditionalRowStyles}\r\n                        columns={columns}\r\n                        className=\"datatb-report\"\r\n                        data={filteredData}\r\n                        pagination\r\n                        highlightOnHover\r\n                        striped\r\n                        responsive\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </SectionWrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Wrapper>\r\n        {ViewRecordRounds && (\r\n          <ViewInvestorEndRecordRound\r\n            onClose={() => setViewRecordRounds(false)}\r\n            recordViewData={recordViewData}\r\n          />\r\n        )}\r\n        {isOpen && (\r\n          <div className=\"main_popup-overlay\">\r\n            <ModalContainer1>\r\n              <div className=\"d-flex align-items-center gap-3 mb-4 justify-content-between\">\r\n                <ModalTitle>View KYC/AML Documentation</ModalTitle>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close_btn_global\"\r\n                  aria-label=\"Close\"\r\n                  onClick={() => setIsOpen(false)}\r\n                >\r\n                  <IoCloseCircleOutline size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              {/* Images container */}\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  gap: \"10px\",\r\n                  maxHeight: \"60vh\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                {files.map((file, index) => {\r\n                  const fileUrl = `${baseUrl}/${file}`;\r\n                  return isImage(file) ? (\r\n                    <img\r\n                      key={index}\r\n                      src={fileUrl}\r\n                      alt={`Document ${index + 1}`}\r\n                      style={{\r\n                        maxWidth: \"200px\",\r\n                        maxHeight: \"200px\",\r\n                        objectFit: \"contain\",\r\n                        border: \"1px solid #ddd\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"4px\",\r\n                        background: \"#f9f9f9\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <a\r\n                      key={index}\r\n                      href={fileUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"btn btn-primary\"\r\n                      style={{ margin: \"5px\" }}\r\n                    >\r\n                      Open Document {index + 1}\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              <ButtonGroup>\r\n                <ModalBtn\r\n                  onClick={() => setIsOpen(false)}\r\n                  className=\"close_btn w-fit\"\r\n                >\r\n                  Close\r\n                </ModalBtn>\r\n              </ButtonGroup>\r\n            </ModalContainer1>\r\n          </div>\r\n        )}\r\n\r\n        {showModal && (\r\n          <div\r\n            className=\"modal fade show\"\r\n            style={{\r\n              display: \"block\",\r\n              background: \"rgba(0,0,0,0.5)\",\r\n            }}\r\n          >\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header flex-column align-items-start\">\r\n                  <h5 className=\"modal-title mb-0\">Reason for Not Confirm</h5>\r\n                  <small className=\"text-muted\">\r\n                    (Series C Extension ssss)\r\n                  </small>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close position-absolute end-0 me-2\"\r\n                    onClick={() => setShowModal(false)}\r\n                  ></button>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    rows=\"3\"\r\n                    placeholder=\"Enter reason...\"\r\n                    value={reason}\r\n                    onChange={(e) => setReason(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() =>\r\n                      handleConfirmData(selectedRow, \"Not Confirm\", reason)\r\n                    }\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n"],"names":["InvestorRecordReoundConfirm","navigate","useNavigate","storedUsername","localStorage","getItem","ViewRecordRounds","setViewRecordRounds","useState","userLogin","JSON","parse","records","setrecords","errr","seterrr","recordViewData","setrecordViewData","InvestorInfo","setInvestorInfo","messagesuccessError","setmessagesuccessError","apiURLInvestor","document","title","id","useParams","useEffect","checkInvestor","getInvestorReportCapitalRound","async","formData","company_id","companies","generateRes","axios","post","headers","Accept","data","results","length","err","console","error","showModal","setShowModal","reason","setReason","selectedRow","setSelectedRow","open","setOpen","resp","columns","name","selector","row","shareClassType","nameOfRound","sortable","Number","roundsize","toLocaleString","issuedshares","formatCurrentDate","created_at","date_view","cell","_jsx","className","children","_jsxs","type","onClick","handleviewData","rel","FaEye","ignoreRowClick","allowOverflow","button","report_status","FaCheck","handleConfirmData","dataa","types","message","setTimeout","searchText","setSearchText","filteredData","filter","item","search","toLowerCase","description","instrumentType","customInstrument","liquidationpreferences","includes","input","date","Date","isNaN","day","getDate","month","getMonth","year","getFullYear","n","getOrdinal","isCollapsed","setIsCollapsed","isOpen","setIsOpen","files","kyc_document","Array","isArray","e","baseUrl","investor_id","_Fragment","Wrapper","ModuleSideNav","TopBar","SectionWrapper","DataTable","customStyles","table","style","overflow","minWidth","boxShadow","borderRadius","headCells","backgroundColor","fontWeight","fontSize","color","whiteSpace","cells","textOverflow","rows","stripedStyle","pagination","padding","conditionalRowStyles","when","highlightOnHover","striped","responsive","ViewInvestorEndRecordRound","onClose","ModalContainer1","ModalTitle","IoCloseCircleOutline","size","display","flexWrap","gap","maxHeight","overflowY","map","file","index","fileUrl","test","isImage","src","alt","maxWidth","objectFit","border","background","href","target","margin","ButtonGroup","ModalBtn","placeholder","value","onChange"],"sourceRoot":""}
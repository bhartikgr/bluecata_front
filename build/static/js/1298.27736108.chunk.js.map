{"version":3,"file":"static/js/1298.27736108.chunk.js","mappings":"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","sources":["pages/User/Crm/InvestorReportPortal.jsx"],"sourcesContent":["// Updated React Component\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TopBar from \"../../../components/Users/TopBar\";\r\nimport ModuleSideNav from \"../../../components/Users/ModuleSideNav.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../../components/Styles/MainHeadStyles.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function InvestorReportPortal() {\r\n  const navigate = useNavigate();\r\n  const storedUsername = localStorage.getItem(\"SignatoryLoginData\");\r\n  const userLogin = JSON.parse(storedUsername);\r\n\r\n  document.title = \"Investor Portal\";\r\n  const [countrySymbolList, setCountrysymbollist] = useState([]);\r\n  // State management\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [investorData, setInvestorData] = useState({\r\n    investments: [],\r\n    stats: {\r\n      totalInvestment: 0,\r\n      activeInvestments: 0,\r\n      totalShares: 0,\r\n      pendingRequests: 0,\r\n      confirmedInvestments: 0,\r\n      rejectedInvestments: 0,\r\n    },\r\n  });\r\n\r\n  // API URL - adjust according to your setup\r\n\r\n  const apiURLInvestor = \"http://localhost:5000/api/user/investor/\";\r\n  const apiUrlRound = \"http://localhost:5000/api/user/capitalround/\";\r\n  useEffect(() => {\r\n    getallcountrySymbolList();\r\n  }, []);\r\n  const getallcountrySymbolList = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlRound + \"getallcountrySymbolList\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n\r\n      var respo = res.data.results;\r\n\r\n      setCountrysymbollist(respo);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchInvestorData();\r\n  }, []);\r\n\r\n  const fetchInvestorData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"fetchInvestorData\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (generateRes.data && generateRes.data.results) {\r\n        setInvestorData({\r\n          investments: generateRes.data.results,\r\n          stats: generateRes.data.stats || {\r\n            totalInvestment: 0,\r\n            activeInvestments: 0,\r\n            totalShares: 0,\r\n            pendingRequests: 0,\r\n            confirmedInvestments: 0,\r\n            rejectedInvestments: 0,\r\n          },\r\n        });\r\n      } else {\r\n        setError(\"No investment data found\");\r\n        setInvestorData({\r\n          investments: [],\r\n          stats: {\r\n            totalInvestment: 0,\r\n            activeInvestments: 0,\r\n            totalShares: 0,\r\n            pendingRequests: 0,\r\n            confirmedInvestments: 0,\r\n            rejectedInvestments: 0,\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching investor data:\", err);\r\n      setError(\"Failed to fetch investor data\");\r\n      setInvestorData({\r\n        investments: [],\r\n        stats: {\r\n          totalInvestment: 0,\r\n          activeInvestments: 0,\r\n          totalShares: 0,\r\n          pendingRequests: 0,\r\n          confirmedInvestments: 0,\r\n          rejectedInvestments: 0,\r\n        },\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateInvestmentStatus = async (requestId, status) => {\r\n    try {\r\n      const response = await axios.post(\r\n        apiURLInvestor + \"updateInvestmentStatus\",\r\n        {\r\n          request_id: requestId,\r\n          status: status,\r\n          updated_by_id: userLogin.id,\r\n        },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data.message) {\r\n        // Refresh data after status update\r\n        fetchInvestorData();\r\n        alert(\r\n          `Investment ${\r\n            status === \"Yes\"\r\n              ? \"approved\"\r\n              : status === \"Rejected\"\r\n              ? \"rejected\"\r\n              : \"marked as pending\"\r\n          } successfully`\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating investment status:\", error);\r\n      alert(\"Failed to update investment status\");\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status) => {\r\n    const statusConfig = {\r\n      Yes: { class: \"badge bg-success\", text: \"Confirmed\", icon: \"✓\" },\r\n      No: { class: \"badge bg-warning text-dark\", text: \"Pending\", icon: \"⏳\" },\r\n      Rejected: { class: \"badge bg-danger\", text: \"Rejected\", icon: \"✗\" },\r\n    };\r\n\r\n    const config = statusConfig[status] || statusConfig[\"No\"];\r\n\r\n    return (\r\n      <span className={config.class}>\r\n        {config.icon} {config.text}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const calculateOwnership = (shares, totalShares) => {\r\n    if (!shares || !totalShares) return \"0\";\r\n    return ((parseFloat(shares) / parseFloat(totalShares)) * 100).toFixed(2);\r\n  };\r\n\r\n  const formatCurrency = (amount, currency = \"USD\") => {\r\n    if (!amount || isNaN(parseFloat(amount))) return \"$0.00\";\r\n\r\n    const numAmount = parseFloat(amount);\r\n\r\n    // Clean the currency input - remove extra symbols and spaces\r\n    let cleanCurrency = currency;\r\n    if (currency) {\r\n      cleanCurrency = currency\r\n        .replace(/[\\$\\€\\£\\¥\\₹\\₽]/g, \"\") // Remove common currency symbols\r\n        .replace(/\\s+/g, \"\") // Remove spaces\r\n        .trim()\r\n        .toUpperCase();\r\n    }\r\n\r\n    // Find currency info from your dynamic country list\r\n    const currencyInfo = countrySymbolList.find(\r\n      (country) =>\r\n        country.currency_code === cleanCurrency ||\r\n        country.currency_code === currency ||\r\n        country.currency_symbol === currency\r\n    );\r\n\r\n    if (currencyInfo) {\r\n      // Use the currency info from your database\r\n      try {\r\n        return new Intl.NumberFormat(\"en-US\", {\r\n          style: \"currency\",\r\n          currency: currencyInfo.currency_code,\r\n          minimumFractionDigits: 2,\r\n          maximumFractionDigits: 2,\r\n        }).format(numAmount);\r\n      } catch (error) {\r\n        // Fallback to manual formatting with your currency symbol\r\n        return `${currencyInfo.currency_symbol}${numAmount.toLocaleString(\r\n          \"en-US\",\r\n          {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n          }\r\n        )}`;\r\n      }\r\n    }\r\n\r\n    // Fallback: try with cleaned currency code\r\n    if (/^[A-Z]{3}$/.test(cleanCurrency)) {\r\n      try {\r\n        return new Intl.NumberFormat(\"en-US\", {\r\n          style: \"currency\",\r\n          currency: cleanCurrency,\r\n          minimumFractionDigits: 2,\r\n          maximumFractionDigits: 2,\r\n        }).format(numAmount);\r\n      } catch (error) {\r\n        console.warn(`Currency formatting error for ${currency}:`, error);\r\n      }\r\n    }\r\n\r\n    // Final fallback - default USD formatting\r\n    return `$${numAmount.toLocaleString(\"en-US\", {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    })}`;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"N/A\";\r\n    return new Date(dateString).toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  const confirmedInvestments = investorData.investments.filter(\r\n    (inv) => inv.request_confirm === \"Yes\"\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"fullpage d-block\">\r\n        <div className=\"d-flex align-items-start gap-0\">\r\n          <ModuleSideNav\r\n            isCollapsed={isCollapsed}\r\n            setIsCollapsed={setIsCollapsed}\r\n          />\r\n          <div\r\n            className={`global_view ${isCollapsed ? \"global_view_col\" : \"\"}`}\r\n          >\r\n            <TopBar />\r\n            <SectionWrapper className=\"d-block p-md-4 p-3\">\r\n              <div className=\"container-fluid\">\r\n                {/* Header */}\r\n                <div className=\"titleroom d-flex justify-content-between align-items-center border-bottom pb-3 mb-4\">\r\n                  <div>\r\n                    <h3 className=\"text-lg font-bold mb-1\">Investor Portal</h3>\r\n                    <p className=\"text-muted mb-0\">\r\n                      Company:{\" \"}\r\n                      {userLogin.companies && userLogin.companies[0]\r\n                        ? userLogin.companies[0].name\r\n                        : \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-end\">\r\n                    <small className=\"text-muted\">Total Investments</small>\r\n                    <h4 className=\"text-success mb-0\">\r\n                      {formatCurrency(investorData.stats.totalInvestment)}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Stats Cards */}\r\n                <div className=\"row g-3 mb-4\">\r\n                  <div className=\"col-md-3 col-6\">\r\n                    <div className=\"card border-0 shadow-sm h-100\">\r\n                      <div className=\"card-body\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"rounded-circle bg-primary bg-opacity-10 p-3 me-3\">\r\n                            <i className=\"fas fa-chart-line text-primary\"></i>\r\n                          </div>\r\n                          <div>\r\n                            <h6 className=\"card-subtitle mb-1 text-muted\">\r\n                              Confirmed\r\n                            </h6>\r\n                            <h4 className=\"card-title mb-0\">\r\n                              {investorData.stats.confirmedInvestments}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-3 col-6\">\r\n                    <div className=\"card border-0 shadow-sm h-100\">\r\n                      <div className=\"card-body\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"rounded-circle bg-success bg-opacity-10 p-3 me-3\">\r\n                            <i className=\"fas fa-dollar-sign text-success\"></i>\r\n                          </div>\r\n                          <div>\r\n                            <h6 className=\"card-subtitle mb-1 text-muted\">\r\n                              Total Amount\r\n                            </h6>\r\n                            <h4 className=\"card-title mb-0\">\r\n                              {formatCurrency(\r\n                                investorData.stats.totalInvestment\r\n                              )}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-3 col-6\">\r\n                    <div className=\"card border-0 shadow-sm h-100\">\r\n                      <div className=\"card-body\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"rounded-circle bg-info bg-opacity-10 p-3 me-3\">\r\n                            <i className=\"fas fa-share-alt text-info\"></i>\r\n                          </div>\r\n                          <div>\r\n                            <h6 className=\"card-subtitle mb-1 text-muted\">\r\n                              Total Shares\r\n                            </h6>\r\n                            <h4 className=\"card-title mb-0\">\r\n                              {investorData.stats.totalShares.toLocaleString()}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-3 col-6\">\r\n                    <div className=\"card border-0 shadow-sm h-100\">\r\n                      <div className=\"card-body\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"rounded-circle bg-warning bg-opacity-10 p-3 me-3\">\r\n                            <i className=\"fas fa-clock text-warning\"></i>\r\n                          </div>\r\n                          <div>\r\n                            <h6 className=\"card-subtitle mb-1 text-muted\">\r\n                              Pending\r\n                            </h6>\r\n                            <h4 className=\"card-title mb-0\">\r\n                              {investorData.stats.pendingRequests}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Main Content */}\r\n                <div className=\"card shadow-sm\">\r\n                  <div className=\"card-header bg-white d-flex justify-content-between align-items-center\">\r\n                    <h5 className=\"mb-0\">\r\n                      <i className=\"fas fa-users me-2\"></i>Investment Requests\r\n                    </h5>\r\n                    <button\r\n                      className=\"btn btn-sm btn-outline-primary\"\r\n                      onClick={fetchInvestorData}\r\n                      disabled={loading}\r\n                    >\r\n                      <i className=\"fas fa-sync-alt me-1\"></i>\r\n                      {loading ? \"Loading...\" : \"Refresh\"}\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"card-body\">\r\n                    {loading ? (\r\n                      <div className=\"text-center py-5\">\r\n                        <div\r\n                          className=\"spinner-border text-primary\"\r\n                          role=\"status\"\r\n                        >\r\n                          <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                        <p className=\"mt-3 text-muted\">\r\n                          Loading investment data...\r\n                        </p>\r\n                      </div>\r\n                    ) : error ? (\r\n                      <div className=\"alert alert-warning text-center\">\r\n                        <i className=\"fas fa-exclamation-triangle fa-2x mb-3\"></i>\r\n                        <h6>Error Loading Data</h6>\r\n                        <p>{error}</p>\r\n                        <button\r\n                          className=\"btn btn-sm btn-primary\"\r\n                          onClick={fetchInvestorData}\r\n                        >\r\n                          Try Again\r\n                        </button>\r\n                      </div>\r\n                    ) : investorData.investments.length === 0 ? (\r\n                      <div className=\"text-center py-5\">\r\n                        <i className=\"fas fa-inbox fa-3x text-muted mb-3\"></i>\r\n                        <h6>No Investment Requests Found</h6>\r\n                        <p className=\"text-muted\">\r\n                          There are no investment requests for this company yet.\r\n                        </p>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-hover\">\r\n                          <thead className=\"table-light\">\r\n                            <tr>\r\n                              <th>Investor Details</th>\r\n                              <th>Round/Company</th>\r\n                              <th>Investment</th>\r\n                              <th>Ownership</th>\r\n                              <th>Status</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {investorData.investments.map((investment) => (\r\n                              <tr key={investment.id}>\r\n                                <td>\r\n                                  <div>\r\n                                    <div className=\"fw-semibold\">\r\n                                      {investment.investor_name}\r\n                                    </div>\r\n                                    <div className=\"text-muted small\">\r\n                                      {investment.investor_email}\r\n                                    </div>\r\n                                    <div className=\"text-muted small\">\r\n                                      {investment.investor_phone}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div>\r\n                                    <div className=\"fw-semibold\">\r\n                                      {investment.nameOfRound}\r\n                                    </div>\r\n                                    <div className=\"text-muted small\">\r\n                                      {investment.company_name}\r\n                                    </div>\r\n                                    <div className=\"text-muted small\">\r\n                                      {investment.shareClassType}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div>\r\n                                    <div className=\"fw-semibold\">\r\n                                      {formatCurrency(\r\n                                        investment.investment_amount,\r\n                                        investment.currency\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"text-muted small\">\r\n                                      {parseFloat(\r\n                                        investment.shares\r\n                                      ).toLocaleString()}{\" \"}\r\n                                      shares\r\n                                    </div>\r\n                                    <div className=\"text-muted small\">\r\n                                      {investment.instrumentType}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  <div>\r\n                                    <div className=\"fw-semibold\">\r\n                                      {calculateOwnership(\r\n                                        investment.shares,\r\n                                        investment.issuedshares\r\n                                      )}\r\n                                      %\r\n                                    </div>\r\n                                    <div className=\"text-muted small\">\r\n                                      of{\" \"}\r\n                                      {parseFloat(\r\n                                        investment.issuedshares\r\n                                      ).toLocaleString()}\r\n                                    </div>\r\n                                  </div>\r\n                                </td>\r\n                                <td>\r\n                                  {getStatusBadge(investment.request_confirm)}\r\n                                </td>\r\n                                <td>\r\n                                  <div className=\"btn-group\" role=\"group\">\r\n                                    {investment.request_confirm === \"No\" && (\r\n                                      <>\r\n                                        <button\r\n                                          className=\"btn btn-sm btn-success\"\r\n                                          onClick={() =>\r\n                                            updateInvestmentStatus(\r\n                                              investment.id,\r\n                                              \"Yes\"\r\n                                            )\r\n                                          }\r\n                                          title=\"Approve\"\r\n                                        >\r\n                                          <i className=\"fas fa-check\"></i>\r\n                                        </button>\r\n                                        <button\r\n                                          className=\"btn btn-sm btn-danger\"\r\n                                          onClick={() =>\r\n                                            updateInvestmentStatus(\r\n                                              investment.id,\r\n                                              \"Rejected\"\r\n                                            )\r\n                                          }\r\n                                          title=\"Reject\"\r\n                                        >\r\n                                          <i className=\"fas fa-times\"></i>\r\n                                        </button>\r\n                                      </>\r\n                                    )}\r\n                                    <button\r\n                                      className=\"btn btn-sm btn-outline-info\"\r\n                                      onClick={() => {\r\n                                        /* View details logic */\r\n                                      }}\r\n                                      title=\"View Details\"\r\n                                    >\r\n                                      <i className=\"fas fa-eye\"></i>\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </SectionWrapper>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n"],"names":["InvestorReportPortal","useNavigate","storedUsername","localStorage","getItem","userLogin","JSON","parse","document","title","countrySymbolList","setCountrysymbollist","useState","isCollapsed","setIsCollapsed","activeTab","setActiveTab","loading","setLoading","error","setError","investorData","setInvestorData","investments","stats","totalInvestment","activeInvestments","totalShares","pendingRequests","confirmedInvestments","rejectedInvestments","apiURLInvestor","useEffect","getallcountrySymbolList","async","formData","id","respo","axios","post","apiUrlRound","headers","Accept","data","results","err","fetchInvestorData","company_id","companies","generateRes","console","updateInvestmentStatus","requestId","status","request_id","updated_by_id","message","alert","getStatusBadge","statusConfig","Yes","class","text","icon","No","Rejected","config","_jsxs","className","children","formatCurrency","amount","currency","arguments","length","undefined","isNaN","parseFloat","numAmount","cleanCurrency","replace","trim","toUpperCase","currencyInfo","find","country","currency_code","currency_symbol","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","toLocaleString","test","warn","filter","inv","request_confirm","_jsx","Wrapper","ModuleSideNav","TopBar","SectionWrapper","name","onClick","disabled","role","map","investment","investor_name","investor_email","investor_phone","nameOfRound","company_name","shareClassType","investment_amount","shares","instrumentType","issuedshares","toFixed","_Fragment","calculateOwnership"],"sourceRoot":""}
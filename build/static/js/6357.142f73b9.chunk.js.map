{"version":3,"file":"static/js/6357.142f73b9.chunk.js","mappings":"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","sources":["pages/AllFriends.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport { Leftsidebar } from \"../components/Leftsidebar\";\nimport user from \"../assets/images/pic.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nfunction AllFriends() {\n  const navigate = useNavigate();\n  const [refreshNotifications, setRefreshNotifications] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [Allfriend, setAllfriend] = useState([]);\n  const [Allfriend2, setAllfriend2] = useState([]);\n  const [AllRequest, setAllRequest] = useState([]);\n  const [AllFriendRequest, setAllFriendRequest] = useState([]);\n  const [LoginData, setLoginData] = useState(null);\n  var apiUrl = \"https://backend.amourette.no/api/profile/\";\n  var apiUrlMembers = \"https://backend.amourette.no/api/members/\";\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n\n    if (userLogin == null) {\n      navigate(\"/login\");\n    } else {\n      setLoginData(userLogin);\n      getAllFriend(userLogin.id);\n      getUsersFriendRequest(userLogin.id);\n    }\n  }, []);\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    getAllFriendfav();\n  }, []);\n\n  const notification = async () => {\n    setRefreshNotifications((prev) => !prev);\n  };\n  const getAllFriend = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getAllFriend\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      setAllfriend(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const getAllFriendfav = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getAllFriendfav\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      setAllfriend2(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const getUsersFriendRequest = async (id) => {\n    let formData = {\n      user_id: id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getUsersFriendRequest\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      setAllFriendRequest(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const handleConfirm = async (id, sentto) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      id: id,\n      user_id: userLogin.id,\n      sentto: sentto,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"AcceptRequest\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      getAllFriend(LoginData.id);\n      getUsersFriendRequest(LoginData.id);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Friend request accepted\");\n      setTimeout(() => {\n        setShowPopSuccess(false);\n\n        //onClose();\n      }, 1500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleCancel = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      id: id,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrlMembers + \"handlerequestcancel\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      getAllFriend(LoginData.id);\n      getUsersFriendRequest(LoginData.id);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Friend request canceled\");\n      setTimeout(() => {\n        setShowPopSuccess(false);\n\n        //onClose();\n      }, 1500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n\n    console.log(t(\"LeftMenu_yourprofile\")); // Testing translation\n  }, [i18n, t]);\n  const [showbtn, setshowbtn] = useState(true);\n  const [showbtn2, setshowbtn2] = useState(false);\n  const handleshowbttun = () => {\n    setshowbtn(true);\n    setshowbtn2(false);\n  };\n  const handleshowbttun2 = () => {\n    setshowbtn(false);\n    setshowbtn2(true);\n  };\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"inboxblock d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-3 sidefixedbox sticky-top h-100 d-none d-lg-block\">\n              <Leftsidebar />\n            </div>\n            <div className=\"col-lg-5\">\n              <div className=\"row gy-5\">\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-3 justify-content-start justify-content-start request_head\">\n                    <h6> {t(\"All_Friend\")}</h6>\n                    <div className=\"d-flex align-items-center gap-3 all-friend_btn\">\n                      <button\n                        type=\"button\"\n                        onClick={handleshowbttun}\n                        className={` ${showbtn ? \"active\" : \"\"}`}\n                      >\n                        {t(\"Everyone\")}\n                      </button>\n                      <button\n                        onClick={handleshowbttun2}\n                        className={` ${showbtn2 ? \"active\" : \"\"}`}\n                        type=\"button\"\n                      >\n                        {t(\"Favorites\")}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {showbtn && (\n                    <div className=\"row gy-2\">\n                      {Allfriend.length === 0 ? (\n                        <div className=\"col-12\">\n                          <p className=\"text-center\">{t(\"No_friends\")}</p>\n                        </div>\n                      ) : (\n                        Allfriend.map((friend) => (\n                          <div className=\"col-12\" key={friend.id}>\n                            {\" \"}\n                            {/* Assuming friend.id is unique */}\n                            <Link\n                              to={`/friend/${friend.id}`}\n                              className=\"all_formen d-flex flex-column flex-md-row gap-2 ps-md-0\"\n                            >\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"fromimg ofit rounded-2 overflow-hidden\">\n                                  {friend.profile_image &&\n                                  friend.makeImagePrivate === 0 ? ( // Display the image URL if available\n                                    <img\n                                      src={friend.profile_image} // Use the URL created from the file\n                                      alt=\"Selected\"\n                                    />\n                                  ) : (\n                                    <img\n                                      src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                      alt=\"Profile\"\n                                    />\n                                  )}\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <div className=\"d-flex flex-column gap-2 p-3\">\n                                  <div className=\"d-flex gap-3 align-items-center\">\n                                    <h3>{friend.username},</h3>\n                                    <h3>\n                                      {calculateAge(friend.birthday_date)}\n                                    </h3>\n                                  </div>\n                                  <h4>{friend.location}</h4>\n                                </div>\n                              </div>\n                            </Link>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  )}\n                  {showbtn2 && (\n                    <div className=\"row gy-2\">\n                      {Allfriend2.length === 0 ? (\n                        <div className=\"col-12\">\n                          <p className=\"text-center\">{t(\"No_friends\")}</p>\n                        </div>\n                      ) : (\n                        Allfriend2.map((friend) => (\n                          <div className=\"col-12\" key={friend.id}>\n                            {\" \"}\n                            {/* Assuming friend.id is unique */}\n                            <Link\n                              to={`/friend/${friend.id}`}\n                              className=\"all_formen d-flex flex-column flex-md-row gap-2 ps-md-0\"\n                            >\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"fromimg ofit rounded-2 overflow-hidden\">\n                                  {friend.profile_image &&\n                                  friend.makeImagePrivate === 0 ? ( // Display the image URL if available\n                                    <img\n                                      src={friend.profile_image} // Use the URL created from the file\n                                      alt=\"Selected\"\n                                    />\n                                  ) : (\n                                    <img\n                                      src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                      alt=\"Profile\"\n                                    />\n                                  )}\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <div className=\"d-flex flex-column gap-2 p-3\">\n                                  <div className=\"d-flex gap-3 align-items-center\">\n                                    <h3>{friend.username},</h3>\n                                    <h3>\n                                      {friend.gender === \"Couple\"\n                                        ? friend.birthday_date &&\n                                          friend.birthday_date_her\n                                          ? `${calculateAge(\n                                              friend.birthday_date\n                                            )} & ${calculateAge(\n                                              friend.birthday_date_her\n                                            )}`\n                                          : \"\"\n                                        : friend.birthday_date\n                                        ? `${calculateAge(\n                                            friend.birthday_date\n                                          )}`\n                                        : \"\"}\n                                    </h3>\n                                  </div>\n                                  <h4>{friend.location}</h4>\n                                </div>\n                              </div>\n                            </Link>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"row gy-5 \">\n                <div className=\"col-12\">\n                  <div className=\"d-flex justify-content-start justify-content-start request_head\">\n                    <h6>{t(\"Friend_Request\")}</h6>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"row gy-2 \">\n                    <div className=\"row\">\n                      {AllFriendRequest.length === 0 ? (\n                        <div className=\"col-12\">\n                          <p className=\"text-center\">\n                            {t(\"No_friend_requests_found\")}\n                          </p>\n                        </div>\n                      ) : (\n                        AllFriendRequest.map((request) => (\n                          <div className=\"col-12\" key={request.id}>\n                            <div className=\"friend_formen w-100 p-3\">\n                              <div className=\"d-flex w-100 flex-column align-items-start justify-content-between gap-3\">\n                                <Link\n                                  to={`/singlesearch/${request.user_id}`} // Assuming user_id is used for the link\n                                  className=\"d-flex flex-md-row gap-2\"\n                                >\n                                  <div className=\"flex-shrink-0\">\n                                    <div className=\"fromimg ofit rounded-2 overflow-hidden\">\n                                      {request.profile_image &&\n                                      request.makeImagePrivate === 0 ? ( // Display the image URL if available\n                                        <img\n                                          src={request.profile_image} // Use the URL created from the file\n                                          alt=\"Selected\"\n                                        />\n                                      ) : (\n                                        <img\n                                          src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                          alt=\"Profile\"\n                                        />\n                                      )}\n                                    </div>\n                                  </div>\n                                  <div className=\"flex-grow-1\">\n                                    <div className=\"d-flex flex-column gap-2 p-3\">\n                                      <div className=\"d-flex gap-3 align-items-center\">\n                                        <h3>{request.username},</h3>{\" \"}\n                                        {/* Replace with actual username */}\n                                        <h3>\n                                          {request.gender === \"Couple\"\n                                            ? request.birthday_date &&\n                                              request.birthday_date_her\n                                              ? `${calculateAge(\n                                                  request.birthday_date\n                                                )} & ${calculateAge(\n                                                  request.birthday_date_her\n                                                )}`\n                                              : \"\"\n                                            : request.birthday_date\n                                            ? `${calculateAge(\n                                                request.birthday_date\n                                              )}`\n                                            : \"\"}\n                                        </h3>\n                                        {/* Function to calculate age */}\n                                      </div>\n                                      <h4>\n                                        {request.location ||\n                                          \"Location not provided\"}\n                                      </h4>{\" \"}\n                                      {/* Replace with actual location */}\n                                    </div>\n                                  </div>\n                                </Link>\n                                <div className=\"d-flex justify-content-between gap-2 globe_btnn bg-transprent\">\n                                  <button\n                                    className=\"accept_btn allfrd\"\n                                    onClick={() =>\n                                      handleConfirm(\n                                        request.frq_id,\n                                        request.sentid\n                                      )\n                                    }\n                                  >\n                                    {t(\"Accept\")}\n                                  </button>{\" \"}\n                                  {/* Function to handle confirmation */}\n                                  <button\n                                    className=\"reject_btn allfrd\"\n                                    onClick={() => handleCancel(request.frq_id)}\n                                  >\n                                    {t(\"DECLINE_REQUEST\")}\n                                  </button>{\" \"}\n                                  {/* Function to handle cancellation */}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default AllFriends;\n"],"names":["navigate","useNavigate","refreshNotifications","setRefreshNotifications","useState","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","Allfriend","setAllfriend","Allfriend2","setAllfriend2","AllRequest","setAllRequest","AllFriendRequest","setAllFriendRequest","LoginData","setLoginData","apiUrl","useEffect","storedUsername","localStorage","getItem","userLogin","JSON","parse","getAllFriend","id","getUsersFriendRequest","getAllFriendfav","async","formData","user_id","console","log","respo","axios","post","headers","Accept","data","results","err","response","request","error","message","calculateAge","birthday","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","t","useTranslation","savedLanguage","i18n","language","changeLanguage","showbtn","setshowbtn","showbtn2","setshowbtn2","_jsxs","_Fragment","children","_jsx","Headertwo","SuccessPop","className","Leftsidebar","type","onClick","handleshowbttun","handleshowbttun2","length","map","friend","Link","to","profile_image","makeImagePrivate","src","alt","require","username","birthday_date","location","gender","birthday_date_her","sentto","setTimeout","handleConfirm","frq_id","sentid","apiUrlMembers","handleCancel"],"sourceRoot":""}
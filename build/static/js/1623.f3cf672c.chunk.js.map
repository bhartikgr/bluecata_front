{"version":3,"file":"static/js/1623.f3cf672c.chunk.js","mappings":"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","sources":["pages/User/Crm/InvestorViewDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport TopBar from \"../../../components/Users/TopBar\";\r\nimport ModuleSideNav from \"../../../components/Users/ModuleSideNav.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../../components/Styles/MainHeadStyles.js\";\r\nimport {\r\n  ModalContainer1,\r\n  ModalTitle,\r\n  DropArea,\r\n  ModalBtn,\r\n  ButtonGroup,\r\n} from \"../../../components/Styles/DataRoomStyle.js\";\r\nimport { IoCloseCircleOutline } from \"react-icons/io5\";\r\nimport axios from \"axios\";\r\nimport { FaDownload, FaEye } from \"react-icons/fa\"; // FontAwesome icons\r\nimport ViewInvestorEndRecordRound from \"../../../components/Users/popup/ViewInvestorEndRecordRound\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nexport default function InvestorViewDetails() {\r\n  const navigate = useNavigate();\r\n\r\n  const storedUsername = localStorage.getItem(\"SignatoryLoginData\");\r\n  const [ViewRecordRounds, setViewRecordRounds] = useState(false);\r\n  const userLogin = JSON.parse(storedUsername);\r\n  const [records, setrecords] = useState([]);\r\n  const [errr, seterrr] = useState(false);\r\n  const [recordViewData, setrecordViewData] = useState(\"\");\r\n  const [InvestorInfo, setInvestorInfo] = useState(\"\");\r\n  const [messagesuccessError, setmessagesuccessError] = useState(\"\");\r\n  const [InvestorAllRoundRecordData, setInvestorAllRoundRecordData] =\r\n    useState(null);\r\n  var apiURLInvestor = \"https://blueprintcatalyst.com/api/user/investor/\";\r\n  document.title = \"Investor Information\";\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    checkInvestor();\r\n    getInvestorReportCapitalRound();\r\n  }, []);\r\n\r\n  const checkInvestor = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      id: id,\r\n    };\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"checkInvestorRecordround\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (generateRes.data.results.length === 0) {\r\n        navigate(\"/crm/investorreport\");\r\n      } else {\r\n        setInvestorInfo(generateRes.data.results[0]);\r\n      }\r\n      // setrecords(generateRes.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n\r\n  const getInvestorReportCapitalRound = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      investor_id: id,\r\n    };\r\n    try {\r\n      const resp = await axios.post(\r\n        apiURLInvestor + \"getInvestorReportCapitalRound\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setrecords(resp.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n\r\n  const handleviewData = (dataa) => {\r\n    setViewRecordRounds(true);\r\n    setrecordViewData(dataa);\r\n  };\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  // Filter data by nameofreport (case insensitive)\r\n  const filteredData = records.filter((item) => {\r\n    const search = searchText.toLowerCase();\r\n\r\n    // Combine all searchable fields into one string\r\n    const combinedFields = `\r\n    ${item.nameOfRound || \"\"}\r\n    ${item.shareClassType || \"\"}\r\n     ${item.roundsize || \"\"}\r\n    ${item.issuedshares || \"\"}\r\n    ${item.description || \"\"}\r\n    ${item.instrumentType || \"\"}\r\n    ${item.customInstrument || \"\"}\r\n    ${item.roundsize || \"\"}\r\n    ${item.issuedshares || \"\"}\r\n    ${item.liquidationpreferences || \"\"}\r\n  `.toLowerCase();\r\n\r\n    return combinedFields.includes(search);\r\n  });\r\n\r\n  function formatCurrentDate(input) {\r\n    const date = new Date(input);\r\n\r\n    if (isNaN(date)) return \"\";\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n\r\n    const getOrdinal = (n) => {\r\n      if (n >= 11 && n <= 13) return \"th\";\r\n      switch (n % 10) {\r\n        case 1:\r\n          return \"st\";\r\n        case 2:\r\n          return \"nd\";\r\n        case 3:\r\n          return \"rd\";\r\n        default:\r\n          return \"th\";\r\n      }\r\n    };\r\n\r\n    return `${month} ${day}${getOrdinal(day)}, ${year}`;\r\n  }\r\n  const handleDownload = async (url) => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  //Share Report\r\n\r\n  //Due diligence Record\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleOpen = () => setIsOpen(true);\r\n  let files = [];\r\n\r\n  // Ensure we have an array\r\n  if (InvestorInfo.kyc_document) {\r\n    if (Array.isArray(InvestorInfo.kyc_document)) {\r\n      try {\r\n        // Try parsing first element if it looks like JSON\r\n        files = JSON.parse(InvestorInfo.kyc_document[0]);\r\n      } catch (e) {\r\n        // fallback: it's already an array of strings\r\n        files = InvestorInfo.kyc_document;\r\n      }\r\n    } else {\r\n      // single string case\r\n      try {\r\n        files = JSON.parse(InvestorInfo.kyc_document);\r\n      } catch (e) {\r\n        files = [InvestorInfo.kyc_document];\r\n      }\r\n    }\r\n  }\r\n\r\n  const isImage = (file) => {\r\n    return /\\.(jpg|jpeg|png|gif)$/i.test(file);\r\n  };\r\n  //Record get\r\n  useEffect(() => {\r\n    getInvestorAllRoundRecord();\r\n  }, []);\r\n\r\n  const getInvestorAllRoundRecord = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      investor_id: id,\r\n    };\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"getInvestorAllRoundRecord\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      console.log(generateRes.data);\r\n      setInvestorAllRoundRecordData(generateRes.data);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  //Record get\r\n  const baseUrl =\r\n    \"https://blueprintcatalyst.com/api/upload/investor/inv_\" +\r\n    InvestorInfo.investor_id;\r\n  return (\r\n    <>\r\n      <>\r\n        <Wrapper>\r\n          <div className=\"fullpage d-block\">\r\n            <div className=\"d-flex align-items-start gap-0\">\r\n              <ModuleSideNav\r\n                isCollapsed={isCollapsed}\r\n                setIsCollapsed={setIsCollapsed}\r\n              />\r\n              <div\r\n                className={`global_view ${\r\n                  isCollapsed ? \"global_view_col\" : \"\"\r\n                }`}\r\n              >\r\n                <TopBar />\r\n                <SectionWrapper className=\"d-block p-md-4 p-3\">\r\n                  <div className=\"container-fluid\">\r\n                    {messagesuccessError && (\r\n                      <p\r\n                        className={errr ? \"mt-3 error_pop\" : \"success_pop mt-3\"}\r\n                      >\r\n                        {messagesuccessError}\r\n                      </p>\r\n                    )}\r\n\r\n                    {/* --- REPORT SUMMARY CARDS --- */}\r\n                    <div className=\"titleroom d-flex justify-content-between align-items-center border-bottom pb-3\">\r\n                      <h3 className=\"text-lg font-bold mb-2\">\r\n                        Investor Information\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      <div className=\"row g-3\">\r\n                        {/* Card 1 */}\r\n                        <div className=\"col-md-12 col-sm-12\">\r\n                          <div\r\n                            className=\"card shadow-sm border-0 py-4\"\r\n                            style={{ borderRadius: \"10px\" }}\r\n                          >\r\n                            <p className=\"mb-3\">\r\n                              <strong className=\"mainh2\">\r\n                                Investor Information :\r\n                              </strong>{\" \"}\r\n                              <span className=\"mainp\" style={{ color: \"red\" }}>\r\n                                {InvestorInfo.first_name}{\" \"}\r\n                                {InvestorInfo.last_name}\r\n                              </span>{\" \"}\r\n                            </p>\r\n\r\n                            <table className=\"global_table mb-0\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Register Company Name : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.company_name}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Type of Investor : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.type_of_investor}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Contact (EMAIL) : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.email}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Contact (MOBILE) : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.phone}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>City : </strong>\r\n                                    <span>{InvestorInfo.city}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Country : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.country}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Ip Address : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.ip_address}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      LinkedIn or Professional Profile:\r\n                                    </strong>{\" \"}\r\n                                    <span>{InvestorInfo.linkedIn_profile}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      Contact (Full Mailing Address) :{\" \"}\r\n                                    </strong>{\" \"}\r\n                                    <span>{InvestorInfo.full_address}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Country of Tax Residency : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.country_tax}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Tax ID or National ID : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.tax_id}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"d-flex align-items-center gap-2 w-100\">\r\n                                    <strong>KYC/AML Documentation : </strong>{\" \"}\r\n                                    <span>\r\n                                      {InvestorInfo.kyc_document &&\r\n                                        InvestorInfo.kyc_document.length >\r\n                                          0 && (\r\n                                          <div className=\"\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn btn-sm btn-outline-success fw-bold\"\r\n                                              onClick={handleOpen}\r\n                                            >\r\n                                              <FaEye></FaEye> View Document\r\n                                            </button>\r\n                                          </div>\r\n                                        )}\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Accredited Status : </strong>{\" \"}\r\n                                    <span>\r\n                                      {InvestorInfo.accredited_status}\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      LinkedIn or Professional Profile :{\" \"}\r\n                                    </strong>{\" \"}\r\n                                    <span>{InvestorInfo.linkedIn_profile}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Industry Expertise : </strong>{\" \"}\r\n                                    <span>\r\n                                      {InvestorInfo.industry_expertise}\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Notes:</strong>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                            <hr />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </SectionWrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Wrapper>\r\n        {ViewRecordRounds && (\r\n          <ViewInvestorEndRecordRound\r\n            onClose={() => setViewRecordRounds(false)}\r\n            recordViewData={recordViewData}\r\n          />\r\n        )}\r\n        {isOpen && (\r\n          <div className=\"main_popup-overlay\">\r\n            <ModalContainer1>\r\n              <div className=\"d-flex align-items-center gap-3 mb-4 justify-content-between\">\r\n                <ModalTitle>View KYC/AML Documentation</ModalTitle>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close_btn_global\"\r\n                  aria-label=\"Close\"\r\n                  onClick={() => setIsOpen(false)}\r\n                >\r\n                  <IoCloseCircleOutline size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              {/* Images container */}\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  gap: \"10px\",\r\n                  maxHeight: \"60vh\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                {files.map((file, index) => {\r\n                  const fileUrl = `${baseUrl}/${file}`;\r\n                  return isImage(file) ? (\r\n                    <img\r\n                      key={index}\r\n                      src={fileUrl}\r\n                      alt={`Document ${index + 1}`}\r\n                      style={{\r\n                        maxWidth: \"200px\",\r\n                        maxHeight: \"200px\",\r\n                        objectFit: \"contain\",\r\n                        border: \"1px solid #ddd\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"4px\",\r\n                        background: \"#f9f9f9\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <a\r\n                      key={index}\r\n                      href={fileUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"btn btn-primary\"\r\n                      style={{ margin: \"5px\" }}\r\n                    >\r\n                      Open Document {index + 1}\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              <ButtonGroup>\r\n                <ModalBtn\r\n                  onClick={() => setIsOpen(false)}\r\n                  className=\"close_btn w-fit\"\r\n                >\r\n                  Close\r\n                </ModalBtn>\r\n              </ButtonGroup>\r\n            </ModalContainer1>\r\n          </div>\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n"],"names":["InvestorViewDetails","navigate","useNavigate","storedUsername","localStorage","getItem","ViewRecordRounds","setViewRecordRounds","useState","userLogin","JSON","parse","records","setrecords","errr","seterrr","recordViewData","setrecordViewData","InvestorInfo","setInvestorInfo","messagesuccessError","setmessagesuccessError","InvestorAllRoundRecordData","setInvestorAllRoundRecordData","apiURLInvestor","document","title","id","useParams","useEffect","checkInvestor","getInvestorReportCapitalRound","async","formData","company_id","companies","generateRes","axios","post","headers","Accept","data","results","length","err","console","error","investor_id","resp","searchText","setSearchText","filter","item","search","toLowerCase","nameOfRound","shareClassType","roundsize","issuedshares","description","instrumentType","customInstrument","liquidationpreferences","includes","isCollapsed","setIsCollapsed","isOpen","setIsOpen","files","kyc_document","Array","isArray","e","getInvestorAllRoundRecord","log","baseUrl","_jsx","_Fragment","children","_jsxs","Wrapper","className","ModuleSideNav","TopBar","SectionWrapper","style","borderRadius","color","first_name","last_name","company_name","type_of_investor","email","phone","city","country","ip_address","linkedIn_profile","full_address","country_tax","tax_id","type","onClick","handleOpen","FaEye","accredited_status","industry_expertise","ViewInvestorEndRecordRound","onClose","ModalContainer1","ModalTitle","IoCloseCircleOutline","size","display","flexWrap","gap","maxHeight","overflowY","map","file","index","fileUrl","test","isImage","src","alt","maxWidth","objectFit","border","padding","background","href","target","rel","margin","ButtonGroup","ModalBtn"],"sourceRoot":""}
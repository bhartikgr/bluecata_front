{"version":3,"file":"static/js/5901.c7f55ba3.chunk.js","mappings":"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","sources":["components/Admin/DangerAlertPopup.jsx","pages/User/Investor/RecordRoundList.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nfunction DangerAlertPopup({ message, onConfirm, onCancel }) {\n  const modalRef = useRef(null);\n  const confirmButtonRef = useRef(null);\n\n  // Handle escape key and focus management\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === \"Escape\") onCancel();\n      if (e.key === \"Enter\") onConfirm();\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    confirmButtonRef.current.focus();\n\n    // Prevent body scrolling when modal is open\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.style.overflow = \"unset\";\n    };\n  }, [onConfirm, onCancel]);\n\n  return (\n    <div\n      className=\"modal-backdrop\"\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        zIndex: 9999,\n        opacity: 0,\n        animation: \"fadeIn 0.3s ease-out forwards\",\n        backdropFilter: \"blur(4px)\",\n        WebkitBackdropFilter: \"blur(4px)\",\n      }}\n      onClick={onCancel}\n    >\n      <div\n        ref={modalRef}\n        className=\"modal-content\"\n        style={{\n          backgroundColor: \"white\",\n          padding: \"2rem\",\n          borderRadius: \"12px\",\n          boxShadow:\n            \"0 10px 30px rgba(0, 0, 0, 0.15), 0 0 10px rgba(220, 53, 69, 0.2)\",\n          maxWidth: \"450px\",\n          width: \"90%\",\n          transform: \"scale(0.9) translateY(-20px)\",\n          animation: \"scaleIn 0.3s ease-out forwards\",\n          border: \"1px solid rgba(220, 53, 69, 0.2)\",\n        }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div\n          className=\"modal-icon\"\n          style={{\n            textAlign: \"center\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          <svg\n            width=\"56\"\n            height=\"56\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{ color: \"#dc3545\" }}\n          >\n            <path\n              d=\"M12 9V14M12 17V17.01M5.07183 19H18.9282C20.4678 19 21.4301 17.3333 20.6603 16L13.7321 4C12.9623 2.66667 11.0378 2.66667 10.268 4L3.33978 16C2.56998 17.3333 3.53223 19 5.07183 19Z\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </div>\n\n        <h3\n          className=\"modal-title\"\n          style={{\n            textAlign: \"center\",\n            margin: \"0 0 1rem 0\",\n            color: \"#dc3545\",\n            fontSize: \"1.5rem\",\n            fontWeight: \"600\",\n          }}\n        >\n          Confirm Action\n        </h3>\n\n        <p\n          className=\"modal-message\"\n          style={{\n            textAlign: \"center\",\n            margin: \"0 0 2rem 0\",\n            color: \"#495057\",\n            fontSize: \"1rem\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {message}\n        </p>\n\n        <div\n          className=\"modal-actions\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: \"1rem\",\n          }}\n        >\n          <button\n            type=\"button\"\n            className=\"btn-cancel\"\n            onClick={onCancel}\n            style={{\n              padding: \"0.75rem 1.5rem\",\n              backgroundColor: \"#f8f9fa\",\n              color: \"#495057\",\n              border: \"1px solid #dee2e6\",\n              borderRadius: \"6px\",\n              fontWeight: \"500\",\n              fontSize: \"1rem\",\n              cursor: \"pointer\",\n              transition: \"all 0.2s ease\",\n              minWidth: \"100px\",\n            }}\n            onMouseOver={(e) => {\n              e.target.style.backgroundColor = \"#e9ecef\";\n              e.target.style.transform = \"translateY(-2px)\";\n            }}\n            onMouseOut={(e) => {\n              e.target.style.backgroundColor = \"#f8f9fa\";\n              e.target.style.transform = \"translateY(0)\";\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn-confirm\"\n            ref={confirmButtonRef}\n            onClick={onConfirm}\n            style={{\n              padding: \"0.75rem 1.5rem\",\n              backgroundColor: \"#dc3545\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"6px\",\n              fontWeight: \"500\",\n              fontSize: \"1rem\",\n              cursor: \"pointer\",\n              transition: \"all 0.2s ease\",\n              minWidth: \"100px\",\n              boxShadow: \"0 4px 6px rgba(220, 53, 69, 0.3)\",\n            }}\n            onMouseOver={(e) => {\n              e.target.style.backgroundColor = \"#bd2130\";\n              e.target.style.transform = \"translateY(-2px)\";\n              e.target.style.boxShadow = \"0 6px 8px rgba(220, 53, 69, 0.4)\";\n            }}\n            onMouseOut={(e) => {\n              e.target.style.backgroundColor = \"#dc3545\";\n              e.target.style.transform = \"translateY(0)\";\n              e.target.style.boxShadow = \"0 4px 6px rgba(220, 53, 69, 0.3)\";\n            }}\n          >\n            Confirm\n          </button>\n        </div>\n      </div>\n\n      <style>\n        {`\n          @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n          }\n          \n          @keyframes scaleIn {\n            from { \n              transform: scale(0.9) translateY(-20px);\n              opacity: 0;\n            }\n            to { \n              transform: scale(1) translateY(0);\n              opacity: 1;\n            }\n          }\n          \n          .btn-cancel:focus, .btn-confirm:focus {\n            outline: 2px solid #3d8bfd;\n            outline-offset: 2px;\n          }\n        `}\n      </style>\n    </div>\n  );\n}\n\nexport default DangerAlertPopup;\n","import React, { useState, useEffect } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport TopBar from \"../../../components/Users/TopBar\";\r\nimport ModuleSideNav from \"../../../components/Users/ModuleSideNav.jsx\";\r\nimport { IoCloseCircleOutline } from \"react-icons/io5\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../../components/Styles/MainHeadStyles.js\";\r\nimport { DataRoomSection } from \"../../../components/Styles/DataRoomStyle.js\";\r\nimport axios from \"axios\";\r\nimport { FaEye, FaEdit, FaLock, FaUnlock } from \"react-icons/fa\"; // FontAwesome icons\r\nimport DangerAlertPopup from \"../../../components/Admin/DangerAlertPopup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../../../components/Styles/MainStyle.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport stripePromise from \"../../../config/stripe\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport ViewRecordRound from \"../../../components/Users/popup/ViewRecordRound\";\r\nimport AirwallexPaymentPopupOneTimeDataroom from \"../../../components/Users/AirwallexPaymentPopupOneTimeDataroom.jsx\";\r\nexport default function RecordRoundList() {\r\n  const navigate = useNavigate();\r\n  const storedUsername = localStorage.getItem(\"SignatoryLoginData\");\r\n  const userLogin = JSON.parse(storedUsername);\r\n  const [records, setrecords] = useState([]);\r\n  const [authorizedData, setAuthorizedData] = useState(null);\r\n  const [messagesuccessError, setmessagesuccessError] = useState(\"\");\r\n  const [errr, seterrr] = useState(false);\r\n  const [dangerMessage, setdangerMessage] = useState(\"\");\r\n  var apiURLInvestor = \"https://blueprintcatalyst.com/api/user/investor/\";\r\n  const apiURLSignature = \"https://blueprintcatalyst.com/api/user/\";\r\n  const [LockId, setLockId] = useState(\"\");\r\n  document.title = \"Investment Rounds Overview\";\r\n\r\n  const customStyles = {\r\n    table: {\r\n      style: {\r\n        border: \"1px solid #dee2e6\",\r\n        borderRadius: \"12px\",\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        backgroundColor: \"#efefef\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"0.8rem\",\r\n        color: \"#000\",\r\n        textTransform: \"uppercase\",\r\n        whiteSpace: \"nowrap\",\r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"0.8rem\",\r\n        fontWeight: \"500\",\r\n      },\r\n      stripedStyle: {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"15px\",\r\n        backgroundColor: \"#fafafa\",\r\n        padding: \"12px 16px\",\r\n      },\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    getAuthorizedSignature();\r\n  }, []);\r\n  const getAuthorizedSignature = async () => {\r\n    let formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      user_id: userLogin.id,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiURLSignature + \"getAuthorizedSignature\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const checkData = res.data.results;\r\n      if (checkData.length > 0) {\r\n        setAuthorizedData(checkData[0]);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  useEffect(() => {\r\n    getreports();\r\n  }, []);\r\n\r\n  const getreports = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"getrecordRoundList\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setrecords(generateRes.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n\r\n  // Toggle a row\r\n\r\n  // Select/Deselect all\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Share Class (Name of Round)\",\r\n      selector: (row) => row.shareClassType + \" \" + row.nameOfRound,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Target Raise Amount\",\r\n      selector: (row) => {\r\n        const amount = row.roundsize ? Number(row.roundsize) : 0;\r\n        const currency = row.currency || \"\"; // e.g., ₹ or $\r\n        const formattedAmount = amount.toLocaleString(\"en-IN\", {\r\n          minimumFractionDigits: 2,\r\n          maximumFractionDigits: 2,\r\n        });\r\n        return `${currency} ${formattedAmount}`;\r\n      },\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Number of Shares\",\r\n      selector: (row) => {\r\n        const formattedAmount = Number(row.issuedshares).toLocaleString(\r\n          \"en-IN\",\r\n          {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n          }\r\n        );\r\n        return `${formattedAmount}`;\r\n      },\r\n      sortable: true,\r\n    },\r\n\r\n    {\r\n      name: \"Status of Round\",\r\n      selector: (row) => row.dateroundclosed,\r\n      sortable: true,\r\n      cell: (row) => {\r\n        const isActive = row.roundStatus === \"ACTIVE\";\r\n        const displayText = isActive\r\n          ? \"ACTIVE\"\r\n          : `CLOSED: ${formatCurrentDate(row.dateroundclosed)}`;\r\n\r\n        return (\r\n          <span\r\n            style={{\r\n              padding: \"4px 12px\",\r\n              borderRadius: \"12px\",\r\n              fontWeight: \"600\",\r\n              color: isActive ? \"#065f46\" : \"#b91c1c\", // green or red text\r\n              backgroundColor: isActive ? \"#d1fae5\" : \"#fee2e2\", // green or red bg\r\n              fontSize: \"12px\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            {displayText}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => {\r\n        // Check if the signature is approved or if user is Owner\r\n        const isApproved =\r\n          userLogin.role === \"owner\" || authorizedData?.approve === \"Yes\";\r\n\r\n        if (!isApproved) {\r\n          // If not approved and not Owner, show a disabled message\r\n          return (\r\n            <span\r\n              style={{\r\n                padding: \"4px 12px\",\r\n                borderRadius: \"12px\",\r\n                fontWeight: \"600\",\r\n                color: \"#b91c1c\",\r\n                backgroundColor: \"#fee2e2\",\r\n                fontSize: \"12px\",\r\n                display: \"inline-block\",\r\n              }}\r\n            >\r\n              Pending Approval\r\n            </span>\r\n          );\r\n        }\r\n\r\n        // If approved (or Owner), show the normal action buttons\r\n        const isActive = row.roundStatus === \"ACTIVE\";\r\n\r\n        return (\r\n          <div className=\"d-flex gap-2\">\r\n            {/* Show Edit only if round is ACTIVE */}\r\n            <button\r\n              className=\"icon_btn green_clr\"\r\n              onClick={() => handleViewsection(row)}\r\n              title=\"Lock The Document For Sharing\"\r\n            >\r\n              <FaEye /> View\r\n            </button>\r\n            {isActive && row.is_shared === \"No\" && row.is_shared === \"No\" && (\r\n              <Link\r\n                to={`/edit-record-round/${row.id}`}\r\n                title=\"View Record Round\"\r\n                className=\"icon_btn green_clr\"\r\n              >\r\n                <FaEdit /> Edit\r\n              </Link>\r\n            )}\r\n\r\n            {row.is_locked === \"Yes\" || row.is_shared === \"Yes\" ? (\r\n              <button className=\"icon_btn red_clr\" title=\"Locked\" disabled>\r\n                <FaLock /> Locked\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"icon_btn red_clr\"\r\n                onClick={() => handlelockreport(row.id)}\r\n                title=\"Lock The Document For Sharing\"\r\n              >\r\n                <FaUnlock /> Unlock\r\n              </button>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n      width: \"200px\",\r\n    },\r\n  ];\r\n  const [ViewRecordRounds, setViewRecordRounds] = useState(false);\r\n  const [recordViewData, setrecordViewData] = useState(\"\");\r\n  const handleViewsection = (rowdata) => {\r\n    setrecordViewData(rowdata);\r\n    setViewRecordRounds(true);\r\n  };\r\n  const handlelockreport = async (Id) => {\r\n    setLockId(Id);\r\n    setdangerMessage(\r\n      \"Are you sure? Once locked, this document cannot be unlocked.\"\r\n    );\r\n  };\r\n  const handleConfirm = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      lock_id: LockId,\r\n    };\r\n    console.log(formData);\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"recordRoundLock\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      setdangerMessage(\"\");\r\n      setmessagesuccessError(generateRes.data.message);\r\n      getreports();\r\n      setTimeout(() => {\r\n        setmessagesuccessError(\"\");\r\n      }, 3500);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const conditionalRowStyles = [\r\n    {\r\n      when: (row) => true, // apply to all rows\r\n      style: {\r\n        \"&:hover\": {\r\n          backgroundColor: \"var(--lightRed)\", // apna hover color\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  // Filter data by nameofreport (case insensitive)\r\n  const filteredData = records.filter((item) => {\r\n    const text = (searchText || \"\").toLowerCase();\r\n    return (\r\n      (item.shareClassType || \"\").toLowerCase().includes(text) ||\r\n      (item.nameOfRound || \"\").toLowerCase().includes(text) ||\r\n      (item.currency || \"\").toLowerCase().includes(text) ||\r\n      (item.issuedshares || \"\").toLowerCase().includes(text)\r\n    );\r\n  });\r\n\r\n  function formatCurrentDate(input) {\r\n    const date = new Date(input);\r\n\r\n    if (isNaN(date)) return \"\";\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n\r\n    const getOrdinal = (n) => {\r\n      if (n >= 11 && n <= 13) return \"th\";\r\n      switch (n % 10) {\r\n        case 1:\r\n          return \"st\";\r\n        case 2:\r\n          return \"nd\";\r\n        case 3:\r\n          return \"rd\";\r\n        default:\r\n          return \"th\";\r\n      }\r\n    };\r\n\r\n    return `${month} ${day}${getOrdinal(day)}, ${year}`;\r\n  }\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  //Share Report\r\n\r\n  //Payment\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const handleClosepayPopup = () => {\r\n    setShowPopup(false);\r\n    setshowPopupPerInstance(false);\r\n    setpaynowOneTime(false);\r\n  };\r\n  const [showPopupPerInstance, setshowPopupPerInstance] = useState(false);\r\n  const [paynowOneTime, setpaynowOneTime] = useState(false);\r\n  const [payinfo, setpayinfo] = useState(true);\r\n  const [getDataroompay, setgetDataroompay] = useState(\"\");\r\n  const [PayidOnetime, setPayidOnetime] = useState(\"\");\r\n  const [paymentType, setpaymentType] = useState(\"Onetime\");\r\n  var apiURLAiFile = \"https://blueprintcatalyst.com/api/user/aifile/\";\r\n  const apiUrlModule = \"https://blueprintcatalyst.com/api/admin/module/\";\r\n  useEffect(() => {\r\n    getDataroompayment();\r\n  }, []);\r\n  const getDataroompayment = async () => {\r\n    let formData = {\r\n      user_id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlModule + \"getDataroompayment\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n      var respo = res.data.row;\r\n\r\n      setgetDataroompay(respo[0]);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const CheckoutForm = ({ payment, referstatus }) => {\r\n    const [mainamount, setmainamount] = useState(payment);\r\n    const [refers, setrefers] = useState(referstatus);\r\n    const stripe = useStripe();\r\n    const [discount, setdiscount] = useState(\"\");\r\n    const [referalCode, setreferalCode] = useState(\"\");\r\n    const elements = useElements();\r\n    const [buttonPay, setbuttonPay] = useState(\"\");\r\n    const [spinners, setspinners] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [err, seterr] = useState(false);\r\n    const [ClientIP, setClientIP] = useState(\"\");\r\n    setTimeout(() => {\r\n      setMessage(\"\");\r\n    }, 5000);\r\n    useEffect(() => {\r\n      const getIP = async () => {\r\n        try {\r\n          const res = await fetch(\"https://api.ipify.org?format=json\");\r\n          const data = await res.json();\r\n          setClientIP(data.ip); // Save this to state\r\n        } catch (error) {\r\n          console.error(\"Failed to fetch IP\", error);\r\n        }\r\n      };\r\n\r\n      getIP();\r\n    }, []);\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (!stripe || !elements) return;\r\n\r\n      const cardElement = elements.getElement(CardElement);\r\n      if (!cardElement) {\r\n        setMessage(\"Payment form is not ready. Please reload the page.\");\r\n        seterr(true);\r\n        return;\r\n      }\r\n\r\n      // 🔹 Validate card fields before proceeding\r\n      const { error: cardError } = await stripe.createPaymentMethod({\r\n        type: \"card\",\r\n        card: cardElement,\r\n      });\r\n\r\n      if (cardError) {\r\n        setMessage(cardError.message || \"Invalid card details.\");\r\n        seterr(true);\r\n        return;\r\n      }\r\n\r\n      setspinners(true);\r\n\r\n      try {\r\n        // 🔹 Get clientSecret (or free plan info) from backend\r\n        const { data } = await axios.post(\r\n          `${apiURLAiFile}CreateuserSubscriptionDataRoomCheck`,\r\n          {\r\n            company_id: userLogin.companies[0].id,\r\n            amount: mainamount, // in EUR\r\n          }\r\n        );\r\n\r\n        // 🔸 Handle free subscription (no Stripe payment needed)\r\n        if (!data.clientSecret) {\r\n          setMessage(data.message || \"Subscription activated without payment.\");\r\n          seterr(false);\r\n          setspinners(false);\r\n\r\n          const formdata = {\r\n            code: referalCode,\r\n            company_id: userLogin.companies[0].id,\r\n            created_by_id: userLogin.id,\r\n            amount: mainamount,\r\n            clientSecret: null,\r\n            PayidOnetime: PayidOnetime,\r\n            payment_status: \"free\",\r\n            discount: discount,\r\n            ip_address: ClientIP,\r\n          };\r\n\r\n          if (paymentType === \"Perinstance\") {\r\n            await paymentsuccessPerinstnace(formdata);\r\n          } else {\r\n            await paymentsuccess(formdata);\r\n          }\r\n\r\n          return; // ✅ stop further execution\r\n        }\r\n\r\n        // 🔸 Paid subscription: confirm payment with Stripe\r\n        const result = await stripe.confirmCardPayment(data.clientSecret, {\r\n          payment_method: {\r\n            card: cardElement,\r\n          },\r\n        });\r\n\r\n        if (result.error) {\r\n          setMessage(result.error.message);\r\n          seterr(true);\r\n          setspinners(false);\r\n        } else if (result.paymentIntent.status === \"succeeded\") {\r\n          const formdata = {\r\n            code: referalCode,\r\n            company_id: userLogin.companies[0].id,\r\n            created_by_id: userLogin.id,\r\n            amount: mainamount,\r\n            clientSecret: data.clientSecret,\r\n            PayidOnetime: PayidOnetime,\r\n            payment_status: result.paymentIntent.status,\r\n            discount: discount,\r\n            ip_address: ClientIP,\r\n          };\r\n\r\n          if (paymentType === \"Perinstance\") {\r\n            await paymentsuccessPerinstnace(formdata);\r\n          } else {\r\n            await paymentsuccess(formdata);\r\n          }\r\n        } else {\r\n          setMessage(\"Payment failed. Try again.\");\r\n          seterr(true);\r\n          setspinners(false);\r\n        }\r\n      } catch (error) {\r\n        setMessage(\"Unexpected error occurred.\");\r\n        seterr(true);\r\n        setspinners(false);\r\n      }\r\n    };\r\n\r\n    const handleRefferalCode = async (e) => {\r\n      const upperValue = e.target.value.toUpperCase();\r\n\r\n      setreferalCode(upperValue);\r\n    };\r\n    const handleapplycode = async () => {\r\n      if (referalCode === \"\") {\r\n        setbuttonPay(\"Enter the code\");\r\n      } else {\r\n        let refercode = {\r\n          code: referalCode,\r\n          type: \"Dataroom_Plus_Investor_Report\",\r\n          company_id: userLogin.companies[0].id,\r\n        };\r\n        try {\r\n          const resp = await axios.post(\r\n            `${apiURLAiFile}checkreferCode`,\r\n            refercode,\r\n            {\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (resp.data.results.length > 0) {\r\n            var data = resp.data.results[0];\r\n            if (data.usage_limit > data.used_count) {\r\n              setdiscount(data.percentage);\r\n              const discountValue =\r\n                (getDataroompay.onetime_Fee * data.percentage) / 100;\r\n              const final = getDataroompay.onetime_Fee - discountValue;\r\n              setmainamount(final);\r\n              setbuttonPay(\"\");\r\n            } else {\r\n              setdiscount(\"\");\r\n              setmainamount(getDataroompay.onetime_Fee);\r\n              setbuttonPay(\"This code already used\");\r\n            }\r\n          } else {\r\n            setdiscount(\"\");\r\n            setmainamount(getDataroompay.onetime_Fee);\r\n            setbuttonPay(\"Invalid code!\");\r\n          }\r\n        } catch (err) {\r\n        } finally {\r\n        }\r\n      }\r\n    };\r\n    const paymentsuccess = async (formdata) => {\r\n      try {\r\n        await axios.post(\r\n          `${apiURLAiFile}CreateuserSubscriptionDataRoom`,\r\n          formdata,\r\n          {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        setMessage(\"Payment successful! 🎉\");\r\n        seterr(false);\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 2000);\r\n      } catch (err) {\r\n        console.error(\"Success handler error:\", err);\r\n        setMessage(\"Payment was captured, but post-process failed.\");\r\n        seterr(true);\r\n      } finally {\r\n        setspinners(false);\r\n      }\r\n    };\r\n    const paymentsuccessPerinstnace = async (formdata) => {\r\n      try {\r\n        await axios.post(\r\n          `${apiURLAiFile}CreateuserSubscriptionDataRoomPerinstance`,\r\n          formdata,\r\n          {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        setMessage(\"Payment successful! 🎉\");\r\n        seterr(false);\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 2000);\r\n      } catch (err) {\r\n        console.error(\"Success handler error:\", err);\r\n        setMessage(\"Payment was captured, but post-process failed.\");\r\n        seterr(true);\r\n      } finally {\r\n        setspinners(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div\r\n          className=\"form-control rounded-3\"\r\n          style={{\r\n            padding: \"0.75rem\",\r\n            border: \"1px solid #000\",\r\n            borderColor: \"#ced4da\",\r\n          }}\r\n        >\r\n          <CardElement\r\n            options={{\r\n              style: {\r\n                base: {\r\n                  fontSize: \"16px\",\r\n                  color: \"#32325d\",\r\n                  fontFamily:\r\n                    '\"Montserrat\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\r\n                  \"::placeholder\": { color: \"#a0aec0\" },\r\n                  padding: \"0.75rem\",\r\n                },\r\n                invalid: {\r\n                  color: \"#e5424d\",\r\n                },\r\n              },\r\n              classes: {\r\n                base: \"stripe-card-element\",\r\n                focus: \"border-primary\",\r\n                invalid: \"border-danger\",\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"d-flex gap-2 d-md-flex justify-content-md-end mt-4\">\r\n          <div className=\"d-flex flex-column\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"refferal_code\"\r\n              defaultValue={referalCode}\r\n              onInput={handleRefferalCode}\r\n              className=\"form-control w-auto\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"Apply Coupon Code\"\r\n              style={{ textTransform: \"uppercase\" }}\r\n            />\r\n            {buttonPay && (\r\n              <span\r\n                className=\"text-danger mt-1\"\r\n                style={{ fontSize: \"0.875rem\" }}\r\n              >\r\n                {buttonPay}\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <Button\r\n            type=\"button\"\r\n            onClick={handleapplycode}\r\n            className=\"submit d-flex align-items-center gap-2\"\r\n            style={{ background: \"#5C636B\", height: \"fit-content\" }}\r\n          >\r\n            Apply Code\r\n          </Button>\r\n        </div>\r\n\r\n        {discount && (\r\n          <div className=\"d-flex gap-2 d-md-flex justify-content-md-end mt-4\">\r\n            <b>Discount:</b> {discount}%\r\n          </div>\r\n        )}\r\n        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end mt-4\">\r\n          <Button\r\n            disabled={!stripe || spinners}\r\n            type=\"submit\"\r\n            className=\"submit d-flex align-items-center gap-2\"\r\n            style={{ background: \"#003b21\" }}\r\n          >\r\n            {!spinners && <span>Pay €{mainamount}</span>}\r\n            {spinners && (\r\n              <div\r\n                className=\"spinner-border text-white spinneronetimepay m-0\"\r\n                role=\"status\"\r\n              >\r\n                <span className=\"visually-hidden\"></span>\r\n              </div>\r\n            )}\r\n          </Button>\r\n        </div>\r\n\r\n        {message && (\r\n          <div\r\n            className={`flex items-center justify-between gap-3 shadow-lg ${\r\n              err ? \"error_pop\" : \"success_pop\"\r\n            }`}\r\n          >\r\n            <div className=\"d-flex align-items-start gap-2\">\r\n              <span className=\"d-block\">{message}</span>\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"close_btnCros\"\r\n              onClick={() => setMessage(\"\")}\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    );\r\n  };\r\n  //Payment\r\n  const handleCheckPayemt = async () => {\r\n    // Owner bypasses all checks\r\n    if (userLogin.role === \"owner\") {\r\n      try {\r\n        const res = await axios.post(\r\n          apiURLAiFile + \"checkSubscriptionInvestorReport\",\r\n          {\r\n            company_id: userLogin.companies[0].id,\r\n          }\r\n        );\r\n\r\n        const { subscriptionActive, updateAlreadySubmitted, lastUpdateDate } =\r\n          res.data;\r\n\r\n        if (!subscriptionActive) {\r\n          setShowPopup(true); // Subscription expired\r\n        } else if (updateAlreadySubmitted) {\r\n          const nextAllowedDate = getNextQuarterDate(new Date(lastUpdateDate));\r\n          const formattedNextDate = formatCurrentDate(\r\n            nextAllowedDate,\r\n            \"MMMM do, yyyy\"\r\n          ); // e.g., October 1st, 2025\r\n\r\n          navigate(\"/createrecord\");\r\n        } else {\r\n          navigate(\"/createrecord\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        seterrr(true);\r\n        setmessagesuccessError(\"Something went wrong.\");\r\n      }\r\n    }\r\n\r\n    if (authorizedData !== null) {\r\n      if (authorizedData.approve === \"No\") {\r\n        seterrr(true);\r\n        setmessagesuccessError(\"Please verify your signature\");\r\n        setTimeout(() => {\r\n          seterrr(false);\r\n          navigate(\"/authorized-signature\");\r\n        }, 1500);\r\n      } else {\r\n        try {\r\n          const res = await axios.post(\r\n            apiURLAiFile + \"checkSubscriptionInvestorReport\",\r\n            {\r\n              company_id: userLogin.companies[0].id,\r\n            }\r\n          );\r\n\r\n          const { subscriptionActive, updateAlreadySubmitted, lastUpdateDate } =\r\n            res.data;\r\n\r\n          if (!subscriptionActive) {\r\n            setShowPopup(true); // Subscription expired\r\n          } else if (updateAlreadySubmitted) {\r\n            const nextAllowedDate = getNextQuarterDate(\r\n              new Date(lastUpdateDate)\r\n            );\r\n            const formattedNextDate = formatCurrentDate(\r\n              nextAllowedDate,\r\n              \"MMMM do, yyyy\"\r\n            ); // e.g., October 1st, 2025\r\n\r\n            navigate(\"/createrecord\");\r\n          } else {\r\n            navigate(\"/createrecord\");\r\n          }\r\n        } catch (err) {\r\n          console.error(err);\r\n          seterrr(true);\r\n          setmessagesuccessError(\"Something went wrong.\");\r\n        }\r\n      }\r\n    } else {\r\n      seterrr(true);\r\n      setmessagesuccessError(\"Please verify your signature\");\r\n      setTimeout(() => {\r\n        seterrr(false);\r\n        navigate(\"/authorized-signature\");\r\n      }, 1500);\r\n    }\r\n  };\r\n  function getNextQuarterDate(date) {\r\n    const month = date.getMonth(); // 0-indexed (0 = Jan)\r\n    const year = date.getFullYear();\r\n\r\n    let nextQuarterMonth;\r\n    let nextQuarterYear = year;\r\n\r\n    if (month < 3) {\r\n      nextQuarterMonth = 3; // April\r\n    } else if (month < 6) {\r\n      nextQuarterMonth = 6; // July\r\n    } else if (month < 9) {\r\n      nextQuarterMonth = 9; // October\r\n    } else {\r\n      nextQuarterMonth = 0; // January next year\r\n      nextQuarterYear += 1;\r\n    }\r\n\r\n    return new Date(nextQuarterYear, nextQuarterMonth, 1); // 1st of next quarter\r\n  }\r\n  return (\r\n    <>\r\n      <>\r\n        <Wrapper>\r\n          <div className=\"fullpage d-block\">\r\n            <div className=\"d-flex align-items-start gap-0\">\r\n              <ModuleSideNav\r\n                isCollapsed={isCollapsed}\r\n                setIsCollapsed={setIsCollapsed}\r\n              />\r\n              <div\r\n                className={`global_view ${\r\n                  isCollapsed ? \"global_view_col\" : \"\"\r\n                }`}\r\n              >\r\n                <TopBar />\r\n                <SectionWrapper className=\"d-block p-md-4 p-3\">\r\n                  <div className=\"container-fluid\">\r\n                    {messagesuccessError && (\r\n                      <div\r\n                        className={`flex items-center justify-between gap-3 shadow-lg ${\r\n                          errr ? \"error_pop\" : \"success_pop\"\r\n                        }`}\r\n                      >\r\n                        <div className=\"d-flex align-items-center gap-2\">\r\n                          <span className=\"d-block\">{messagesuccessError}</span>\r\n                        </div>\r\n\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"close_btnCros\"\r\n                          onClick={() => setmessagesuccessError(\"\")}\r\n                        >\r\n                          ×\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                    {dangerMessage && (\r\n                      <DangerAlertPopup\r\n                        message={dangerMessage}\r\n                        onConfirm={handleConfirm}\r\n                        onCancel={() => {\r\n                          setdangerMessage(\"\");\r\n                        }}\r\n                      />\r\n                    )}\r\n                    <DataRoomSection className=\"d-flex flex-column gap-2\">\r\n                      <div className=\"titleroom d-flex justify-content-between align-items-center border-bottom pb-3\">\r\n                        {/* Heading on the left */}\r\n                        <div className=\"pb-3 bar_design\">\r\n                          <h4 className=\"h5 mb-0\">\r\n                            Investment Rounds Overview\r\n                          </h4>\r\n                        </div>\r\n                        {/* Buttons on the right */}\r\n                        <div className=\"d-flex gap-2\">\r\n                          <Link\r\n                            to=\"javascript:void(0)\"\r\n                            onClick={handleCheckPayemt}\r\n                            className=\"generatebutton px-4 py-2 fn_size_sm btn btn-outline-dark active d-flex align-items-center gap-2\"\r\n                            style={{\r\n                              opacity:\r\n                                userLogin.role === \"owner\" ||\r\n                                authorizedData?.approve === \"Yes\"\r\n                                  ? 1\r\n                                  : 0.6,\r\n                              pointerEvents:\r\n                                userLogin.role === \"owner\" ||\r\n                                authorizedData?.approve === \"Yes\"\r\n                                  ? \"auto\"\r\n                                  : \"none\", // disables click if not approved and not owner\r\n                            }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                opacity:\r\n                                  userLogin.role === \"owner\" ||\r\n                                  authorizedData?.approve === \"Yes\"\r\n                                    ? 1\r\n                                    : 0.6,\r\n                              }}\r\n                            >\r\n                              Start New Funding Round\r\n                            </span>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-end my-2 p-0\">\r\n                        <input\r\n                          type=\"search\"\r\n                          placeholder=\"Search Here...\"\r\n                          className=\"form-control\"\r\n                          value={searchText}\r\n                          onChange={(e) => setSearchText(e.target.value)}\r\n                          style={{\r\n                            padding: \"10px 15px\",\r\n                            width: \"100%\",\r\n                            maxWidth: \"300px\",\r\n                            fontSize: \"14px\",\r\n                            borderRadius: \"10px\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"d-flex flex-column justify-content-between align-items-start tb-box\">\r\n                        <DataTable\r\n                          customStyles={customStyles}\r\n                          conditionalRowStyles={conditionalRowStyles}\r\n                          columns={columns}\r\n                          className=\"datatb-report\"\r\n                          data={filteredData}\r\n                          pagination\r\n                          highlightOnHover\r\n                          striped\r\n                          responsive\r\n                        />\r\n                      </div>\r\n                    </DataRoomSection>\r\n                  </div>\r\n                </SectionWrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Wrapper>\r\n      </>\r\n      {/* {showPopup && (\r\n        <div className=\"payment_modal-overlay\" onClick={handleClosepayPopup}>\r\n          <div\r\n            className=\"modal-container scroll_bar\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <div className=\"modal-title-section\">\r\n                <h5 className=\"modal-title\">Payment</h5>\r\n\r\n                {payinfo && (\r\n                  <div className=\"price-tag\">\r\n                    €{getDataroompay.onetime_Fee}\r\n                    <span className=\"billing-cycle\">/year</span>\r\n                  </div>\r\n                )}\r\n                <p>\r\n                  {\" \"}\r\n                  <strong>\r\n                    {\" \"}\r\n                    Dataroom Management & Diligence + Investor Reporting\r\n                  </strong>\r\n                </p>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close_btn_global\"\r\n                onClick={handleClosepayPopup}\r\n                aria-label=\"Close\"\r\n              >\r\n                <IoCloseCircleOutline size={24} />\r\n              </button>\r\n            </div>\r\n\r\n            {payinfo && (\r\n              <div className=\"payment-info\">\r\n                <div className=\"benefits-list\">\r\n                  <div className=\"benefit-item\">\r\n                    <div className=\"benefit-icon\">\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85782 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                        <path\r\n                          d=\"M22 4L12 14.01L9 11.01\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"benefit-text\">\r\n                      <strong>Dataroom Management:</strong> Centralize key\r\n                      investor documents and streamline your due diligence prep.\r\n                      Receive one free executive summary to share with\r\n                      investors; additional copies cost €100 each.\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"benefit-item\">\r\n                    <div className=\"benefit-icon\">\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85782 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                        <path\r\n                          d=\"M22 4L12 14.01L9 11.01\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"benefit-text\">\r\n                      <strong>Cap Table Management:</strong> Know who owns what\r\n                      in your company.\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"benefit-item\">\r\n                    <div className=\"benefit-icon\">\r\n                      <svg\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85782 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                        <path\r\n                          d=\"M22 4L12 14.01L9 11.01\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"benefit-text\">\r\n                      <strong>Investor Reporting:</strong> Ensure that you\r\n                      connect with your investors with updates. No more “out of\r\n                      sight, out of mind!”\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"payment-methods\">\r\n              <div className=\"accepted-cards\">\r\n                <span className=\"accepted-text\">We accept:</span>\r\n                <div className=\"card-icons\">\r\n                  <div className=\"text-center mb-4\">\r\n                    <img\r\n                      src=\"/assets/user/images/cardimage.jpg\"\r\n                      alt=\"cards\"\r\n                      className=\"img-fluid rounded\"\r\n                      style={{ maxWidth: \"200px\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"stripe-form-container\">\r\n                <Elements stripe={stripePromise}>\r\n                  <CheckoutForm payment={getDataroompay.onetime_Fee} />\r\n                </Elements>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )} */}\r\n      {showPopup && (\r\n        <AirwallexPaymentPopupOneTimeDataroom\r\n          show={showPopup}\r\n          onClose={() => setShowPopup(false)}\r\n          payment={getDataroompay.onetime_Fee}\r\n          referstatus={true}\r\n        />\r\n      )}\r\n      {ViewRecordRounds && (\r\n        <ViewRecordRound\r\n          onClose={() => setViewRecordRounds(false)}\r\n          recordViewData={recordViewData}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["_ref","message","onConfirm","onCancel","modalRef","useRef","confirmButtonRef","useEffect","handleKeyDown","e","key","document","addEventListener","current","focus","body","style","overflow","removeEventListener","_jsxs","className","position","top","left","width","height","backgroundColor","display","alignItems","justifyContent","zIndex","opacity","animation","backdropFilter","WebkitBackdropFilter","onClick","children","ref","padding","borderRadius","boxShadow","maxWidth","transform","border","stopPropagation","_jsx","textAlign","marginBottom","viewBox","fill","xmlns","color","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","margin","fontSize","fontWeight","lineHeight","gap","type","cursor","transition","minWidth","onMouseOver","target","onMouseOut","RecordRoundList","navigate","useNavigate","storedUsername","localStorage","getItem","userLogin","JSON","parse","records","setrecords","useState","authorizedData","setAuthorizedData","messagesuccessError","setmessagesuccessError","errr","seterrr","dangerMessage","setdangerMessage","apiURLInvestor","LockId","setLockId","title","getAuthorizedSignature","async","formData","company_id","companies","id","user_id","checkData","axios","post","apiURLSignature","headers","Accept","data","results","length","err","getreports","generateRes","console","error","columns","name","selector","row","shareClassType","nameOfRound","sortable","amount","roundsize","Number","currency","toLocaleString","minimumFractionDigits","maximumFractionDigits","issuedshares","dateroundclosed","cell","isActive","roundStatus","displayText","formatCurrentDate","role","approve","handleViewsection","FaEye","is_shared","Link","to","FaEdit","is_locked","disabled","FaLock","handlelockreport","FaUnlock","ignoreRowClick","allowOverflow","button","ViewRecordRounds","setViewRecordRounds","recordViewData","setrecordViewData","rowdata","Id","searchText","setSearchText","filteredData","filter","item","text","toLowerCase","includes","input","date","Date","isNaN","day","getDate","month","getMonth","year","getFullYear","n","getOrdinal","isCollapsed","setIsCollapsed","showPopup","setShowPopup","showPopupPerInstance","setshowPopupPerInstance","paynowOneTime","setpaynowOneTime","payinfo","setpayinfo","getDataroompay","setgetDataroompay","PayidOnetime","setPayidOnetime","paymentType","setpaymentType","apiURLAiFile","getDataroompayment","respo","apiUrlModule","response","request","getNextQuarterDate","nextQuarterMonth","nextQuarterYear","_Fragment","Wrapper","ModuleSideNav","TopBar","SectionWrapper","DangerAlertPopup","lock_id","log","setTimeout","DataRoomSection","res","subscriptionActive","updateAlreadySubmitted","lastUpdateDate","pointerEvents","placeholder","value","onChange","DataTable","customStyles","table","headCells","textTransform","whiteSpace","cells","textOverflow","rows","stripedStyle","pagination","marginTop","conditionalRowStyles","when","highlightOnHover","striped","responsive","AirwallexPaymentPopupOneTimeDataroom","show","onClose","payment","onetime_Fee","referstatus","ViewRecordRound"],"sourceRoot":""}
{"version":3,"file":"static/js/5781.b5ced86c.chunk.js","mappings":"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","sources":["pages/User/Investor/Recordround.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TopBar from \"../../../components/Users/TopBar\";\r\nimport ModuleSideNav from \"../../../components/Users/ModuleSideNav\";\r\nimport Alertpopup from \"../../../components/Alertpopup\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../../components/Styles/RegisterStyles\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport PreviousSection from \"../../../components/Users/PreviousSection\";\r\n\r\nimport { NumericFormat } from \"react-number-format\";\r\nimport axios from \"axios\";\r\nimport DangerAlertPopup from \"../../../components/Admin/DangerAlertPopup\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nexport default function Recordround() {\r\n  const apiUrlRound = \"http://blueprintcatalyst.com/api/user/capitalround/\";\r\n  var apiURLInvestor = \"http://blueprintcatalyst.com/api/user/investor/\";\r\n\r\n  const [countrySymbolList, setCountrysymbollist] = useState([]);\r\n  const [errorMsg, seterrorMsg] = useState(\"\");\r\n  const [successMsg, setsuccessMsg] = useState(\"\");\r\n  const [activeSection, setActiveSection] = useState(\"shareclass\");\r\n  const storedUsername = localStorage.getItem(\"SignatoryLoginData\");\r\n  const [messageAll, setmessageAll] = useState(\"\");\r\n  const [errr, seterrr] = useState(false);\r\n  const userLogin = JSON.parse(storedUsername);\r\n  const { id } = useParams();\r\n  const [ClientIP, setClientIP] = useState(\"\");\r\n  const [records, setrecords] = useState([]);\r\n  // Add this to your component state\r\n  const navigate = useNavigate();\r\n\r\n  const [errors, setErrors] = useState({\r\n    convertibleTrigger: \"\",\r\n    liquidationOther: \"\",\r\n    nameOfRound: \"\",\r\n    shareClassType: \"\",\r\n    shareclassother: \"\",\r\n    instrumentType: \"\",\r\n    customInstrument: \"\",\r\n    issuedshares: \"\",\r\n    dateroundclosed: \"\",\r\n    liquidation: [],\r\n    convertible: \"\",\r\n    convertibleType: \"\",\r\n    voting: \"\",\r\n    termsheetFile: \"\",\r\n    subscriptiondocument: \"\",\r\n\r\n    common_stock_valuation: \"\",\r\n    preferred_valuation: \"\",\r\n    valuationCap: \"\",\r\n    discountRate: \"\",\r\n    safeType: \"\",\r\n    interestRate: \"\",\r\n    repaymentSchedule: \"\",\r\n    hasWarrants_Bank: \"\",\r\n    valuationCap_note: \"\",\r\n    discountRate_note: \"\",\r\n    maturityDate: \"\",\r\n    interestRate_note: \"\",\r\n    exercisedate_bank: \"\",\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    liquidationOther: \"\",\r\n    liquidationpreferences: \"\",\r\n    nameOfRound: \"Founding Share Allocation\",\r\n    shareClassType: \"\",\r\n    shareclassother: \"\",\r\n    description: \"\",\r\n    instrumentType: \"\",\r\n    customInstrument: \"\",\r\n    roundsize: \"\",\r\n    currency: \"CAD $\",\r\n    issuedshares: \"\",\r\n    dateroundclosed: \"\",\r\n    rights: \"\",\r\n    liquidation: [],\r\n    convertible: \"\",\r\n    convertibleType: \"\",\r\n    voting: \"\",\r\n    termsheetFile: null,\r\n    subscriptiondocument: null,\r\n    generalnotes: \"\",\r\n\r\n    common_stock_valuation: \"\",\r\n    hasWarrants: \"\",\r\n    exercisePrice: \"\",\r\n    expirationDate: \"\",\r\n    warrantRatio: \"\",\r\n    warrantType: \"\",\r\n    preferred_valuation: \"\",\r\n    hasWarrants_preferred: \"\",\r\n    exercisePrice_preferred: \"\",\r\n    expirationDate_preferred: \"\",\r\n    warrantRatio_preferred: \"\",\r\n    warrantType_preferred: \"\",\r\n    valuationCap: \"\",\r\n    discountRate: \"\",\r\n    safeType: \"\",\r\n    interestRate: \"\",\r\n    repaymentSchedule: \"\",\r\n    hasWarrants_Bank: \"\",\r\n    exercisePrice_bank: \"\",\r\n    exercisedate_bank: \"\",\r\n    warrantRatio_bank: \"\",\r\n    warrantType_bank: \"\",\r\n    valuationCap_note: \"\",\r\n    discountRate_note: \"\",\r\n    maturityDate: \"\",\r\n    interestRate_note: \"\",\r\n    convertibleTrigger: \"\",\r\n    customInstrument: \"\",\r\n    roundStatus: \"\",\r\n  });\r\n  //Check Authorized Signature\r\n  const apiURLSignature = \"http://blueprintcatalyst.com/api/user/\";\r\n  useEffect(() => {\r\n    getAuthorizedSignature();\r\n  }, []);\r\n  const getAuthorizedSignature = async () => {\r\n    let formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      user_id: userLogin.id,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiURLSignature + \"getAuthorizedSignature\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const checkData = res.data.results;\r\n      if (checkData.length > 0) {\r\n        var checkSignature = checkData[0];\r\n        if (checkSignature.approve === \"No\") {\r\n          navigate(\"/record-round-list\");\r\n        }\r\n      } else {\r\n        navigate(\"/record-round-list\");\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  //Check Authorized Signature\r\n  useEffect(() => {\r\n    getrecords();\r\n  }, []);\r\n\r\n  const getrecords = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"getrecordRoundList\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setrecords(generateRes.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n    //  Optionally, call AI Summary API here\r\n    //generateExecutiveSummary(formData);\r\n  };\r\n  useEffect(() => {\r\n    document.title = id ? \"Edit Record Round Page\" : \"Create Record Round Page\";\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getEditrecordlist();\r\n    }\r\n  }, []);\r\n  const [Editrecords, setEditrecords] = useState(\"\");\r\n  const getEditrecordlist = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      id: id,\r\n    };\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiUrlRound + \"getEditrecordlist\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (generateRes.data.results.length > 0) {\r\n        var getData = generateRes.data.results[0];\r\n        // Parse instrument_type_data JSON\r\n        let instrumentData = {};\r\n        if (getData.instrument_type_data) {\r\n          try {\r\n            // First, remove outer quotes if double-encoded\r\n            let rawData = getData.instrument_type_data;\r\n            if (\r\n              typeof rawData === \"string\" &&\r\n              rawData.startsWith('\"') &&\r\n              rawData.endsWith('\"')\r\n            ) {\r\n              rawData = rawData.slice(1, -1); // remove the leading and trailing quotes\r\n              rawData = rawData.replace(/\\\\\"/g, '\"'); // fix escaped quotes\r\n            }\r\n\r\n            instrumentData = JSON.parse(rawData);\r\n          } catch (err) {\r\n            console.error(\"Error parsing instrument_type_data\", err);\r\n          }\r\n        }\r\n\r\n        const updatedFormData = {\r\n          ...getData, // existing fields\r\n          ...instrumentData, // merge parsed JSON\r\n          termsheetFile: Array.isArray(getData.termsheetFile)\r\n            ? getData.termsheetFile.map((file) =>\r\n                typeof file === \"string\" ? { name: file } : file\r\n              )\r\n            : getData.termsheetFile\r\n            ? (() => {\r\n                try {\r\n                  const parsed = JSON.parse(getData.termsheetFile);\r\n                  return (Array.isArray(parsed) ? parsed : [parsed]).map(\r\n                    (file) => (typeof file === \"string\" ? { name: file } : file)\r\n                  );\r\n                } catch {\r\n                  return [{ name: getData.termsheetFile }];\r\n                }\r\n              })()\r\n            : [],\r\n\r\n          subscriptiondocument: Array.isArray(getData.subscriptiondocument)\r\n            ? getData.subscriptiondocument.map((file) =>\r\n                typeof file === \"string\" ? { name: file } : file\r\n              )\r\n            : getData.subscriptiondocument\r\n            ? (() => {\r\n                try {\r\n                  const parsed = JSON.parse(getData.subscriptiondocument);\r\n                  return (Array.isArray(parsed) ? parsed : [parsed]).map(\r\n                    (file) => (typeof file === \"string\" ? { name: file } : file)\r\n                  );\r\n                } catch {\r\n                  return [{ name: getData.subscriptiondocument }];\r\n                }\r\n              })()\r\n            : [],\r\n\r\n          liquidation: getData.liquidation\r\n            ? getData.liquidation.split(\",\").map((v) => v.trim())\r\n            : [],\r\n        };\r\n        setFormData(updatedFormData);\r\n\r\n        setEditrecords(generateRes.data.results[0]);\r\n        setSelected(getData.shareClassType);\r\n      } else {\r\n        navigate(\"/record-round-list\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"FormData updated:\", formData);\r\n  }, [formData]);\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [otherText, setOtherText] = useState(\"\");\r\n  const [isReviewing, setIsReviewing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getIP = async () => {\r\n      try {\r\n        const res = await fetch(\"https://api.ipify.org?format=json\");\r\n        const data = await res.json();\r\n        setClientIP(data.ip); // Save this to state\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch IP\", error);\r\n      }\r\n    };\r\n\r\n    getIP();\r\n  }, []);\r\n  const handleSubmit = async () => {\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"created_by_id\", userLogin.id);\r\n    formDataToSend.append(\"id\", id);\r\n    formDataToSend.append(\"company_id\", userLogin.companies[0].id);\r\n    formDataToSend.append(\"created_by_role\", userLogin.role);\r\n    formDataToSend.append(\"shareClassType\", selected);\r\n    formDataToSend.append(\"description\", formData.description);\r\n    formDataToSend.append(\"liquidationOther\", formData.liquidationOther);\r\n    formDataToSend.append(\r\n      \"liquidationpreferences\",\r\n      formData.liquidationpreferences\r\n    );\r\n    formDataToSend.append(\"nameOfRound\", formData.nameOfRound);\r\n    formDataToSend.append(\"shareclassother\", formData.shareclassother);\r\n    formDataToSend.append(\"instrumentType\", formData.instrumentType);\r\n    formDataToSend.append(\"customInstrument\", formData.customInstrument);\r\n    formDataToSend.append(\"roundsize\", formData.roundsize);\r\n    formDataToSend.append(\"currency\", formData.currency);\r\n    formDataToSend.append(\"issuedshares\", formData.issuedshares);\r\n    formDataToSend.append(\"rights\", formData.rights);\r\n    formDataToSend.append(\"liquidation\", formData.liquidation);\r\n    formDataToSend.append(\"convertible\", formData.convertible);\r\n    formDataToSend.append(\"convertibleType\", formData.convertibleType);\r\n    formDataToSend.append(\"voting\", formData.voting);\r\n    formDataToSend.append(\"dateroundclosed\", formData.dateroundclosed);\r\n    formDataToSend.append(\"generalnotes\", formData.generalnotes);\r\n    formDataToSend.append(\"ip_address\", ClientIP);\r\n    if (formData.termsheetFile && formData.termsheetFile.length > 0) {\r\n      formData.termsheetFile.forEach((file) => {\r\n        formDataToSend.append(\"termsheetFile\", file);\r\n      });\r\n    }\r\n    if (\r\n      formData.subscriptiondocument &&\r\n      formData.subscriptiondocument.length > 0\r\n    ) {\r\n      formData.subscriptiondocument.forEach((file) => {\r\n        formDataToSend.append(\"subscriptiondocument\", file);\r\n      });\r\n    }\r\n    let instrumentData = {};\r\n\r\n    switch (formData.instrumentType) {\r\n      case \"Common Stock\":\r\n        instrumentData = {\r\n          common_stock_valuation: formData.common_stock_valuation || \"\",\r\n          hasWarrants: formData.hasWarrants || false,\r\n          ...(formData.hasWarrants && {\r\n            exercisePrice: formData.exercisePrice || \"\",\r\n            expirationDate: formData.expirationDate || \"\",\r\n            warrantRatio: formData.warrantRatio || \"\",\r\n            warrantType: formData.warrantType || \"CALL\",\r\n          }),\r\n        };\r\n        break;\r\n\r\n      case \"Preferred Equity\":\r\n        instrumentData = {\r\n          preferred_valuation: formData.preferred_valuation || \"\",\r\n          hasWarrants_preferred: formData.hasWarrants_preferred || false,\r\n          ...(formData.hasWarrants_preferred && {\r\n            exercisePrice_preferred: formData.exercisePrice_preferred || \"\",\r\n            expirationDate_preferred: formData.expirationDate_preferred || \"\",\r\n            warrantRatio_preferred: formData.warrantRatio_preferred || \"\",\r\n            warrantType_preferred: formData.warrantType_preferred || \"CALL\",\r\n          }),\r\n        };\r\n        break;\r\n\r\n      case \"Safe\":\r\n        instrumentData = {\r\n          valuationCap: formData.valuationCap || \"\",\r\n          discountRate: formData.discountRate || \"\",\r\n          safeType: formData.safeType || \"PRE_MONEY\",\r\n        };\r\n        break;\r\n\r\n      case \"Venture/Bank DEBT\":\r\n        instrumentData = {\r\n          interestRate: formData.interestRate || \"\",\r\n          repaymentSchedule: formData.repaymentSchedule || \"\",\r\n          hasWarrants_Bank: formData.hasWarrants_Bank || false,\r\n          ...(formData.hasWarrants_Bank && {\r\n            exercisePrice_bank: formData.exercisePrice_bank || \"\",\r\n            exercisedate_bank: formData.exercisedate_bank || \"\",\r\n            warrantRatio_bank: formData.warrantRatio_bank || \"\",\r\n            warrantType_bank: formData.warrantType_bank || \"CALL\",\r\n          }),\r\n        };\r\n        break;\r\n\r\n      case \"Convertible Note\":\r\n        instrumentData = {\r\n          valuationCap_note: formData.valuationCap_note || \"\",\r\n          discountRate_note: formData.discountRate_note || \"\",\r\n          maturityDate: formData.maturityDate || \"\",\r\n          interestRate_note: formData.interestRate_note || \"\",\r\n          convertibleTrigger: formData.convertibleTrigger || \"\",\r\n        };\r\n        break;\r\n\r\n      default:\r\n        instrumentData = {};\r\n    }\r\n    formDataToSend.append(\r\n      \"instrument_type_data\",\r\n      JSON.stringify(instrumentData)\r\n    );\r\n    formDataToSend.append(\"roundStatus\", formData.roundStatus);\r\n    formDataToSend.append(\"ClientIP\", ClientIP);\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlRound + \"CreateOrUpdateCapitalRound\",\r\n        formDataToSend,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      seterrr(false);\r\n      setmessageAll(res.data.message);\r\n      setTimeout(() => {\r\n        setmessageAll(\"\");\r\n        navigate(\"/record-round-list\");\r\n      }, 3500);\r\n    } catch (err) {\r\n      seterrr(true);\r\n      setmessageAll(err);\r\n      setTimeout(() => {\r\n        setmessageAll(\"\");\r\n      }, 5000);\r\n      console.error(\"Error fetching company details:\", err);\r\n    }\r\n    //setsuccessMsg(\"Record round created successfully!\");\r\n  };\r\n\r\n  // Share class options\r\n\r\n  const [firstStepCompleted, setFirstStepCompleted] = useState(false);\r\n  const handleOptionClick = (opt) => {\r\n    // If editing (id exists), allow all options\r\n    if (!id) {\r\n      // First step: only Founder Shares selectable\r\n      if (\r\n        !firstStepCompleted &&\r\n        opt !== \"Founder Shares (Family and Friends)\"\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // After first step is done\r\n      if (\r\n        !firstStepCompleted &&\r\n        opt === \"Founder Shares (Family and Friends)\"\r\n      ) {\r\n        setFirstStepCompleted(true);\r\n        handleInputChange(\"nameOfRound\", \"Founding Share Allocation\");\r\n      }\r\n    }\r\n\r\n    // Set selection and update form data\r\n    setSelected(opt);\r\n    handleInputChange(\r\n      \"shareClassType\",\r\n      opt === \"OTHER\" ? formData.shareclassother : opt\r\n    );\r\n    if (opt !== \"OTHER\") handleInputChange(\"shareclassother\", \"\");\r\n  };\r\n\r\n  const options = [\r\n    \"Founder Shares (Family and Friends)\",\r\n    \"Employee Options Pool\", // mandatory first selection\r\n    \"Advisor Shares\",\r\n    \"Pre-Seed\",\r\n    \"Seed\",\r\n    \"Seed Extension / Seed+\",\r\n    \"Series A\",\r\n    \"Series A Extension\",\r\n    \"Series B\",\r\n    \"Series B Extension\",\r\n    \"Series C\",\r\n    \"Series C Extension\",\r\n    \"Series D\",\r\n    \"Bridge Round\",\r\n    \"OTHER\",\r\n  ];\r\n\r\n  // Form sections\r\n  const sections = [\r\n    { id: \"shareclass\", title: \"Share Class\" },\r\n    { id: \"description\", title: \"Description\" },\r\n    { id: \"instrument\", title: \"Investment Instrument\" },\r\n    { id: \"roundsize\", title: \"Round Size\" },\r\n    { id: \"issuedshares\", title: \"# Issued Shares\" },\r\n    { id: \"rights\", title: \"Rights & Preferences\" },\r\n    { id: \"liquidation\", title: \"Liquidation Preference\" },\r\n    { id: \"convertible\", title: \"Convertible?\" },\r\n    { id: \"voting\", title: \"Voting Rights\" },\r\n    { id: \"termsheet\", title: \"Term Sheet\" },\r\n    { id: \"subscription\", title: \"Subscription Document\" },\r\n    { id: \"notes\", title: \"Notes\" },\r\n  ];\r\n  //Progress bar\r\n  const totalSections = sections.length;\r\n\r\n  // Find the index of the active section\r\n  const activeIndex = sections.findIndex(\r\n    (section) => section.id === activeSection\r\n  );\r\n\r\n  // Compute progress percentage\r\n  // - If only 1 section => 0%\r\n  // - Otherwise, calculate relative progress from 0% to 100%\r\n  const progressWidth =\r\n    totalSections > 1\r\n      ? Math.round((activeIndex / (totalSections - 1)) * 100)\r\n      : 0;\r\n\r\n  //Progress bar\r\n  //Instrument\r\n  const instrumentOptions = [\r\n    {\r\n      value: \"Common Stock\",\r\n      label: \"Common Stock\",\r\n      description:\r\n        \"Direct sale of common shares, often to founders or early employees.\",\r\n    },\r\n    {\r\n      value: \"Preferred Equity\",\r\n      label: \"Preferred Equity\",\r\n      description:\r\n        \"Equity with liquidity preference, often used in priced rounds with early-stage investors.\",\r\n    },\r\n    {\r\n      value: \"Convertible Note\",\r\n      label: \"Convertible Note\",\r\n      description:\r\n        \"Short-term debt that converts into equity at a future financing round.\",\r\n    },\r\n    {\r\n      value: \"Safe\",\r\n      label: \"Safe\",\r\n      description:\r\n        \"Simple Agreement for Future Equity - converts at the time of a priced round.\",\r\n    },\r\n    {\r\n      value: \"Venture/Bank DEBT\",\r\n      label: \"Venture/Bank DEBT\",\r\n      description:\r\n        \"Non-convertible financing structured as loans, typically repaid with interest.\",\r\n    },\r\n    {\r\n      value: \"OTHER\",\r\n      label: \"Other\",\r\n      description: \"Custom investment instrument not listed above.\",\r\n    },\r\n  ];\r\n\r\n  const liquidationOptions = [\r\n    {\r\n      value: \"1x Investor Multiple Preference\",\r\n      label: \"1x Investor Multiple Preference\",\r\n      description:\r\n        \"Multiple of the original investment returned before common shares participate.\",\r\n    },\r\n    {\r\n      value: \"2x Investor Multiple Preference\",\r\n      label: \"2x Investor Multiple Preference\",\r\n      description:\r\n        \"Multiple of the original investment returned before common shares participate.\",\r\n    },\r\n    {\r\n      value: \"3x Investor Multiple Preference\",\r\n      label: \"3x Investor Multiple Preference\",\r\n      description:\r\n        \"Multiple of the original investment returned before common shares participate.\",\r\n    },\r\n    {\r\n      value: \"Non-Participating\",\r\n      label: \"Non-Participating\",\r\n      description:\r\n        \"Investor chooses either the liquidation preference or the stock value.\",\r\n    },\r\n    {\r\n      value: \"Participating\",\r\n      label: \"Participating\",\r\n      description:\r\n        \"Received liquidation preference and then participated pro-rata with common shareholders.\",\r\n    },\r\n    {\r\n      value: \"Capped Participating\",\r\n      label: \"Capped Participating\",\r\n      description:\r\n        \"Participation capped at a defined multiple (e.g. total return capped at 3x).\",\r\n    },\r\n    {\r\n      value: \"Participating with Catch-up\",\r\n      label: \"Participating with Catch-up\",\r\n      description:\r\n        \"Common gets paid first to a threshold, then preferred ‘catches up’ before full pro-rata sharing.\",\r\n    },\r\n    {\r\n      value: \"Senior Debt\",\r\n      label: \"Senior Debt\",\r\n      description:\r\n        \"A loan or obligation that takes repayment priority over other debts in the event of bankruptcy.\",\r\n    },\r\n    {\r\n      value: \"Common Debt\",\r\n      label: \"Common Debt\",\r\n      description:\r\n        \"A loan or obligation that takes secondary repayment priority over other senior debts in the event of bankruptcy.\",\r\n    },\r\n    {\r\n      value: \"N/A\",\r\n      label: \"N/A\",\r\n      description: \"Does not apply to this round.\",\r\n    },\r\n    {\r\n      value: \"OTHER\",\r\n      label: \"Other\",\r\n      description: \"Custom response entered by the company.\",\r\n    },\r\n  ];\r\n\r\n  //getallcountrySymbolList\r\n  useEffect(() => {\r\n    getallcountrySymbolList();\r\n  }, []);\r\n  const getallcountrySymbolList = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlRound + \"getallcountrySymbolList\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n\r\n      var respo = res.data.results;\r\n\r\n      setCountrysymbollist(respo);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n    }\r\n  };\r\n  const handleReviewpage = () => {\r\n    setsuccessMsg(\r\n      \"Please review all the information carefully before submitting. Once submitted, it can be officially recorded.\"\r\n    );\r\n    setIsReviewing(true); // show confirm button\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    setsuccessMsg(\"\"); // clear review message\r\n    setIsReviewing(false); // hide confirm button\r\n    await handleSubmit(); // submit form once\r\n  };\r\n  // Utility function\r\n  const shouldShowAlert = (dateStr) => {\r\n    if (!dateStr || dateStr.trim() === \"\") return true; // empty → show\r\n\r\n    const [monthStr, dayStr, yearStr] = dateStr.split(\"/\");\r\n    const month = parseInt(monthStr, 10) - 1; // JS months 0-11\r\n    const day = parseInt(dayStr, 10);\r\n    const year = parseInt(yearStr, 10);\r\n\r\n    if (isNaN(month) || isNaN(day) || isNaN(year)) return true; // invalid → show\r\n\r\n    const roundDate = new Date(year, month, day);\r\n    const today = new Date();\r\n\r\n    // Show if roundDate is in the future\r\n    return roundDate > today;\r\n  };\r\n\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"fullpage d-block\">\r\n        <div className=\"d-flex align-items-start gap-0\">\r\n          <ModuleSideNav\r\n            isCollapsed={isCollapsed}\r\n            setIsCollapsed={setIsCollapsed}\r\n          />\r\n          <div\r\n            className={`global_view ${isCollapsed ? \"global_view_col\" : \"\"}`}\r\n          >\r\n            <TopBar />\r\n            <SectionWrapper className=\"d-block p-md-4 p-3\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"d-flex flex-column gap-4\">\r\n                  {errorMsg && (\r\n                    <Alertpopup\r\n                      message={errorMsg}\r\n                      onClose={() => seterrorMsg(\"\")}\r\n                    />\r\n                  )}\r\n                  {messageAll && (\r\n                    <div\r\n                      className={`flex items-center justify-between gap-3 shadow-lg ${\r\n                        errr ? \"error_pop\" : \"success_pop\"\r\n                      }`}\r\n                    >\r\n                      <div className=\"d-flex align-items-center gap-2\">\r\n                        <span className=\"d-block\">{messageAll}</span>\r\n                      </div>\r\n\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"close_btnCros\"\r\n                        onClick={() => setmessageAll(\"\")}\r\n                      >\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n\r\n                  {successMsg && (\r\n                    // <Alertpopupsuccess\r\n                    //   message={successMsg}\r\n                    //   onClose={() => setsuccessMsg(\"\")}\r\n                    // />\r\n                    <DangerAlertPopup\r\n                      message={successMsg}\r\n                      onConfirm={handleConfirm}\r\n                      onCancel={() => {\r\n                        setsuccessMsg(\"\");\r\n                      }}\r\n                    />\r\n                  )}\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <div className=\"pb-3 bar_design\">\r\n                      <h4 className=\"h5 mb-0\">\r\n                        {id ? \"Edit Record Round\" : \"Create New Record Round\"}\r\n                      </h4>\r\n                    </div>\r\n                    {/* <div className=\"d-flex gap-2\">\r\n                      <button className=\"close_btn w-fit\">Save Draft</button>\r\n                      <button\r\n                        className=\"global_btn w-fit\"\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        Create Round\r\n                      </button>\r\n                    </div> */}\r\n                  </div>\r\n\r\n                  <div className=\"mb-4 dashboard_card\">\r\n                    <div class=\"progress-container pt-3\">\r\n                      <div class=\"progress-info\">\r\n                        <div class=\"progress-label\">Progress</div>\r\n                        <div class=\"progress-value\">\r\n                          {progressWidth}% Complete\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"progress-bar\">\r\n                        <div\r\n                          class=\"progress-fill\"\r\n                          style={{ width: `${progressWidth}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Section Navigation */}\r\n                  <div className=\"mb-4 \">\r\n                    <div className=\"d-flex flex-wrap gap-2\">\r\n                      {sections.map((section) => (\r\n                        <button\r\n                          key={section.id}\r\n                          className={`btn ${\r\n                            activeSection === section.id\r\n                              ? \"select_btn_active\"\r\n                              : \"select_btn\"\r\n                          } rounded-pill`}\r\n                        >\r\n                          {section.title}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Form Sections */}\r\n                  <form method=\"post\" action=\"javascript:void(0)\">\r\n                    <div className=\"from_quation\">\r\n                      {/* Share Class Section */}\r\n                      {activeSection === \"shareclass\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <h3 className=\"h5 mb-4 text-gray-800\">Share Class</h3>\r\n                          {formData.dateroundclosed &&\r\n                            shouldShowAlert(formData.dateroundclosed) && (\r\n                              <div className=\"alert-message text-danger p-3 mb-4 border rounded bg-white\">\r\n                                <strong>Note:</strong> Start by entering your\r\n                                company’s original ownership (who owned which\r\n                                shares at registration). Then add future\r\n                                investment rounds. This keeps your cap table\r\n                                accurate and makes future funding easier.\r\n                              </div>\r\n                            )}\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Name of Round{\" \"}\r\n                              <span className=\"text-danger fs-5\">*</span>\r\n                              {errors.nameOfRound && (\r\n                                <div className=\"text-danger small mt-1 is-invalid\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.nameOfRound}\r\n                                </div>\r\n                              )}\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Enter round name (e.g., Series A, Seed Round)\"\r\n                              value={formData.nameOfRound}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\"nameOfRound\", e.target.value)\r\n                              }\r\n                              className={`form-control ${\r\n                                errors.nameOfRound ? \"iis-invalid\" : \"\"\r\n                              }`}\r\n                              maxLength={30}\r\n                              disabled={!firstStepCompleted} // editable only after first step\r\n                            />\r\n                            <div className=\"form-text\">\r\n                              {formData.nameOfRound.length}/30 characters\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Share Class Options */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Select Share Class Type{\" \"}\r\n                              <span className=\"text-danger fs-5\">*</span>\r\n                              {errors.shareClassType && (\r\n                                <div className=\"text-danger small mt-1 is-invalid\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.shareClassType}\r\n                                </div>\r\n                              )}\r\n                            </label>\r\n                            <div className=\"row mt-3\">\r\n                              {options.map((opt) => {\r\n                                const disabled =\r\n                                  !firstStepCompleted &&\r\n                                  opt !==\r\n                                    \"Founder Shares (Family and Friends)\" &&\r\n                                  !id; // remove disabled if id exists\r\n\r\n                                return (\r\n                                  <div key={opt} className=\"col-md-6 mb-3\">\r\n                                    <div\r\n                                      className={`form-check-card p-3 border rounded-3 cursor-pointer h-100 ${\r\n                                        selected === opt\r\n                                          ? \"bg-light\"\r\n                                          : \"border-gray-300\"\r\n                                      } ${\r\n                                        disabled\r\n                                          ? \"opacity-50 cursor-not-allowed\"\r\n                                          : \"\"\r\n                                      }`}\r\n                                      onClick={() =>\r\n                                        handleOptionClick(opt, disabled)\r\n                                      }\r\n                                    >\r\n                                      <div className=\"form-check\">\r\n                                        <input\r\n                                          type=\"radio\"\r\n                                          name=\"shareClassType\"\r\n                                          value={opt}\r\n                                          checked={selected === opt}\r\n                                          onChange={() =>\r\n                                            handleOptionClick(opt, disabled)\r\n                                          }\r\n                                          className=\"form-check-input\"\r\n                                          disabled={disabled}\r\n                                        />\r\n                                        <label className=\"form-check-label fw-medium\">\r\n                                          {opt}\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Conditional Field for OTHER option */}\r\n                          {selected === \"OTHER\" && (\r\n                            <div className=\"mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Custom Share Class Name\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter custom share class name\"\r\n                                value={formData.shareclassother}\r\n                                onChange={(e) =>\r\n                                  handleInputChange(\r\n                                    \"shareclassother\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                                className={`form-control ${\r\n                                  errors.shareclassother ? \"is-invalid\" : \"\"\r\n                                }`}\r\n                                maxLength={30}\r\n                              />\r\n                              <div className=\"form-text\">\r\n                                {formData.shareclassother.length}/30 characters\r\n                              </div>\r\n                              {errors.shareclassother && (\r\n                                <div className=\"text-danger small\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.shareclassother}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Next Button with Validation */}\r\n                          <div className=\"d-flex justify-content-end \">\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                // Validate before proceeding\r\n                                const newErrors = {};\r\n\r\n                                if (!formData.nameOfRound.trim()) {\r\n                                  newErrors.nameOfRound =\r\n                                    \"This field is required\";\r\n                                }\r\n\r\n                                if (!formData.shareClassType) {\r\n                                  console.log(\"kk\");\r\n                                  newErrors.shareClassType =\r\n                                    \"Please select a share class type\";\r\n                                }\r\n                                if (selected === \"OTHER\") {\r\n                                  if (!formData.shareclassother.trim()) {\r\n                                    newErrors.shareclassother =\r\n                                      \"This field is required\";\r\n                                  }\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"description\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Description Section */}\r\n                      {activeSection === \"description\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          {/* Show previous section data */}\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\"shareclass\"]}\r\n                          />\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Description{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> A strategic\r\n                                  summary that links the equity class to its\r\n                                  purpose, issuance context, and recipient\r\n                                  group.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> Investors use\r\n                                  this to understand the logic behind each\r\n                                  class, e.g. who holds it, under what\r\n                                  conditions it was granted.\r\n                                  <br />\r\n                                  <strong>How to fill it:</strong> Detail the\r\n                                  rationale and stakeholders behind issuance.\r\n                                  Think of this as the “why” behind the class.\r\n                                  For example:\r\n                                  <br />– Reserved for key hires under Employee\r\n                                  Stock Option Pool\r\n                                  <br />– Issued to seed investors during SAFE\r\n                                  conversion in 2022\r\n                                  <br />– Created for strategic Gulf partner\r\n                                  with board observer rights\r\n                                </div>\r\n                              </span>\r\n                              <span style={{ color: \"var(--primary)\" }}>*</span>\r\n                            </label>\r\n                            <textarea\r\n                              placeholder=\"Enter the strategic description of your round...\"\r\n                              className={`textarea_input ${\r\n                                errors.description ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              rows=\"6\"\r\n                              value={formData.description}\r\n                              onChange={(e) => {\r\n                                handleInputChange(\r\n                                  \"description\",\r\n                                  e.target.value\r\n                                );\r\n                                if (errors.description)\r\n                                  setErrors((prev) => ({\r\n                                    ...prev,\r\n                                    description: \"\",\r\n                                  }));\r\n                              }}\r\n                            />\r\n                            {errors.description && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.description}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          <div className=\"d-flex justify-content-between pt-3 w-100 border-top gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"shareclass\")}\r\n                            >\r\n                              <i className=\"bi bi-arrow-left me-2\"></i>Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                if (!formData.description) {\r\n                                  setErrors({\r\n                                    ...errors,\r\n                                    description: \"This field is required\",\r\n                                  });\r\n                                } else {\r\n                                  setErrors({ ...errors, description: \"\" });\r\n                                  setActiveSection(\"instrument\"); // next section\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Investment Instrument Section */}\r\n                      {activeSection === \"instrument\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\"shareclass\", \"description\"]}\r\n                          />\r\n\r\n                          {/* Instruction text */}\r\n\r\n                          {/* Instrument selection */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              Select Investment Instrument Type\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>Description:</strong> The type of\r\n                                  equity issued. Common classes include \"Common\r\n                                  Stock\" for founders/employees and \"Preferred\"\r\n                                  shares for investors. Each class has unique\r\n                                  legal treatment.\r\n                                  <br />\r\n                                  <br />\r\n                                  <strong>Why It’s Important:</strong> Signals\r\n                                  investor seniority and expected rights.\r\n                                  <br />\r\n                                  <br /> Helps cap table readers quickly\r\n                                  understand who holds what.\r\n                                  <br />\r\n                                  <br /> Prevents confusion when new rounds\r\n                                  introduce more classes (e.g. Series A, B).\r\n                                  <br />\r\n                                  <br /> Used in legal docs, audits, and future\r\n                                  diligence — consistency matters.\r\n                                </div>\r\n                              </span>\r\n                              <span className=\"text-danger fs-5 ms-1\">*</span>\r\n                              {errors.instrumentType && (\r\n                                <span className=\"text-danger small ms-2\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.instrumentType}\r\n                                </span>\r\n                              )}\r\n                            </label>\r\n\r\n                            <div className=\"row mt-3\">\r\n                              {instrumentOptions.map((opt) => (\r\n                                <div key={opt.value} className=\"col-md-6 mb-3\">\r\n                                  <div\r\n                                    className={`form-check-card p-3 border rounded-3 cursor-pointer h-100 ${\r\n                                      formData.instrumentType === opt.value\r\n                                        ? \" bg-light\"\r\n                                        : \"border-gray-300\"\r\n                                    } ${errors.instrumentType ? \"\" : \"\"}`}\r\n                                    onClick={() => {\r\n                                      handleInputChange(\r\n                                        \"instrumentType\",\r\n                                        opt.value\r\n                                      );\r\n\r\n                                      // Reset customInstrument if not OTHER\r\n                                      if (opt.value !== \"OTHER\")\r\n                                        handleInputChange(\r\n                                          \"customInstrument\",\r\n                                          \"\"\r\n                                        );\r\n\r\n                                      // Clear errors\r\n                                      if (\r\n                                        errors.instrumentType ||\r\n                                        errors.customInstrument\r\n                                      ) {\r\n                                        setErrors((prev) => ({\r\n                                          ...prev,\r\n                                          instrumentType: \"\",\r\n                                          customInstrument: \"\",\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"form-check\">\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        name=\"instrumentType\"\r\n                                        value={opt.value}\r\n                                        checked={\r\n                                          formData.instrumentType === opt.value\r\n                                        }\r\n                                        onChange={() => {\r\n                                          handleInputChange(\r\n                                            \"instrumentType\",\r\n                                            opt.value\r\n                                          );\r\n\r\n                                          if (opt.value !== \"OTHER\")\r\n                                            handleInputChange(\r\n                                              \"customInstrument\",\r\n                                              \"\"\r\n                                            );\r\n\r\n                                          if (\r\n                                            errors.instrumentType ||\r\n                                            errors.customInstrument\r\n                                          ) {\r\n                                            setErrors((prev) => ({\r\n                                              ...prev,\r\n                                              instrumentType: \"\",\r\n                                              customInstrument: \"\",\r\n                                            }));\r\n                                          }\r\n                                        }}\r\n                                        className=\"form-check-input\"\r\n                                      />\r\n                                      <label className=\"form-check-label fw-medium\">\r\n                                        {opt.label}\r\n                                      </label>\r\n                                    </div>\r\n                                    <p className=\"text-muted small mb-0 mt-2\">\r\n                                      {opt.description}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                              {formData.instrumentType === \"Common Stock\" && (\r\n                                <div className=\"mt-3 p-3 border rounded bg-light\">\r\n                                  <h5>Common Stock Details</h5>\r\n\r\n                                  {/* Company Valuation */}\r\n                                  <label className=\"form-label\">\r\n                                    Company Valuation{\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    value={\r\n                                      formData.common_stock_valuation || \"\"\r\n                                    }\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"common_stock_valuation\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    name=\"common_stock_valuation\"\r\n                                    placeholder=\"Enter company valuation\"\r\n                                  />\r\n                                  {errors.common_stock_valuation && (\r\n                                    <div className=\"text-danger small\">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.common_stock_valuation}\r\n                                    </div>\r\n                                  )}\r\n                                  {/* Warrants Optional */}\r\n                                  <div className=\"form-check mb-3\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      className=\"form-check-input\"\r\n                                      id=\"hasWarrants\"\r\n                                      checked={formData.hasWarrants || false}\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          \"hasWarrants\",\r\n                                          e.target.checked\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    <label\r\n                                      className=\"form-check-label\"\r\n                                      htmlFor=\"hasWarrants\"\r\n                                    >\r\n                                      Add Warrants (optional)\r\n                                    </label>\r\n                                  </div>\r\n\r\n                                  {formData.hasWarrants && (\r\n                                    <>\r\n                                      {/* Exercise Price */}\r\n                                      <label className=\"form-label\">\r\n                                        Exercise Price (Strike Price)\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={formData.exercisePrice || \"\"}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"exercisePrice\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                        placeholder=\"Enter exercise price\"\r\n                                      />\r\n\r\n                                      {/* Expiration Date */}\r\n                                      <label className=\"form-label\">\r\n                                        Expiration Date\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={formData.expirationDate || \"\"}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"expirationDate\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                      />\r\n\r\n                                      {/* Warrant Ratio */}\r\n                                      <label className=\"form-label\">\r\n                                        Warrant Ratio\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={formData.warrantRatio || \"\"}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"warrantRatio\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                        placeholder=\"e.g., 1:1\"\r\n                                      />\r\n\r\n                                      {/* Type of Warrant */}\r\n                                      <label className=\"form-label\">\r\n                                        Type of Warrant\r\n                                      </label>\r\n                                      <select\r\n                                        className=\"form-control mb-3\"\r\n                                        value={formData.warrantType || \"CALL\"}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"warrantType\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <option value=\"CALL\">\r\n                                          Call Warrant (buy shares)\r\n                                        </option>\r\n                                        <option value=\"PUT\">\r\n                                          Put Warrant (sell shares)\r\n                                        </option>\r\n                                      </select>\r\n\r\n                                      {/* Warrant Explanation */}\r\n                                      <p className=\"text-muted small\">\r\n                                        <strong>What is a Warrant?</strong> A\r\n                                        warrant is like a special coupon that\r\n                                        gives someone (usually an investor or\r\n                                        lender) the right, but not the\r\n                                        obligation, to buy shares of your\r\n                                        company at a fixed price in the future.\r\n                                        <br />\r\n                                        <strong>Exercise Price:</strong> Must be\r\n                                        attractive enough to offer upside but\r\n                                        not overly dilutive.\r\n                                        <br />\r\n                                        <strong>Expiration Date:</strong> The\r\n                                        time frame during which the warrant can\r\n                                        be exercised. Longer durations give more\r\n                                        flexibility but may reduce urgency.\r\n                                        <br />\r\n                                        <strong>Warrant Ratio:</strong> Defines\r\n                                        how many shares can be purchased per\r\n                                        warrant. Commonly 1:1.\r\n                                        <br />\r\n                                        <strong>Type of Warrant:</strong> Call\r\n                                        allows buying shares, Put allows selling\r\n                                        shares back (less common).\r\n                                      </p>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n\r\n                              {formData.instrumentType ===\r\n                                \"Preferred Equity\" && (\r\n                                <div className=\"mt-3 p-3 border rounded bg-light\">\r\n                                  <h5>Preferred Equity Details</h5>\r\n\r\n                                  {/* Company Valuation */}\r\n                                  <label className=\"form-label\">\r\n                                    Company Valuation{\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    value={formData.preferred_valuation || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"preferred_valuation\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Enter company valuation\"\r\n                                  />\r\n                                  {errors.preferred_valuation && (\r\n                                    <div className=\"text-danger small\">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.preferred_valuation}\r\n                                    </div>\r\n                                  )}\r\n                                  {/* Warrants Optional */}\r\n                                  <div className=\"form-check mb-3\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      className=\"form-check-input\"\r\n                                      id=\"hasWarrants_preferred\"\r\n                                      checked={\r\n                                        formData.hasWarrants_preferred || false\r\n                                      }\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          \"hasWarrants_preferred\",\r\n                                          e.target.checked\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    <label\r\n                                      className=\"form-check-label\"\r\n                                      htmlFor=\"hasWarrants_preferred\"\r\n                                    >\r\n                                      Add Warrants (optional)\r\n                                    </label>\r\n                                  </div>\r\n\r\n                                  {formData.hasWarrants_preferred && (\r\n                                    <>\r\n                                      {/* Exercise Price */}\r\n                                      <label className=\"form-label\">\r\n                                        Exercise Price (Strike Price)\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={\r\n                                          formData.exercisePrice_preferred || \"\"\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"exercisePrice_preferred\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                        placeholder=\"Enter exercise price\"\r\n                                      />\r\n\r\n                                      {/* Expiration Date */}\r\n                                      <label className=\"form-label\">\r\n                                        Expiration Date\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={\r\n                                          formData.expirationDate_preferred ||\r\n                                          \"\"\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"expirationDate_preferred\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                      />\r\n\r\n                                      {/* Warrant Ratio */}\r\n                                      <label className=\"form-label\">\r\n                                        Warrant Ratio\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={\r\n                                          formData.warrantRatio_preferred || \"\"\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"warrantRatio_preferred\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                        placeholder=\"1:1 or custom ratio\"\r\n                                      />\r\n\r\n                                      {/* Type of Warrant */}\r\n                                      <label className=\"form-label\">\r\n                                        Type of Warrant\r\n                                      </label>\r\n                                      <select\r\n                                        className=\"form-control mb-3\"\r\n                                        value={\r\n                                          formData.warrantType_preferred ||\r\n                                          \"CALL\"\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"warrantType_preferred\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <option value=\"CALL\">\r\n                                          Call Warrant (buy shares)\r\n                                        </option>\r\n                                        <option value=\"PUT\">\r\n                                          Put Warrant (sell shares)\r\n                                        </option>\r\n                                      </select>\r\n\r\n                                      {/* Warrant Explanation */}\r\n                                      <p className=\"text-muted small\">\r\n                                        <strong>What is a Warrant?</strong> A\r\n                                        warrant is like a special coupon that\r\n                                        gives someone (usually an investor or\r\n                                        lender) the right, but not the\r\n                                        obligation, to buy shares of your\r\n                                        company at a fixed price in the future.\r\n                                        <br />\r\n                                        <strong>Exercise Price:</strong> Must be\r\n                                        attractive but not overly dilutive.\r\n                                        <br />\r\n                                        <strong>Expiration Date:</strong> Longer\r\n                                        durations offer more flexibility but may\r\n                                        reduce urgency.\r\n                                        <br />\r\n                                        <strong>Warrant Ratio:</strong> Defines\r\n                                        how many shares can be purchased per\r\n                                        warrant.\r\n                                        <br />\r\n                                        <strong>Type of Warrant:</strong> Call\r\n                                        allows buying shares, Put allows selling\r\n                                        shares back.\r\n                                      </p>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                              {formData.instrumentType === \"Safe\" && (\r\n                                <div className=\"mt-3 p-3 border rounded bg-light\">\r\n                                  <h5>SAFE Details</h5>\r\n\r\n                                  {/* Valuation Cap */}\r\n                                  <label className=\"form-label\">\r\n                                    Valuation Cap{\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    name=\"valuationCap\"\r\n                                    value={formData.valuationCap || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"valuationCap\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Enter valuation cap\"\r\n                                  />\r\n                                  {errors.valuationCap && (\r\n                                    <div className=\"text-danger small\">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.valuationCap}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted mb-3 d-block\">\r\n                                    Sets the maximum company valuation at which\r\n                                    the SAFE converts to equity.\r\n                                    <br />\r\n                                    <strong>Tip:</strong> Lower cap = more\r\n                                    equity for investors, higher cap = better\r\n                                    for founders.\r\n                                  </small>\r\n\r\n                                  {/* Discount Rate */}\r\n                                  <label className=\"form-label\">\r\n                                    Discount Rate (%){\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    value={formData.discountRate || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"discountRate\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Enter discount rate (10-25%)\"\r\n                                  />\r\n                                  {errors.discountRate && (\r\n                                    <div className=\"text-danger small\">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.discountRate}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted mb-3 d-block\">\r\n                                    Gives investors a percentage discount on the\r\n                                    future equity round.\r\n                                    <br />\r\n                                    Typical range: 10–25%.\r\n                                    <br />\r\n                                    Higher discount = more equity for investors.\r\n                                  </small>\r\n\r\n                                  {/* Pre-Money / Post-Money Selection */}\r\n                                  <label className=\"form-label\">\r\n                                    SAFE Type{\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <div className=\"form-check mb-2\">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      className=\"form-check-input\"\r\n                                      id=\"preMoney\"\r\n                                      name=\"safeType\"\r\n                                      value=\"PRE_MONEY\"\r\n                                      checked={\r\n                                        formData.safeType === \"PRE_MONEY\"\r\n                                      }\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          \"safeType\",\r\n                                          e.target.value\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    <label\r\n                                      className=\"form-check-label\"\r\n                                      htmlFor=\"preMoney\"\r\n                                    >\r\n                                      Pre-Money SAFE\r\n                                    </label>\r\n                                  </div>\r\n                                  <div className=\"form-check mb-3\">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      className=\"form-check-input\"\r\n                                      id=\"postMoney\"\r\n                                      name=\"safeType\"\r\n                                      value=\"POST_MONEY\"\r\n                                      checked={\r\n                                        formData.safeType === \"POST_MONEY\"\r\n                                      }\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          \"safeType\",\r\n                                          e.target.value\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    <label\r\n                                      className=\"form-check-label\"\r\n                                      htmlFor=\"postMoney\"\r\n                                    >\r\n                                      Post-Money SAFE\r\n                                    </label>\r\n                                  </div>\r\n                                  {errors.safeType && (\r\n                                    <div className=\"text-danger small \">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.safeType}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted d-block\">\r\n                                    <strong>Pre-Money:</strong> Ownership is\r\n                                    calculated before the SAFE investment — more\r\n                                    founder-friendly but less predictable.\r\n                                    <br />\r\n                                    <strong>Post-Money:</strong> Ownership is\r\n                                    calculated after the SAFE investment —\r\n                                    clearer for investors but may dilute\r\n                                    founders more.\r\n                                  </small>\r\n                                </div>\r\n                              )}\r\n                              {formData.instrumentType ===\r\n                                \"Venture/Bank DEBT\" && (\r\n                                <div className=\"mt-3 p-3 border rounded bg-light\">\r\n                                  <h5>Venture/Bank Debt Details</h5>\r\n\r\n                                  {/* Interest Rate */}\r\n                                  <label className=\"form-label\">\r\n                                    Interest Rate (%){\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    name=\"interestRate\"\r\n                                    value={formData.interestRate || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"interestRate\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Enter interest rate\"\r\n                                  />\r\n                                  {errors.interestRate && (\r\n                                    <div className=\"text-danger small \">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.interestRate}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted d-block mb-3\">\r\n                                    Typically higher than traditional loans due\r\n                                    to the risk profile of startups.\r\n                                  </small>\r\n\r\n                                  {/* Repayment Schedule */}\r\n                                  <label className=\"form-label\">\r\n                                    Repayment Schedule (months){\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    name=\"repaymentSchedule\"\r\n                                    value={formData.repaymentSchedule || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"repaymentSchedule\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Enter repayment schedule in months\"\r\n                                  />\r\n                                  {errors.repaymentSchedule && (\r\n                                    <div className=\"text-danger small \">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.repaymentSchedule}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted d-block mb-3\">\r\n                                    Most venture debt comes with interest-only\r\n                                    payments initially, followed by a lump-sum\r\n                                    principal repayment (bullet structure).\r\n                                  </small>\r\n\r\n                                  {/* Warrants Optional */}\r\n                                  <div className=\"form-check mb-3\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      className=\"form-check-input\"\r\n                                      id=\"hasWarrants_Bank\"\r\n                                      checked={\r\n                                        formData.hasWarrants_Bank || false\r\n                                      }\r\n                                      onChange={(e) =>\r\n                                        handleInputChange(\r\n                                          \"hasWarrants_Bank\",\r\n                                          e.target.checked\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    <label\r\n                                      className=\"form-check-label\"\r\n                                      htmlFor=\"hasWarrants_Bank\"\r\n                                    >\r\n                                      Add Warrants (optional)\r\n                                    </label>\r\n                                  </div>\r\n\r\n                                  {formData.hasWarrants_Bank && (\r\n                                    <>\r\n                                      {/* Exercise Price */}\r\n                                      <label className=\"form-label\">\r\n                                        Exercise Price (Strike Price)\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={\r\n                                          formData.exercisePrice_bank || \"\"\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"exercisePrice_bank\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                        placeholder=\"Enter exercise price\"\r\n                                      />\r\n\r\n                                      {/* Expiration Date */}\r\n                                      <label className=\"form-label\">\r\n                                        Expiration Date\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={formData.exercisedate_bank || \"\"}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"exercisedate_bank\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                      />\r\n\r\n                                      {/* Warrant Ratio */}\r\n                                      <label className=\"form-label\">\r\n                                        Warrant Ratio\r\n                                      </label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mb-3\"\r\n                                        value={formData.warrantRatio_bank || \"\"}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"warrantRatio_bank\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                        placeholder=\"e.g., 1:1\"\r\n                                      />\r\n\r\n                                      {/* Type of Warrant */}\r\n                                      <label className=\"form-label\">\r\n                                        Type of Warrant\r\n                                      </label>\r\n                                      <select\r\n                                        className=\"form-control mb-3\"\r\n                                        value={\r\n                                          formData.warrantType_bank || \"CALL\"\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            \"warrantType_bank\",\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <option value=\"CALL\">\r\n                                          Call Warrant (buy shares)\r\n                                        </option>\r\n                                        <option value=\"PUT\">\r\n                                          Put Warrant (sell shares)\r\n                                        </option>\r\n                                      </select>\r\n\r\n                                      {/* Warrant Explanation */}\r\n                                      <p className=\"text-muted small\">\r\n                                        <strong>What is a Warrant?</strong> A\r\n                                        warrant is like a special coupon that\r\n                                        gives someone (usually an investor or\r\n                                        lender) the right, but not the\r\n                                        obligation, to buy shares of your\r\n                                        company at a fixed price in the future.\r\n                                        <br />\r\n                                        <strong>Exercise Price:</strong> Must be\r\n                                        attractive enough to offer upside but\r\n                                        not overly dilutive.\r\n                                        <br />\r\n                                        <strong>Expiration Date:</strong> The\r\n                                        time frame during which the warrant can\r\n                                        be exercised. Longer durations give more\r\n                                        flexibility but may reduce urgency.\r\n                                        <br />\r\n                                        <strong>Warrant Ratio:</strong> Defines\r\n                                        how many shares can be purchased per\r\n                                        warrant. Commonly 1:1.\r\n                                        <br />\r\n                                        <strong>Type of Warrant:</strong> Call\r\n                                        allows buying shares, Put allows selling\r\n                                        shares back (less common).\r\n                                      </p>\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                              {formData.instrumentType ===\r\n                                \"Convertible Note\" && (\r\n                                <div className=\"mt-3 p-3 border rounded bg-light\">\r\n                                  <h5>Convertible Note Details</h5>\r\n\r\n                                  {/* Valuation Cap */}\r\n                                  <label className=\"form-label\">\r\n                                    Valuation Cap{\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    value={formData.valuationCap_note || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"valuationCap_note\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Enter valuation cap\"\r\n                                  />\r\n                                  {errors.valuationCap_note && (\r\n                                    <div className=\"text-danger small \">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.valuationCap_note}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted d-block mb-3\">\r\n                                    Maximum company valuation at which the note\r\n                                    converts into equity. Lower caps = more\r\n                                    equity for investors; higher caps = better\r\n                                    for founders.\r\n                                  </small>\r\n\r\n                                  {/* Discount Rate */}\r\n                                  <label className=\"form-label\">\r\n                                    Discount Rate (%){\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    value={formData.discountRate_note || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"discountRate_note\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Enter discount rate (10–30%)\"\r\n                                  />\r\n                                  {errors.discountRate_note && (\r\n                                    <div className=\"text-danger small \">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.discountRate_note}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted d-block mb-3\">\r\n                                    Percentage discount applied to the share\r\n                                    price in the next equity round. Rewards\r\n                                    early investors for risk-taking.\r\n                                  </small>\r\n\r\n                                  {/* Maturity Date */}\r\n                                  <label className=\"form-label\">\r\n                                    Maturity Date\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control mb-3\"\r\n                                    value={formData.maturityDate || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"maturityDate\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  />\r\n                                  {errors.maturityDate && (\r\n                                    <div className=\"text-danger small \">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.maturityDate}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted d-block mb-3\">\r\n                                    Deadline for conversion or repayment.\r\n                                    Typical range: 12–24 months.\r\n                                  </small>\r\n\r\n                                  {/* Interest Rate */}\r\n                                  <label className=\"form-label\">\r\n                                    Interest Rate (%)\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control mb-3\"\r\n                                    value={formData.interestRate_note || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"interestRate_note\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                    placeholder=\"Enter annual interest rate\"\r\n                                  />\r\n                                  {errors.interestRate_note && (\r\n                                    <div className=\"text-danger small \">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.interestRate_note}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted d-block mb-3\">\r\n                                    Annual interest accrued on the principal.\r\n                                    Most notes convert interest into equity.\r\n                                  </small>\r\n\r\n                                  {/* Convertible Trigger */}\r\n                                  <label className=\"form-label\">\r\n                                    Convertible Trigger{\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <select\r\n                                    className=\"form-control mb-3\"\r\n                                    value={formData.convertibleTrigger || \"\"}\r\n                                    onChange={(e) =>\r\n                                      handleInputChange(\r\n                                        \"convertibleTrigger\",\r\n                                        e.target.value\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <option value=\"\">\r\n                                      Select trigger event\r\n                                    </option>\r\n                                    <option value=\"QUALIFIED_FINANCING\">\r\n                                      Qualified Equity Financing\r\n                                    </option>\r\n                                    <option value=\"ACQUISITION_IPO\">\r\n                                      Acquisition or IPO\r\n                                    </option>\r\n                                    <option value=\"MATURITY_DATE\">\r\n                                      Reaching Maturity Date\r\n                                    </option>\r\n                                  </select>\r\n                                  {errors.convertibleTrigger && (\r\n                                    <div className=\"text-danger small \">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.convertibleTrigger}\r\n                                    </div>\r\n                                  )}\r\n                                  <small className=\"text-muted d-block mb-3\">\r\n                                    Event that causes the note to convert into\r\n                                    equity. Define clearly to avoid disputes.\r\n                                  </small>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Conditional OTHER input */}\r\n                          {formData.instrumentType === \"OTHER\" && (\r\n                            <div className=\"mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Custom Investment Instrument Name\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter custom investment instrument name\"\r\n                                value={formData.customInstrument || \"\"}\r\n                                onChange={(e) =>\r\n                                  handleInputChange(\r\n                                    \"customInstrument\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                                className={`form-control ${\r\n                                  errors.customInstrument ? \"iss-invalid\" : \"\"\r\n                                }`}\r\n                                maxLength={30}\r\n                              />\r\n                              <div className=\"form-text\">\r\n                                {formData.customInstrument\r\n                                  ? formData.customInstrument.length\r\n                                  : 0}\r\n                                /30 characters\r\n                              </div>\r\n                              {errors.customInstrument && (\r\n                                <div className=\"text-danger small\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.customInstrument}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Navigation buttons */}\r\n                          <div className=\"d-flex justify-content-between pt-3 border-top gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"description\")}\r\n                            >\r\n                              <i className=\"bi bi-arrow-left me-2\"></i>Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                // Validate instrument type\r\n                                if (!formData.instrumentType) {\r\n                                  newErrors.instrumentType =\r\n                                    \"Please select an investment instrument type\";\r\n                                }\r\n\r\n                                if (formData.instrumentType === \"OTHER\") {\r\n                                  if (!formData.customInstrument) {\r\n                                    newErrors.customInstrument =\r\n                                      \"This field is required\";\r\n                                  }\r\n                                }\r\n\r\n                                // Conditional validations per instrument\r\n                                switch (formData.instrumentType) {\r\n                                  case \"Common Stock\":\r\n                                    if (\r\n                                      !formData.common_stock_valuation ||\r\n                                      Number(formData.common_stock_valuation) <=\r\n                                        0\r\n                                    ) {\r\n                                      newErrors.common_stock_valuation =\r\n                                        \"Company valuation is required and must be greater than 0\";\r\n                                    }\r\n                                    break;\r\n\r\n                                  case \"Preferred Equity\":\r\n                                    if (\r\n                                      !formData.preferred_valuation ||\r\n                                      Number(formData.preferred_valuation) <= 0\r\n                                    ) {\r\n                                      newErrors.preferred_valuation =\r\n                                        \"Company Valuation is required and must be greater than 0\";\r\n                                    }\r\n                                    break;\r\n\r\n                                  case \"Safe\":\r\n                                    if (!formData.valuationCap)\r\n                                      newErrors.valuationCap =\r\n                                        \"This field is required\";\r\n                                    if (!formData.discountRate)\r\n                                      newErrors.discountRate =\r\n                                        \"This field is required\";\r\n                                    if (!formData.safeType)\r\n                                      newErrors.safeType =\r\n                                        \"This field is required\";\r\n                                    break;\r\n\r\n                                  case \"Convertible Note\":\r\n                                    if (!formData.valuationCap_note)\r\n                                      newErrors.valuationCap_note =\r\n                                        \"This field is required\";\r\n                                    if (!formData.discountRate_note)\r\n                                      newErrors.discountRate_note =\r\n                                        \"This field is required\";\r\n                                    if (!formData.maturityDate)\r\n                                      newErrors.maturityDate =\r\n                                        \"This field is required\";\r\n                                    if (!formData.interestRate_note)\r\n                                      newErrors.interestRate_note =\r\n                                        \"This field is required\";\r\n                                    if (!formData.convertibleTrigger)\r\n                                      newErrors.convertibleTrigger =\r\n                                        \"This field is required\";\r\n                                    break;\r\n\r\n                                  case \"Venture/Bank DEBT\":\r\n                                    if (!formData.repaymentSchedule)\r\n                                      newErrors.repaymentSchedule =\r\n                                        \"This field is required\";\r\n                                    if (!formData.interestRate)\r\n                                      newErrors.interestRate =\r\n                                        \"This field is required\";\r\n                                    break;\r\n\r\n                                  default:\r\n                                    break;\r\n                                }\r\n\r\n                                setErrors(newErrors); // This **overwrites previous errors**, so unrelated errors are removed\r\n\r\n                                if (Object.keys(newErrors).length === 0) {\r\n                                  setActiveSection(\"roundsize\");\r\n                                } else {\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".border-danger, .is-invalid\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Round Size Section */}\r\n                      {activeSection === \"roundsize\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                            ]}\r\n                          />\r\n                          <h3 className=\"h5 mb-4 text-gray-800\">Round Size</h3>\r\n                          <div className=\"row align-items-start\">\r\n                            <div className=\"col-md-6 mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Amount{\" \"}\r\n                                <span\r\n                                  className=\"tooltip-icon ms-2\"\r\n                                  tabIndex={0}\r\n                                >\r\n                                  <img\r\n                                    className=\"blackdark\"\r\n                                    width=\"15\"\r\n                                    height=\"15\"\r\n                                    src=\"/assets/user/images/question.png\"\r\n                                    alt=\"Tip\"\r\n                                  />\r\n                                  <div\r\n                                    className=\"tooltip-text tool-test-white text-white\"\r\n                                    role=\"tooltip\"\r\n                                  >\r\n                                    Round size is the total capital an\r\n                                    early-stage company seeks to raise in a\r\n                                    financing round, typically through equity,\r\n                                    SAFEs, or convertible notes, and plays a\r\n                                    critical role in determining ownership\r\n                                    dilution, investor rights, and cap table\r\n                                    structure. It’s the headline number often\r\n                                    seen in investor decks (“We’re raising $2\r\n                                    million in our Seed round”), but beneath\r\n                                    that number sits a complex mix of legal,\r\n                                    strategic, and operational considerations.\r\n                                    Getting it right is essential: raising too\r\n                                    little risks running out of funds before\r\n                                    hitting key milestones, while raising too\r\n                                    much can distort valuations and lead to down\r\n                                    rounds. Smart planning ensures funds last to\r\n                                    the next inflection point, supports\r\n                                    momentum, and protects founder control.\r\n                                  </div>\r\n                                </span>\r\n                                <span className=\"text-danger fs-5\">*</span>\r\n                              </label>\r\n                              <NumericFormat\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                                fixedDecimalScale={true}\r\n                                allowNegative={false}\r\n                                placeholder=\"Enter amount\"\r\n                                value={formData.roundsize}\r\n                                onValueChange={(values) => {\r\n                                  handleInputChange(\"roundsize\", values.value); // raw numeric value (without commas)\r\n                                  if (errors.roundsize) {\r\n                                    setErrors((prev) => ({\r\n                                      ...prev,\r\n                                      roundsize: \"\",\r\n                                    }));\r\n                                  }\r\n                                }}\r\n                                className={`textarea_input ${\r\n                                  errors.roundsize ? \"is-invalid\" : \"\"\r\n                                }`}\r\n                              />\r\n\r\n                              <div className=\"d-flex justify-content-between align-items-center mt-1\">\r\n                                {errors.roundsize && (\r\n                                  <div className=\"text-danger small\">\r\n                                    <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                    {errors.roundsize}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Currency\r\n                              </label>\r\n                              <select\r\n                                className=\"textarea_input\"\r\n                                value={formData.currency}\r\n                                onChange={(e) =>\r\n                                  handleInputChange(\"currency\", e.target.value)\r\n                                }\r\n                              >\r\n                                <option value=\"\">-- Select Currency --</option>\r\n                                {countrySymbolList.map((item) => (\r\n                                  <option\r\n                                    key={item.id}\r\n                                    value={`${item.currency_code} ${item.currency_symbol}`} // 👈 code + symbol\r\n                                  >\r\n                                    {item.currency_code} {item.currency_symbol}\r\n                                  </option>\r\n                                ))}\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between  gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"instrument\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                // Validate before proceeding\r\n                                const newErrors = {};\r\n\r\n                                if (!formData.roundsize.trim()) {\r\n                                  newErrors.roundsize =\r\n                                    \"This field is required\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"issuedshares\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Additional sections would follow the same pattern */}\r\n                      {/* Issued Shares Section */}\r\n                      {activeSection === \"issuedshares\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                            ]}\r\n                          />\r\n                          <h3 className=\"h5 mb-4 text-gray-800\">\r\n                            Specify the total number of shares being issued in\r\n                            this round only\r\n                          </h3>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-6  mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Total Shares Issued in this Round{\" \"}\r\n                                <span\r\n                                  className=\"tooltip-icon ms-2\"\r\n                                  tabIndex={0}\r\n                                >\r\n                                  <img\r\n                                    className=\"blackdark\"\r\n                                    width=\"15\"\r\n                                    height=\"15\"\r\n                                    src=\"/assets/user/images/question.png\"\r\n                                    alt=\"Tip\"\r\n                                  />\r\n                                  <div\r\n                                    className=\"tooltip-text tool-test-white text-white\"\r\n                                    role=\"tooltip\"\r\n                                  >\r\n                                    The number of shares in an early-stage\r\n                                    company represents the total units of\r\n                                    ownership authorized, issued, or outstanding\r\n                                    across the cap table, and serves as the\r\n                                    fundamental denominator for equity\r\n                                    allocation, valuation modeling, and investor\r\n                                    negotiations. At its core, share count\r\n                                    affects percentage ownership, dilution\r\n                                    outcomes, and legal entitlements such as\r\n                                    voting power and liquidation preferences.\r\n                                    Startups typically begin with a set number\r\n                                    of authorized shares (e.g. 10 million) —\r\n                                    often arbitrary but chosen to facilitate\r\n                                    clean math and flexibility for future\r\n                                    allocations like option pools or new rounds.\r\n                                  </div>\r\n                                </span>\r\n                                <span style={{ color: \"var(--primary)\" }}>\r\n                                  *\r\n                                </span>\r\n                              </label>\r\n                              <NumericFormat\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                                fixedDecimalScale={true}\r\n                                allowNegative={false}\r\n                                placeholder=\"Enter # of shares\"\r\n                                value={formData.issuedshares}\r\n                                onValueChange={(values) => {\r\n                                  handleInputChange(\r\n                                    \"issuedshares\",\r\n                                    values.value\r\n                                  ); // raw numeric value (without commas)\r\n                                  if (errors.issuedshares) {\r\n                                    setErrors((prev) => ({\r\n                                      ...prev,\r\n                                      issuedshares: \"\",\r\n                                    }));\r\n                                  }\r\n                                }}\r\n                                className={`textarea_input ${\r\n                                  errors.issuedshares ? \"is-invalid\" : \"\"\r\n                                }`}\r\n                              />\r\n                              <div className=\"d-flex justify-content-between align-items-center mt-1\">\r\n                                {errors.issuedshares && (\r\n                                  <div className=\"text-danger small\">\r\n                                    <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                    {errors.issuedshares}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Is this round closed or active?{\" \"}\r\n                                <span style={{ color: \"var(--primary)\" }}>\r\n                                  *\r\n                                </span>\r\n                              </label>\r\n\r\n                              {/* Radio buttons */}\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"radio\"\r\n                                  name=\"roundStatus\"\r\n                                  id=\"roundClosed\"\r\n                                  value=\"CLOSED\"\r\n                                  checked={formData.roundStatus === \"CLOSED\"}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(\r\n                                      \"roundStatus\",\r\n                                      e.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <label\r\n                                  className=\"form-check-label\"\r\n                                  htmlFor=\"roundClosed\"\r\n                                >\r\n                                  CLOSED\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"form-check mb-3\">\r\n                                <input\r\n                                  className=\"form-check-input\"\r\n                                  type=\"radio\"\r\n                                  name=\"roundStatus\"\r\n                                  id=\"roundActive\"\r\n                                  value=\"ACTIVE\"\r\n                                  checked={formData.roundStatus === \"ACTIVE\"}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(\r\n                                      \"roundStatus\",\r\n                                      e.target.value\r\n                                    )\r\n                                  }\r\n                                />\r\n                                <label\r\n                                  className=\"form-check-label\"\r\n                                  htmlFor=\"roundActive\"\r\n                                >\r\n                                  ACTIVE\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-between align-items-center mt-1\">\r\n                                {errors.roundStatus && (\r\n                                  <div className=\"text-danger small\">\r\n                                    <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                    {errors.roundStatus}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                              {/* Conditional rendering if CLOSED */}\r\n                              {formData.roundStatus === \"CLOSED\" && (\r\n                                <>\r\n                                  {/* Date of closure */}\r\n                                  <label className=\"form-label fw-semibold\">\r\n                                    Date Round Closed{\" \"}\r\n                                    <span style={{ color: \"var(--primary)\" }}>\r\n                                      *\r\n                                    </span>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"MM/DD/YYYY\"\r\n                                    value={formData.dateroundclosed || \"\"}\r\n                                    onChange={(e) => {\r\n                                      handleInputChange(\r\n                                        \"dateroundclosed\",\r\n                                        e.target.value\r\n                                      );\r\n                                      if (errors.dateroundclosed) {\r\n                                        setErrors((prev) => ({\r\n                                          ...prev,\r\n                                          dateroundclosed: \"\",\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                    className={`form-control ${\r\n                                      errors.dateroundclosed ? \"is-invalid\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                  {errors.dateroundclosed && (\r\n                                    <div className=\"text-danger small mt-1\">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.dateroundclosed}\r\n                                    </div>\r\n                                  )}\r\n                                  <div className=\"form-text mb-3\">\r\n                                    Calendar: MM / DD / YYYY\r\n                                  </div>\r\n\r\n                                  {/* Button to add more investors */}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"roundsize\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                // 1️⃣ Validate issued shares\r\n                                if (!formData.issuedshares) {\r\n                                  newErrors.issuedshares =\r\n                                    \"This field is required\";\r\n                                }\r\n\r\n                                // 2️⃣ Validate round status selection\r\n                                if (!formData.roundStatus) {\r\n                                  newErrors.roundStatus =\r\n                                    \"Please select CLOSED or ACTIVE\";\r\n                                }\r\n\r\n                                // 3️⃣ Validate dateroundclosed only if CLOSED\r\n                                if (formData.roundStatus === \"CLOSED\") {\r\n                                  const dateRegex =\r\n                                    /^(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])\\/\\d{4}$/; // MM/DD/YYYY\r\n                                  const inputValue = formData.dateroundclosed;\r\n\r\n                                  if (!inputValue) {\r\n                                    newErrors.dateroundclosed =\r\n                                      \"This field is required\";\r\n                                  } else if (!dateRegex.test(inputValue)) {\r\n                                    newErrors.dateroundclosed =\r\n                                      \"Enter a valid date (MM/DD/YYYY)\";\r\n                                  } else {\r\n                                    // Check if date is today or in the future\r\n                                    const [month, day, year] = inputValue\r\n                                      .split(\"/\")\r\n                                      .map(Number);\r\n                                    const inputDate = new Date(\r\n                                      year,\r\n                                      month - 1,\r\n                                      day\r\n                                    );\r\n                                    const today = new Date();\r\n                                    today.setHours(0, 0, 0, 0); // ignore time\r\n\r\n                                    if (inputDate < today) {\r\n                                      newErrors.dateroundclosed =\r\n                                        \"Date cannot be in the past\";\r\n                                    }\r\n                                  }\r\n                                }\r\n\r\n                                // 4️⃣ Set errors or continue\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"rights\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Placeholder for remaining sections - would implement similarly */}\r\n                      {activeSection === \"rights\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                            ]}\r\n                          />\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Rights Associated with this Share Class{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> Specifies the\r\n                                  negotiated powers and entitlements that\r\n                                  holders of this class enjoy — it’s the fine\r\n                                  print investors care about.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> This defines\r\n                                  control dynamics, dividend rights, conversion\r\n                                  triggers, redemption clauses, anti-dilution,\r\n                                  etc. It’s the architecture of deal terms.\r\n                                  <br />\r\n                                  <strong>How to fill it:</strong> Reference\r\n                                  exact clauses from investor agreements (term\r\n                                  sheets or subscription documents) and simplify\r\n                                  into readable but accurate summaries.\r\n                                  <br />– Non-cumulative dividends at 6%\r\n                                  annually\r\n                                  <br />– Automatic conversion on qualified\r\n                                  financing &gt;$5M\r\n                                  <br />– Protective provisions for mergers,\r\n                                  board expansion, and budget approvals\r\n                                </div>\r\n                              </span>\r\n                            </label>\r\n                            <textarea\r\n                              placeholder=\"Describe the rights and preferences for this share class\"\r\n                              className=\"textarea_input\"\r\n                              rows=\"4\"\r\n                              value={formData.rights}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\"rights\", e.target.value)\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"issuedshares\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"liquidation\")}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {activeSection === \"liquidation\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                            ]}\r\n                          />\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Liquidation Preference Details{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> Establishes the\r\n                                  order and magnitude of payouts if the company\r\n                                  is sold or dissolved.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> Investors\r\n                                  look here to understand downside protection\r\n                                  and exit expectations — it’s one of the most\r\n                                  scrutinized clauses during fundraising.\r\n                                  <br />\r\n                                  <strong>How to fill it:</strong> Clearly\r\n                                  outline whether it’s non-participating (just\r\n                                  the preference) or participating (preference +\r\n                                  pro-rata share), and how it stacks with other\r\n                                  rounds.\r\n                                </div>\r\n                              </span>\r\n                            </label>\r\n                            <textarea\r\n                              placeholder=\"Describe the liquidation preference\"\r\n                              className=\"textarea_input\"\r\n                              rows=\"4\"\r\n                              value={formData.liquidationpreferences}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  \"liquidationpreferences\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            />\r\n                            <div className=\"row mt-3\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Liquidation Participating{\" \"}\r\n                                <span style={{ color: \"var(--primary)\" }}>\r\n                                  *\r\n                                </span>\r\n                                {errors.liquidation && (\r\n                                  <span className=\"text-danger small ms-2\">\r\n                                    <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                    {errors.liquidation}\r\n                                  </span>\r\n                                )}\r\n                              </label>\r\n                              {liquidationOptions.map((opt) => (\r\n                                <div key={opt.value} className=\"col-md-6 mb-3\">\r\n                                  <div\r\n                                    className={`form-check-card p-3 border rounded-3 cursor-pointer h-100 ${\r\n                                      formData?.liquidation?.includes(opt.value)\r\n                                        ? \"bg-light\"\r\n                                        : \"border-gray-300\"\r\n                                    } ${\r\n                                      errors.liquidation ? \"is-invalid\" : \"\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                      let updatedSelection = [\r\n                                        ...(formData?.liquidation || []),\r\n                                      ];\r\n\r\n                                      if (opt.value === \"N/A\") {\r\n                                        updatedSelection = [\"N/A\"];\r\n                                      } else if (opt.value === \"OTHER\") {\r\n                                        updatedSelection =\r\n                                          updatedSelection.filter(\r\n                                            (v) => v !== \"N/A\"\r\n                                          );\r\n                                        if (\r\n                                          !updatedSelection.includes(\"OTHER\")\r\n                                        ) {\r\n                                          updatedSelection.push(\"OTHER\");\r\n                                        } else {\r\n                                          updatedSelection =\r\n                                            updatedSelection.filter(\r\n                                              (v) => v !== \"OTHER\"\r\n                                            );\r\n                                        }\r\n                                      } else {\r\n                                        updatedSelection =\r\n                                          updatedSelection.filter(\r\n                                            (v) => v !== \"N/A\"\r\n                                          );\r\n\r\n                                        if (\r\n                                          updatedSelection.includes(opt.value)\r\n                                        ) {\r\n                                          updatedSelection =\r\n                                            updatedSelection.filter(\r\n                                              (v) => v !== opt.value\r\n                                            );\r\n                                        } else {\r\n                                          updatedSelection.push(opt.value);\r\n                                        }\r\n                                      }\r\n\r\n                                      handleInputChange(\r\n                                        \"liquidation\",\r\n                                        updatedSelection\r\n                                      );\r\n\r\n                                      if (errors.liquidation) {\r\n                                        setErrors((prev) => ({\r\n                                          ...prev,\r\n                                          liquidation: \"\",\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"form-check\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        name=\"liquidation\"\r\n                                        value={opt.value}\r\n                                        checked={\r\n                                          formData?.liquidation?.includes(\r\n                                            opt.value\r\n                                          ) || false\r\n                                        }\r\n                                        onChange={() => {}}\r\n                                        className=\"form-check-input\"\r\n                                      />\r\n                                      <label className=\"form-check-label fw-medium\">\r\n                                        {opt.label}\r\n                                      </label>\r\n                                    </div>\r\n                                    <p className=\"text-muted small mb-0 mt-2\">\r\n                                      {opt.description}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n\r\n                              {formData?.liquidation?.includes(\"OTHER\") && (\r\n                                <div className=\"mb-4\">\r\n                                  <label className=\"form-label fw-semibold\">\r\n                                    Custom Liquidation Participating:\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter custom response\"\r\n                                    value={formData.liquidationOther || \"\"}\r\n                                    onChange={(e) => {\r\n                                      handleInputChange(\r\n                                        \"liquidationOther\",\r\n                                        e.target.value\r\n                                      );\r\n                                      if (errors.liquidationOther) {\r\n                                        setErrors((prev) => ({\r\n                                          ...prev,\r\n                                          liquidationOther: \"\",\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                    className={`form-control ${\r\n                                      errors.liquidationOther ? \"\" : \"\"\r\n                                    }`}\r\n                                  />\r\n                                  {errors.liquidationOther && (\r\n                                    <div className=\"text-danger small\">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.liquidationOther}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"rights\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                // Validate before proceeding\r\n                                const newErrors = {};\r\n\r\n                                // Check if at least one liquidation option is selected\r\n                                if (formData.liquidation.length === 0) {\r\n                                  console.log(formData.liquidation);\r\n                                  newErrors.liquidation =\r\n                                    \"Please select a liquidation participating type\";\r\n                                }\r\n\r\n                                // Check if OTHER is selected but the text input is empty\r\n                                if (formData.liquidation.includes(\"OTHER\")) {\r\n                                  if (\r\n                                    !formData.liquidationOther ||\r\n                                    !formData.liquidationOther.trim()\r\n                                  ) {\r\n                                    newErrors.liquidationOther =\r\n                                      \"This field is required\";\r\n                                  }\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to the first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  // Clear errors if validation passes\r\n                                  setErrors({});\r\n                                  setActiveSection(\"convertible\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {activeSection === \"convertible\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                            ]}\r\n                          />\r\n\r\n                          {/* YES / NO - Shares Convertible */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Shares are convertible{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> Indicate the\r\n                                  conditions under which the security, typically\r\n                                  a convertible note or SAFE, automatically or\r\n                                  optionally converts into another class of\r\n                                  shares, most commonly Common Stock.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> Impacts\r\n                                  equity dilution, IPO readiness, and governance\r\n                                  transitions. This is key in modelling cap\r\n                                  table evolution.\r\n                                  <br />\r\n                                  <strong>How to fill it:</strong> Yes/No +\r\n                                  trigger mechanisms (voluntary, automatic,\r\n                                  conditional)\r\n                                </div>\r\n                              </span>{\" \"}\r\n                              <span style={{ color: \"var(--primary)\" }}>*</span>\r\n                            </label>\r\n                            <div className=\"d-flex gap-3\">\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"convertible\"\r\n                                  value=\"Yes\"\r\n                                  checked={formData.convertible === \"Yes\"}\r\n                                  onChange={() => {\r\n                                    handleInputChange(\"convertible\", \"Yes\");\r\n                                    if (errors.convertible) {\r\n                                      setErrors((prev) => ({\r\n                                        ...prev,\r\n                                        convertible: \"\",\r\n                                      }));\r\n                                    }\r\n                                  }}\r\n                                  className={`form-check-input ${\r\n                                    errors.convertible ? \"is-invalid\" : \"\"\r\n                                  }`}\r\n                                />\r\n                                <label className=\"form-check-label\">Yes</label>\r\n                              </div>\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"convertible\"\r\n                                  value=\"No\"\r\n                                  checked={formData.convertible === \"No\"}\r\n                                  onChange={() => {\r\n                                    handleInputChange(\"convertible\", \"No\");\r\n                                    if (errors.convertible) {\r\n                                      setErrors((prev) => ({\r\n                                        ...prev,\r\n                                        convertible: \"\",\r\n                                      }));\r\n                                    }\r\n                                  }}\r\n                                  className={`form-check-input ${\r\n                                    errors.convertible ? \"is-invalid\" : \"\"\r\n                                  }`}\r\n                                />\r\n                                <label className=\"form-check-label\">No</label>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {errors.convertible && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.convertible}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Show only if YES */}\r\n                          {formData.convertible === \"Yes\" && (\r\n                            <div className=\"mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Convertible Type{\" \"}\r\n                                <span style={{ color: \"var(--primary)\" }}>\r\n                                  *\r\n                                </span>\r\n                              </label>\r\n                              <div className=\"row mt-2\">\r\n                                {[\"Voluntary\", \"Automatic\", \"Conditional\"].map(\r\n                                  (opt) => (\r\n                                    <div key={opt} className=\"col-md-4 mb-3\">\r\n                                      <div\r\n                                        className={`form-check-card p-3 border rounded-3 cursor-pointer h-100 ${\r\n                                          formData.convertibleType === opt\r\n                                            ? \" bg-light\"\r\n                                            : errors.convertibleType\r\n                                            ? \"border-danger\"\r\n                                            : \"border-gray-300\"\r\n                                        }`}\r\n                                        onClick={() => {\r\n                                          handleInputChange(\r\n                                            \"convertibleType\",\r\n                                            opt\r\n                                          );\r\n                                          if (errors.convertibleType) {\r\n                                            setErrors((prev) => ({\r\n                                              ...prev,\r\n                                              convertibleType: \"\",\r\n                                            }));\r\n                                          }\r\n                                        }}\r\n                                      >\r\n                                        <div className=\"form-check\">\r\n                                          <input\r\n                                            type=\"radio\"\r\n                                            name=\"convertibleType\"\r\n                                            value={opt}\r\n                                            checked={\r\n                                              formData.convertibleType === opt\r\n                                            }\r\n                                            onChange={() => {\r\n                                              handleInputChange(\r\n                                                \"convertibleType\",\r\n                                                opt\r\n                                              );\r\n                                              if (errors.convertibleType) {\r\n                                                setErrors((prev) => ({\r\n                                                  ...prev,\r\n                                                  convertibleType: \"\",\r\n                                                }));\r\n                                              }\r\n                                            }}\r\n                                            className=\"form-check-input\"\r\n                                          />\r\n                                          <label className=\"form-check-label fw-medium\">\r\n                                            {opt}\r\n                                          </label>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n\r\n                              {errors.convertibleType && (\r\n                                <div className=\"text-danger small mt-1\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.convertibleType}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"liquidation\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                // validation\r\n                                if (!formData.convertible) {\r\n                                  newErrors.convertible =\r\n                                    \"Please select Yes or No\";\r\n                                }\r\n                                if (\r\n                                  formData.convertible === \"Yes\" &&\r\n                                  !formData.convertibleType\r\n                                ) {\r\n                                  newErrors.convertibleType =\r\n                                    \"Please select Voluntary, Automatic or Conditional\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"voting\"); // move ahead\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {activeSection === \"voting\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                              \"convertible\",\r\n                            ]}\r\n                          />\r\n\r\n                          {/* YES / NO - Shares Convertible */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Shareholders Voting Rights{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> Determines how\r\n                                  much influence equity holders wield in company\r\n                                  decisions, including board appointments,\r\n                                  strategic pivots, and future fundraising.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> Control\r\n                                  rights shape governance — founders often trade\r\n                                  economic upside for retaining voting control.\r\n                                </div>\r\n                              </span>{\" \"}\r\n                              <span style={{ color: \"var(--primary)\" }}>*</span>\r\n                            </label>\r\n                            <div className=\"d-flex gap-3\">\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"voting\"\r\n                                  value=\"Yes\"\r\n                                  checked={formData.voting === \"Yes\"}\r\n                                  onChange={() => {\r\n                                    handleInputChange(\"voting\", \"Yes\");\r\n                                    if (errors.voting) {\r\n                                      setErrors((prev) => ({\r\n                                        ...prev,\r\n                                        voting: \"\",\r\n                                      }));\r\n                                    }\r\n                                  }}\r\n                                  className={`form-check-input ${\r\n                                    errors.voting ? \"is-invalid\" : \"\"\r\n                                  }`}\r\n                                />\r\n                                <label className=\"form-check-label\">Yes</label>\r\n                              </div>\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"voting\"\r\n                                  value=\"No\"\r\n                                  checked={formData.voting === \"No\"}\r\n                                  onChange={() => {\r\n                                    handleInputChange(\"voting\", \"No\");\r\n                                    if (errors.voting) {\r\n                                      setErrors((prev) => ({\r\n                                        ...prev,\r\n                                        voting: \"\",\r\n                                      }));\r\n                                    }\r\n                                  }}\r\n                                  className={`form-check-input ${\r\n                                    errors.voting ? \"is-invalid\" : \"\"\r\n                                  }`}\r\n                                />\r\n                                <label className=\"form-check-label\">No</label>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {errors.voting && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.voting}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"convertible\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                // validation\r\n                                if (!formData.voting) {\r\n                                  newErrors.voting = \"Please select Yes or No\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"termsheet\"); // move ahead\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {activeSection === \"termsheet\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                              \"convertible\",\r\n                              \"voting\",\r\n                            ]}\r\n                          />\r\n\r\n                          {/* Upload Term Sheet */}\r\n                          {/* Upload Term Sheet */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              Upload Your Term Sheet(s)\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  A term sheet is a non-binding document that\r\n                                  sets the stage for an investment by outlining\r\n                                  the essential terms of the deal: valuation,\r\n                                  share type, governance rights, investor\r\n                                  protections, and expected post-money\r\n                                  ownership. It is the ‘strategic handshake’\r\n                                  between founders and investors before drafting\r\n                                  legal documents.\r\n                                  <br />\r\n                                  <br />\r\n                                  Investors review it to understand precisely\r\n                                  what they get in return for their capital,\r\n                                  avoiding surprises like excessive dilution or\r\n                                  missing voting rights.\r\n                                  <br />\r\n                                  <br />\r\n                                  Once interest is confirmed, often through\r\n                                  soft-circling, where investors signal informal\r\n                                  commitments based on these outlined terms, the\r\n                                  term sheet forms the backbone for the formal,\r\n                                  binding subscription documents.\r\n                                  <br />\r\n                                  <br />\r\n                                  Formal commitment only happens when investors\r\n                                  sign the Term Sheet and the Subscription\r\n                                  documents and transfer funds, officially\r\n                                  becoming shareholders.\r\n                                </div>\r\n                              </span>\r\n                            </label>\r\n\r\n                            <input\r\n                              type=\"file\"\r\n                              multiple\r\n                              onChange={(e) => {\r\n                                handleInputChange(\r\n                                  \"termsheetFile\",\r\n                                  Array.from(e.target.files)\r\n                                );\r\n                                if (errors.termsheetFile) {\r\n                                  setErrors((prev) => ({\r\n                                    ...prev,\r\n                                    termsheetFile: \"\",\r\n                                  }));\r\n                                }\r\n                              }}\r\n                              className={`textarea_input ${\r\n                                errors.termsheetFile ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                            />\r\n\r\n                            {/* Show selected file names */}\r\n                            {formData.termsheetFile &&\r\n                              formData.termsheetFile.length > 0 && (\r\n                                <ul className=\"mt-2 small text-muted\">\r\n                                  {formData.termsheetFile.map((file, index) => (\r\n                                    <li key={index}>\r\n                                      <strong>{file.name}</strong>\r\n                                    </li>\r\n                                  ))}\r\n                                </ul>\r\n                              )}\r\n\r\n                            {errors.termsheetFile && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.termsheetFile}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"voting\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                if (\r\n                                  !formData.termsheetFile ||\r\n                                  formData.termsheetFile.length === 0\r\n                                ) {\r\n                                  newErrors.termsheetFile =\r\n                                    \"Please upload your file\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"subscription\"); // move ahead\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {activeSection === \"subscription\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                              \"convertible\",\r\n                              \"voting\",\r\n                              \"termsheet\",\r\n                            ]}\r\n                          />\r\n\r\n                          {/* Upload Term Sheet */}\r\n                          {/* Upload Term Sheet */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              Upload Your Subscription Document\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  Subscription documents are the formal, legally\r\n                                  binding agreements that an investor signs to\r\n                                  purchase equity in a company after a term\r\n                                  sheet has been agreed upon. These include the\r\n                                  Subscription Agreement, which outlines how\r\n                                  many shares the investor is buying, at what\r\n                                  price, and under what terms; and are often\r\n                                  accompanied by ancillary documents such as a\r\n                                  Shareholders’ Agreement (covering governance,\r\n                                  exit terms, voting rights), and occasionally\r\n                                  Investor Rights Agreements or Side Letters.\r\n                                  <br />\r\n                                  <br />\r\n                                  Subscription documents legally commit the\r\n                                  investor to the deal and obligate the company\r\n                                  to issue shares in exchange for capital. They\r\n                                  are drafted using the economic and legal terms\r\n                                  defined in the term sheet, meaning they\r\n                                  enforce the handshake that began at the\r\n                                  negotiation stage.\r\n                                  <br />\r\n                                  <br />\r\n                                  Investors must carefully review subscription\r\n                                  documents before signing, as they mark the\r\n                                  transition from informal interest to formal\r\n                                  shareholder status, binding them to the\r\n                                  obligations, rights, and risks of the\r\n                                  investment.\r\n                                </div>\r\n                              </span>\r\n                            </label>\r\n\r\n                            <input\r\n                              type=\"file\"\r\n                              multiple\r\n                              onChange={(e) => {\r\n                                handleInputChange(\r\n                                  \"subscriptiondocument\",\r\n                                  Array.from(e.target.files)\r\n                                );\r\n                                if (errors.subscriptiondocument) {\r\n                                  setErrors((prev) => ({\r\n                                    ...prev,\r\n                                    subscriptiondocument: \"\",\r\n                                  }));\r\n                                }\r\n                              }}\r\n                              className={`textarea_input ${\r\n                                errors.subscriptiondocument ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                            />\r\n\r\n                            {/* Show selected file names */}\r\n                            {formData.subscriptiondocument &&\r\n                              formData.subscriptiondocument.length > 0 && (\r\n                                <ul className=\"mt-2 small text-muted\">\r\n                                  {formData.subscriptiondocument.map(\r\n                                    (file, index) => (\r\n                                      <li key={index}>\r\n                                        <strong>{file.name}</strong>\r\n                                      </li>\r\n                                    )\r\n                                  )}\r\n                                </ul>\r\n                              )}\r\n\r\n                            {errors.subscriptiondocument && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.subscriptiondocument}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"termsheet\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                if (\r\n                                  !formData.subscriptiondocument ||\r\n                                  formData.subscriptiondocument.length === 0\r\n                                ) {\r\n                                  newErrors.subscriptiondocument =\r\n                                    \"Please upload your file\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"notes\"); // move ahead\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {activeSection === \"notes\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                              \"convertible\",\r\n                              \"voting\",\r\n                              \"termsheet\",\r\n                              \"subscription\",\r\n                            ]}\r\n                          />\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              General Notes About the Round\r\n                            </label>\r\n\r\n                            <textarea\r\n                              placeholder=\"Enter here...\"\r\n                              className=\"textarea_input\"\r\n                              rows=\"4\"\r\n                              value={formData.generalnotes}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  \"generalnotes\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"subscription\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              type=\"button\"\r\n                              onClick={handleReviewpage}\r\n                            >\r\n                              Save\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Add similar sections for the remaining form fields */}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </SectionWrapper>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n"],"names":["Recordround","_formData$liquidation3","apiUrlRound","countrySymbolList","setCountrysymbollist","useState","errorMsg","seterrorMsg","successMsg","setsuccessMsg","activeSection","setActiveSection","storedUsername","localStorage","getItem","messageAll","setmessageAll","errr","seterrr","userLogin","JSON","parse","id","useParams","ClientIP","setClientIP","records","setrecords","navigate","useNavigate","errors","setErrors","convertibleTrigger","liquidationOther","nameOfRound","shareClassType","shareclassother","instrumentType","customInstrument","issuedshares","dateroundclosed","liquidation","convertible","convertibleType","voting","termsheetFile","subscriptiondocument","common_stock_valuation","preferred_valuation","valuationCap","discountRate","safeType","interestRate","repaymentSchedule","hasWarrants_Bank","valuationCap_note","discountRate_note","maturityDate","interestRate_note","exercisedate_bank","formData","setFormData","liquidationpreferences","description","roundsize","currency","rights","generalnotes","hasWarrants","exercisePrice","expirationDate","warrantRatio","warrantType","hasWarrants_preferred","exercisePrice_preferred","expirationDate_preferred","warrantRatio_preferred","warrantType_preferred","exercisePrice_bank","warrantRatio_bank","warrantType_bank","roundStatus","useEffect","getAuthorizedSignature","async","company_id","companies","user_id","checkData","axios","post","apiURLSignature","headers","Accept","data","results","length","approve","err","getrecords","generateRes","apiURLInvestor","console","error","document","title","getEditrecordlist","Editrecords","setEditrecords","getData","instrumentData","instrument_type_data","rawData","startsWith","endsWith","slice","replace","updatedFormData","Array","isArray","map","file","name","parsed","split","v","trim","setSelected","log","handleInputChange","field","value","prev","selected","otherText","setOtherText","isReviewing","setIsReviewing","res","fetch","json","ip","getIP","firstStepCompleted","setFirstStepCompleted","handleOptionClick","opt","sections","totalSections","activeIndex","findIndex","section","progressWidth","Math","round","getallcountrySymbolList","respo","isCollapsed","setIsCollapsed","_jsx","Wrapper","children","className","_jsxs","ModuleSideNav","TopBar","SectionWrapper","Alertpopup","message","onClose","type","onClick","DangerAlertPopup","onConfirm","formDataToSend","FormData","append","role","forEach","stringify","setTimeout","handleSubmit","onCancel","class","style","width","method","action","dateStr","monthStr","dayStr","yearStr","month","parseInt","day","year","isNaN","Date","shouldShowAlert","placeholder","onChange","e","target","maxLength","disabled","checked","newErrors","Object","keys","firstErrorElement","querySelector","scrollIntoView","behavior","block","PreviousSection","visibleFields","tabIndex","height","src","alt","color","rows","label","htmlFor","_Fragment","Number","NumericFormat","thousandSeparator","decimalScale","fixedDecimalScale","allowNegative","onValueChange","values","item","currency_code","currency_symbol","dateRegex","inputValue","test","inputDate","today","setHours","_formData$liquidation","_formData$liquidation2","includes","updatedSelection","filter","push","multiple","from","files","index","handleReviewpage"],"sourceRoot":""}
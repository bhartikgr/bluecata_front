{"version":3,"file":"static/js/8186.d87ad914.chunk.js","mappings":"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","sources":["pages/User/Crm/InvestorReportViewRecordRound.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport TopBar from \"../../../components/Users/TopBar\";\r\nimport ModuleSideNav from \"../../../components/Users/ModuleSideNav.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../../components/Styles/MainHeadStyles.js\";\r\nimport {\r\n  ModalContainer1,\r\n  ModalTitle,\r\n  DropArea,\r\n  ModalBtn,\r\n  ButtonGroup,\r\n} from \"../../../components/Styles/DataRoomStyle.js\";\r\nimport { IoCloseCircleOutline } from \"react-icons/io5\";\r\nimport axios from \"axios\";\r\nimport { FaDownload, FaEye } from \"react-icons/fa\"; // FontAwesome icons\r\nimport ViewInvestorEndRecordRound from \"../../../components/Users/popup/ViewInvestorEndRecordRound\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nexport default function InvestorReportViewRecordRound() {\r\n  const navigate = useNavigate();\r\n\r\n  const storedUsername = localStorage.getItem(\"SignatoryLoginData\");\r\n  const [ViewRecordRounds, setViewRecordRounds] = useState(false);\r\n  const userLogin = JSON.parse(storedUsername);\r\n  const [records, setrecords] = useState([]);\r\n  const [errr, seterrr] = useState(false);\r\n  const [recordViewData, setrecordViewData] = useState(\"\");\r\n  const [InvestorInfo, setInvestorInfo] = useState(\"\");\r\n  const [messagesuccessError, setmessagesuccessError] = useState(\"\");\r\n  const [InvestorAllRoundRecordData, setInvestorAllRoundRecordData] =\r\n    useState(null);\r\n  var apiURLInvestor = \"https://blueprintcatalyst.com/api/user/investor/\";\r\n  document.title = \"Shared Investor Report\";\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    checkInvestor();\r\n    getInvestorReportCapitalRound();\r\n  }, []);\r\n\r\n  const checkInvestor = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      id: id,\r\n    };\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"checkInvestorRecordround\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (generateRes.data.results.length === 0) {\r\n        navigate(\"/crm/investorreport\");\r\n      } else {\r\n        setInvestorInfo(generateRes.data.results[0]);\r\n      }\r\n      // setrecords(generateRes.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n\r\n  const getInvestorReportCapitalRound = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      investor_id: id,\r\n    };\r\n    try {\r\n      const resp = await axios.post(\r\n        apiURLInvestor + \"getInvestorReportCapitalRound\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setrecords(resp.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Share Class (Name of Round)\",\r\n      selector: (row) => row.shareClassType + \" \" + row.nameOfRound,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Target Rasie Amount\",\r\n      selector: (row) => Number(row.roundsize).toLocaleString(\"en-US\"),\r\n      sortable: true,\r\n    },\r\n\r\n    {\r\n      name: \"Numbers Of Shares\",\r\n      selector: (row) => Number(row.issuedshares).toLocaleString(\"en-US\"),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date of Report\",\r\n      selector: (row) => formatCurrentDate(row.created_at),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date Viewed\",\r\n      selector: (row) =>\r\n        row.date_view ? formatCurrentDate(row.date_view) : \"N/A\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Status of Round\",\r\n      selector: (row) => row.dateroundclosed,\r\n      sortable: true,\r\n      cell: (row) => {\r\n        const isActive = row.roundStatus === \"ACTIVE\";\r\n        const displayText = isActive\r\n          ? \"ACTIVE\"\r\n          : `CLOSED: ${formatCurrentDate(row.dateroundclosed)}`;\r\n\r\n        return (\r\n          <span\r\n            style={{\r\n              padding: \"4px 12px\",\r\n              borderRadius: \"12px\",\r\n              fontWeight: \"600\",\r\n              color: isActive ? \"#065f46\" : \"#b91c1c\", // green or red text\r\n              backgroundColor: isActive ? \"#d1fae5\" : \"#fee2e2\", // green or red bg\r\n              fontSize: \"12px\",\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            {displayText}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex gap-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => handleviewData(row)}\r\n            rel=\"noopener noreferrer\"\r\n            className=\"btn btn-sm btn-outline-success fw-bold\"\r\n            title=\"View Detail\"\r\n          >\r\n            <FaEye /> view\r\n          </button>\r\n        </div>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n    },\r\n  ];\r\n  const handleviewData = (dataa) => {\r\n    setViewRecordRounds(true);\r\n    setrecordViewData(dataa);\r\n  };\r\n  const customStyles = {\r\n    table: {\r\n      style: {\r\n        border: \"1px solid #dee2e6\",\r\n        borderRadius: \"12px\",\r\n        overflow: \"auto\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        backgroundColor: \"#efefef\",\r\n        fontWeight: \"600\",\r\n        fontSize: \"0.8rem\",\r\n        color: \"#000\",\r\n        textTransform: \"uppercase\",\r\n        whiteSpace: \"nowrap\",\r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"auto\",\r\n        textOverflow: \"ellipsis\",\r\n      },\r\n    },\r\n    rows: {\r\n      style: {\r\n        fontSize: \"0.8rem\",\r\n        fontWeight: \"500\",\r\n      },\r\n      stripedStyle: {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n    },\r\n    pagination: {\r\n      style: {\r\n        marginTop: \"15px\",\r\n        backgroundColor: \"#fafafa\",\r\n        padding: \"12px 16px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const conditionalRowStyles = [\r\n    {\r\n      when: (row) => true, // apply to all rows\r\n      style: {\r\n        \"&:hover\": {\r\n          backgroundColor: \"var(--lightRed)\", // apna hover color\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  // Filter data by nameofreport (case insensitive)\r\n  const filteredData = records.filter((item) => {\r\n    const search = searchText.toLowerCase();\r\n\r\n    // Combine all searchable fields into one string\r\n    const combinedFields = `\r\n    ${item.nameOfRound || \"\"}\r\n    ${item.shareClassType || \"\"}\r\n     ${item.roundsize || \"\"}\r\n    ${item.issuedshares || \"\"}\r\n    ${item.description || \"\"}\r\n    ${item.instrumentType || \"\"}\r\n    ${item.customInstrument || \"\"}\r\n    ${item.roundsize || \"\"}\r\n    ${item.issuedshares || \"\"}\r\n    ${item.liquidationpreferences || \"\"}\r\n  `.toLowerCase();\r\n\r\n    return combinedFields.includes(search);\r\n  });\r\n\r\n  function formatCurrentDate(input) {\r\n    const date = new Date(input);\r\n\r\n    if (isNaN(date)) return \"\";\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n\r\n    const getOrdinal = (n) => {\r\n      if (n >= 11 && n <= 13) return \"th\";\r\n      switch (n % 10) {\r\n        case 1:\r\n          return \"st\";\r\n        case 2:\r\n          return \"nd\";\r\n        case 3:\r\n          return \"rd\";\r\n        default:\r\n          return \"th\";\r\n      }\r\n    };\r\n\r\n    return `${month} ${day}${getOrdinal(day)}, ${year}`;\r\n  }\r\n  const handleDownload = async (url) => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  //Share Report\r\n\r\n  //Due diligence Record\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleOpen = () => setIsOpen(true);\r\n  let files = [];\r\n\r\n  // Ensure we have an array\r\n  if (InvestorInfo.kyc_document) {\r\n    if (Array.isArray(InvestorInfo.kyc_document)) {\r\n      try {\r\n        // Try parsing first element if it looks like JSON\r\n        files = JSON.parse(InvestorInfo.kyc_document[0]);\r\n      } catch (e) {\r\n        // fallback: it's already an array of strings\r\n        files = InvestorInfo.kyc_document;\r\n      }\r\n    } else {\r\n      // single string case\r\n      try {\r\n        files = JSON.parse(InvestorInfo.kyc_document);\r\n      } catch (e) {\r\n        files = [InvestorInfo.kyc_document];\r\n      }\r\n    }\r\n  }\r\n\r\n  const isImage = (file) => {\r\n    return /\\.(jpg|jpeg|png|gif)$/i.test(file);\r\n  };\r\n  //Record get\r\n  useEffect(() => {\r\n    getInvestorAllRoundRecord();\r\n  }, []);\r\n\r\n  const getInvestorAllRoundRecord = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      investor_id: id,\r\n    };\r\n    try {\r\n      const generateRes = await axios.post(\r\n        apiURLInvestor + \"getInvestorAllRoundRecord\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      console.log(generateRes.data);\r\n      setInvestorAllRoundRecordData(generateRes.data);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  //Record get\r\n  const baseUrl =\r\n    \"https://blueprintcatalyst.com/api/upload/investor/inv_\" +\r\n    InvestorInfo.investor_id;\r\n  return (\r\n    <>\r\n      <>\r\n        <Wrapper>\r\n          <div className=\"fullpage d-block\">\r\n            <div className=\"d-flex align-items-start gap-0\">\r\n              <ModuleSideNav\r\n                isCollapsed={isCollapsed}\r\n                setIsCollapsed={setIsCollapsed}\r\n              />\r\n              <div\r\n                className={`global_view ${\r\n                  isCollapsed ? \"global_view_col\" : \"\"\r\n                }`}\r\n              >\r\n                <TopBar />\r\n                <SectionWrapper className=\"d-block p-md-4 p-3\">\r\n                  <div className=\"container-fluid\">\r\n                    {messagesuccessError && (\r\n                      <p\r\n                        className={errr ? \"mt-3 error_pop\" : \"success_pop mt-3\"}\r\n                      >\r\n                        {messagesuccessError}\r\n                      </p>\r\n                    )}\r\n\r\n                    {/* --- REPORT SUMMARY CARDS --- */}\r\n                    <div className=\"titleroom d-flex justify-content-between align-items-center border-bottom pb-3\">\r\n                      <h3 className=\"text-lg font-bold mb-2\">\r\n                        Investor Report (Capital Round Documents)\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"\">\r\n                      <div className=\"row g-3\">\r\n                        {/* Card 1 */}\r\n                        <div className=\"col-md-12 col-sm-12\">\r\n                          <div\r\n                            className=\"card shadow-sm border-0 py-4\"\r\n                            style={{ borderRadius: \"10px\" }}\r\n                          >\r\n                            <p className=\"mb-3\">\r\n                              <strong className=\"mainh2\">\r\n                                Investor Information :\r\n                              </strong>{\" \"}\r\n                              <span className=\"mainp\" style={{ color: \"red\" }}>\r\n                                {InvestorInfo.first_name}{\" \"}\r\n                                {InvestorInfo.last_name}\r\n                              </span>{\" \"}\r\n                            </p>\r\n\r\n                            <table className=\"global_table mb-0\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Register Company Name : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.company_name}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Type of Investor : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.type_of_investor}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Contact (EMAIL) : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.email}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Contact (MOBILE) : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.phone}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>City : </strong>\r\n                                    <span>{InvestorInfo.city}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Country : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.country}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Ip Address : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.ip_address}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      LinkedIn or Professional Profile:\r\n                                    </strong>{\" \"}\r\n                                    <span>{InvestorInfo.linkedIn_profile}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      Contact (Full Mailing Address) :{\" \"}\r\n                                    </strong>{\" \"}\r\n                                    <span>{InvestorInfo.full_address}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Country of Tax Residency : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.country_tax}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Tax ID or National ID : </strong>{\" \"}\r\n                                    <span>{InvestorInfo.tax_id}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td className=\"d-flex align-items-center gap-2 w-100\">\r\n                                    <strong>KYC/AML Documentation : </strong>{\" \"}\r\n                                    <span>\r\n                                      {InvestorInfo.kyc_document &&\r\n                                        InvestorInfo.kyc_document.length >\r\n                                          0 && (\r\n                                          <div className=\"\">\r\n                                            <button\r\n                                              type=\"button\"\r\n                                              className=\"btn btn-sm btn-outline-success fw-bold\"\r\n                                              onClick={handleOpen}\r\n                                            >\r\n                                              <FaEye></FaEye> View Document\r\n                                            </button>\r\n                                          </div>\r\n                                        )}\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Accredited Status : </strong>{\" \"}\r\n                                    <span>\r\n                                      {InvestorInfo.accredited_status}\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      LinkedIn or Professional Profile :{\" \"}\r\n                                    </strong>{\" \"}\r\n                                    <span>{InvestorInfo.linkedIn_profile}</span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Industry Expertise : </strong>{\" \"}\r\n                                    <span>\r\n                                      {InvestorInfo.industry_expertise}\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>Notes:</strong>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                            <hr />\r\n                            <table className=\"global_table mb-0\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      TOTAL capital invested in ALL rounds :{\" \"}\r\n                                    </strong>{\" \"}\r\n                                    <span>\r\n                                      {InvestorAllRoundRecordData?.currency ||\r\n                                        \"\"}\r\n                                      {InvestorAllRoundRecordData?.total_invested ||\r\n                                        0}\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      % Ownership of Company (fully diluted) :\r\n                                    </strong>{\" \"}\r\n                                    <span>\r\n                                      {\r\n                                        InvestorAllRoundRecordData?.ownership_percent\r\n                                      }\r\n                                      %\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      Rank in size of overall investment :{\" \"}\r\n                                    </strong>{\" \"}\r\n                                    <span>\r\n                                      {InvestorAllRoundRecordData?.rank}\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td>\r\n                                    <strong>\r\n                                      Min / Max investment amounts :{\" \"}\r\n                                    </strong>{\" \"}\r\n                                    <span>\r\n                                      {\" \"}\r\n                                      {\r\n                                        InvestorAllRoundRecordData?.min_investment\r\n                                      }\r\n                                      {\"/\"}{\" \"}\r\n                                      {\r\n                                        InvestorAllRoundRecordData?.max_investment\r\n                                      }\r\n                                    </span>\r\n                                  </td>\r\n                                  <td></td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* --- SEARCH & DATA TABLE --- */}\r\n                    <div className=\"d-flex justify-content-between my-2 py-3\">\r\n                      <h4>Participating Investment Rounds</h4>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-start tb-box\">\r\n                      <table className=\"innertable-design\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Share class (Name of Round)</th>\r\n                            <th>Target Raise Amount</th>\r\n                            <th>Numbers Of Shares</th>\r\n                            <th>Date of Report</th>\r\n                            <th>Date Viewed</th>\r\n                            <th>Status of Round</th>\r\n                            <th>Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {records.length > 0 ? (\r\n                            records.map((record, index) => (\r\n                              <React.Fragment key={index}>\r\n                                {/* Main round row */}\r\n                                <tr>\r\n                                  <td>\r\n                                    {record.shareClassType || \"Founder share\"}{\" \"}\r\n                                    {record.nameOfRound}\r\n                                  </td>\r\n                                  <td>\r\n                                    {record.currency}\r\n                                    {\"\"}\r\n                                    {Number(record.roundsize).toLocaleString(\r\n                                      \"en-US\"\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    {Number(record.issuedshares).toLocaleString(\r\n                                      \"en-US\"\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    {formatCurrentDate(record.created_at)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {record.date_view\r\n                                      ? formatCurrentDate(record.date_view)\r\n                                      : \"N/A\"}\r\n                                  </td>\r\n                                  <td>\r\n                                    {(() => {\r\n                                      const isActive =\r\n                                        record.roundStatus === \"ACTIVE\";\r\n                                      const displayText = isActive\r\n                                        ? \"ACTIVE\"\r\n                                        : `CLOSED: ${formatCurrentDate(\r\n                                            record.dateroundclosed\r\n                                          )}`;\r\n                                      return (\r\n                                        <span\r\n                                          style={{\r\n                                            padding: \"4px 12px\",\r\n                                            borderRadius: \"12px\",\r\n                                            fontWeight: 600,\r\n                                            color: isActive\r\n                                              ? \"#065f46\"\r\n                                              : \"#b91c1c\",\r\n                                            backgroundColor: isActive\r\n                                              ? \"#d1fae5\"\r\n                                              : \"#fee2e2\",\r\n                                            fontSize: \"12px\",\r\n                                            display: \"inline-block\",\r\n                                          }}\r\n                                        >\r\n                                          {displayText}\r\n                                        </span>\r\n                                      );\r\n                                    })()}\r\n                                  </td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      onClick={() => handleviewData(record)}\r\n                                      className=\"btn\"\r\n                                    >\r\n                                      👁 View\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n\r\n                                {/* Detail row */}\r\n                                <tr className=\"detail-row\">\r\n                                  <td colSpan=\"7\">\r\n                                    <div className=\"detail-content\">\r\n                                      <div className=\"detail-item\">\r\n                                        <strong>\r\n                                          Amount invested in this round:\r\n                                        </strong>{\" \"}\r\n                                        {record.currency}\r\n                                        {\"\"}\r\n                                        {record.investor_investment\r\n                                          ? Number(\r\n                                              record.investor_investment\r\n                                            ).toLocaleString(\"en-US\")\r\n                                          : \"0\"}\r\n                                      </div>\r\n                                      <div className=\"detail-item\">\r\n                                        <strong>Date Invested:</strong>{\" \"}\r\n                                        {record.invested_date\r\n                                          ? formatCurrentDate(\r\n                                              record.invested_date\r\n                                            )\r\n                                          : \"N/A\"}\r\n                                      </div>\r\n                                      <div className=\"detail-item\">\r\n                                        <strong>\r\n                                          Fully Diluted Shares at the time of\r\n                                          investment:\r\n                                        </strong>{\" \"}\r\n                                        {record.issuedshares\r\n                                          ? Number(\r\n                                              record.issuedshares\r\n                                            ).toLocaleString(\"en-US\")\r\n                                          : \"0\"}\r\n                                      </div>\r\n                                    </div>\r\n                                  </td>\r\n                                </tr>\r\n                              </React.Fragment>\r\n                            ))\r\n                          ) : (\r\n                            <tr>\r\n                              <td colSpan=\"7\" className=\"text-center\">\r\n                                No records found\r\n                              </td>\r\n                            </tr>\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </SectionWrapper>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Wrapper>\r\n        {ViewRecordRounds && (\r\n          <ViewInvestorEndRecordRound\r\n            onClose={() => setViewRecordRounds(false)}\r\n            recordViewData={recordViewData}\r\n          />\r\n        )}\r\n        {isOpen && (\r\n          <div className=\"main_popup-overlay\">\r\n            <ModalContainer1>\r\n              <div className=\"d-flex align-items-center gap-3 mb-4 justify-content-between\">\r\n                <ModalTitle>View KYC/AML Documentation</ModalTitle>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close_btn_global\"\r\n                  aria-label=\"Close\"\r\n                  onClick={() => setIsOpen(false)}\r\n                >\r\n                  <IoCloseCircleOutline size={24} />\r\n                </button>\r\n              </div>\r\n\r\n              {/* Images container */}\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  gap: \"10px\",\r\n                  maxHeight: \"60vh\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                {files.map((file, index) => {\r\n                  const fileUrl = `${baseUrl}/${file}`;\r\n                  return isImage(file) ? (\r\n                    <img\r\n                      key={index}\r\n                      src={fileUrl}\r\n                      alt={`Document ${index + 1}`}\r\n                      style={{\r\n                        maxWidth: \"200px\",\r\n                        maxHeight: \"200px\",\r\n                        objectFit: \"contain\",\r\n                        border: \"1px solid #ddd\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"4px\",\r\n                        background: \"#f9f9f9\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <a\r\n                      key={index}\r\n                      href={fileUrl}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"btn btn-primary\"\r\n                      style={{ margin: \"5px\" }}\r\n                    >\r\n                      Open Document {index + 1}\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              <ButtonGroup>\r\n                <ModalBtn\r\n                  onClick={() => setIsOpen(false)}\r\n                  className=\"close_btn w-fit\"\r\n                >\r\n                  Close\r\n                </ModalBtn>\r\n              </ButtonGroup>\r\n            </ModalContainer1>\r\n          </div>\r\n        )}\r\n      </>\r\n    </>\r\n  );\r\n}\r\n"],"names":["InvestorReportViewRecordRound","navigate","useNavigate","storedUsername","localStorage","getItem","ViewRecordRounds","setViewRecordRounds","useState","userLogin","JSON","parse","records","setrecords","errr","seterrr","recordViewData","setrecordViewData","InvestorInfo","setInvestorInfo","messagesuccessError","setmessagesuccessError","InvestorAllRoundRecordData","setInvestorAllRoundRecordData","apiURLInvestor","document","title","id","useParams","useEffect","checkInvestor","getInvestorReportCapitalRound","async","formData","company_id","companies","generateRes","axios","post","headers","Accept","data","results","length","err","console","error","investor_id","resp","handleviewData","dataa","searchText","setSearchText","filter","item","search","toLowerCase","nameOfRound","shareClassType","roundsize","issuedshares","description","instrumentType","customInstrument","liquidationpreferences","includes","formatCurrentDate","input","date","Date","isNaN","day","getDate","month","getMonth","year","getFullYear","n","getOrdinal","isCollapsed","setIsCollapsed","isOpen","setIsOpen","files","kyc_document","Array","isArray","e","getInvestorAllRoundRecord","log","baseUrl","_jsx","_Fragment","children","_jsxs","Wrapper","className","ModuleSideNav","TopBar","SectionWrapper","style","borderRadius","color","first_name","last_name","company_name","type_of_investor","email","phone","city","country","ip_address","linkedIn_profile","full_address","country_tax","tax_id","type","onClick","handleOpen","FaEye","accredited_status","industry_expertise","currency","total_invested","ownership_percent","rank","min_investment","max_investment","map","record","index","React","Number","toLocaleString","created_at","date_view","isActive","roundStatus","displayText","dateroundclosed","padding","fontWeight","backgroundColor","fontSize","display","colSpan","investor_investment","invested_date","ViewInvestorEndRecordRound","onClose","ModalContainer1","ModalTitle","IoCloseCircleOutline","size","flexWrap","gap","maxHeight","overflowY","file","fileUrl","test","isImage","src","alt","maxWidth","objectFit","border","background","href","target","rel","margin","ButtonGroup","ModalBtn"],"sourceRoot":""}
{"version":3,"file":"static/js/7939.05d5ef6c.chunk.js","mappings":"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","sources":["pages/SendMessages.jsx","../node_modules/@tabler/icons-react/src/defaultAttributes.ts","../node_modules/@tabler/icons-react/src/createReactComponent.ts","../node_modules/@tabler/icons-react/src/icons/IconHome.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ev1 from \"../assets/images/in1.png\";\nimport ev2 from \"../assets/images/in2.png\";\nimport { Link } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\n\nimport { IconHome } from \"@tabler/icons-react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nfunction SendMessages() {\n  var apiUrl = \"https://backend.amourette.no/api/profile/\";\n  // State to track the active button\n  const [activeIndex, setActiveIndex] = useState(0); // Default to the first button\n  const [LoginData, setLoginData] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isSendMessage, setSendMessage] = useState([]);\n  const [checkboxunread, setcheckboxunread] = useState(false);\n  const handleButtonClick = (index) => {\n    setActiveIndex(index); // Set the clicked button as active\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    console.log(userLogin);\n    setLoginData(userLogin);\n  }, []);\n  useEffect(() => {\n    getSendMessage();\n  }, [LoginData]);\n\n  const getSendMessage = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getSendMessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      setSendMessage(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const handleChange = async (event) => {\n    setSearchTerm(event.target.value);\n    if (checkboxunread === true) {\n      let formData = {\n        search: event.target.value,\n        user_id: LoginData.id,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"getSendMessageSearchunread\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        var respo = res.data.results;\n        setSendMessage(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    } else {\n      let formData = {\n        search: event.target.value,\n        user_id: LoginData.id,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"getSendMessageSearch\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        var respo = res.data.results;\n        setSendMessage(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const handleclickunread = async (e) => {\n    setcheckboxunread(e.target.checked);\n    if (e.target.checked === true) {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"getSendMessageunread\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        var respo = res.data.results;\n        setSendMessage(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    } else {\n      getSendMessage();\n    }\n  };\n  return (\n    <>\n      <Headertwo />\n      <section className=\"inboxblock d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-3 sticky-md-top h-100  evleft\">\n              <div className=\"d-flex flex-column gap-3 searchleftfilter scroll_bar pe-2 \">\n                <h1>{t(\"Inbox\")}</h1>\n                <div className=\"filtersearch\">\n                  <form action=\"\">\n                    <input\n                      type=\"text\"\n                      value={searchTerm}\n                      onChange={handleChange}\n                      placeholder={t(\"Search\")}\n                    />\n                  </form>\n                </div>\n                <div className=\"d-flex flex-column gap-2\">\n                  <Link\n                    to=\"/dashboard\"\n                    className=\"d-flex gap-3 align-items-center listoficons\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"userpic userpic_main ofit rounded-circle overflow-hidden ratio-unset\">\n                        <IconHome\n                          stroke={1}\n                          className=\"w-100 h-100 main_homei\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h4>{t(\"Home\")}</h4>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/receivedmessages\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 1 ? \"active\" : \"\"\n                    }`}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev1} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Received_Message\")}</h3>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/sendmessages\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 1 ? \"active\" : \"active\"\n                    }`}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev2} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Sent_Message\")}</h3>\n                    </div>\n                  </Link>\n\n                  <hr className=\"linehr\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-9 position-relative pt-2\">\n              <div className=\"row gy-4\">\n                {/* <div className=\"col-12\">\n                  <div className=\"d-flex justify-content-end\">\n                    <div className=\"listbox showonly\">\n                      <label className=\"cbox\">\n                        Show unread only\n                        <input type=\"checkbox\" name=\"makeImagePrivate\" />\n                        <span className=\"checkmark\"></span>\n                      </label>\n                    </div>\n                  </div>\n                </div> */}\n\n                {isSendMessage.length > 0 ? (\n                  isSendMessage.map((message) => (\n                    <div key={message.id} className=\"col-12\">\n                      <Link\n                        to={`/receivedchatmessage/${message.recipient_slug}`}\n                        className=\"formen recchat_main d-flex flex-row gap-2 ps-md-0\"\n                      >\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"fromimg recChat ofit rounded-2 overflow-hidden\">\n                            {message.recipient_profile ? (\n                              <img\n                                src={message.recipient_profile}\n                                alt=\"userpic\"\n                              />\n                            ) : (\n                              <img\n                                src={require(\"../assets/images/thumb.jpg\")}\n                                alt=\"userpic\"\n                              />\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                          <div className=\"d-flex flex-column gap-2 py-2  px-3\">\n                            <div className=\"d-flex flex-column gap-1\">\n                              <div className=\"d-flex gap-3 align-items-center\">\n                                <h3>{message.recipient_username},</h3>\n                                <h3>\n                                  {calculateAge(message.recipient_birthday)}\n                                </h3>\n                              </div>\n                              <h4>{message.recipient_location}</h4>\n                            </div>\n                            <p>{message.message}</p>\n                          </div>\n                        </div>\n                      </Link>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"col-12 text-center\">\n                    <p>{t(\"Nomessagesfound\")}</p>\n                  </div>\n                )}\n              </div>\n              <div className=\"readall_check d-flex align-items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  onChange={handleclickunread}\n                  id=\"read_check\"\n                />\n                <label htmlFor=\"read_check\">{t(\"show_unread_only\")}</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default SendMessages;\n","export default {\n  outline: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'none',\n    stroke: 'currentColor',\n    strokeWidth: 2,\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n  },\n  filled: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'currentColor',\n    stroke: 'none',\n  },\n};\n","import { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport type { IconNode, IconProps, Icon } from './types';\n\nconst createReactComponent = (\n  type: 'outline' | 'filled',\n  iconName: string,\n  iconNamePascal: string,\n  iconNode: IconNode,\n) => {\n  const Component = forwardRef<Icon, IconProps>(\n    (\n      { color = 'currentColor', size = 24, stroke = 2, title, className, children, ...rest }: IconProps,\n      ref,\n    ) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes[type],\n          width: size,\n          height: size,\n          className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(' '),\n          ...(type === 'filled'\n            ? {\n                fill: color,\n              }\n            : {\n                strokeWidth: stroke,\n                stroke: color,\n              }),\n          ...rest,\n        },\n        [\n          title && createElement('title', { key: 'svg-title' }, title),\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(Array.isArray(children) ? children : [children]),\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n\nexport default createReactComponent;\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'home', 'IconHome', [[\"path\",{\"d\":\"M5 12l-2 0l9 -9l9 9l-2 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6\",\"key\":\"svg-2\"}]]);"],"names":["apiUrl","activeIndex","setActiveIndex","useState","LoginData","setLoginData","searchTerm","setSearchTerm","isSendMessage","setSendMessage","checkboxunread","setcheckboxunread","useEffect","storedUsername","localStorage","getItem","userLogin","JSON","parse","console","log","getSendMessage","async","formData","user_id","id","respo","axios","post","headers","Accept","data","results","err","response","request","calculateAge","birthday","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","t","useTranslation","savedLanguage","i18n","language","changeLanguage","_jsxs","_Fragment","children","_jsx","Headertwo","className","action","type","value","onChange","event","target","search","placeholder","Link","to","IconHome","stroke","src","ev1","alt","ev2","length","map","message","recipient_slug","recipient_profile","require","recipient_username","recipient_birthday","recipient_location","e","checked","htmlFor","defaultAttributes","outline","xmlns","width","height","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","filled","createReactComponent","iconName","iconNamePascal","iconNode","Component","forwardRef","_ref","ref","color","size","title","rest","createElement","join","key","_ref2","tag","attrs","Array","isArray","displayName"],"sourceRoot":""}
{"version":3,"file":"static/js/6028.99e90edd.chunk.js","mappings":"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","sources":["components/Uploadprivatealbum.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const Uploadprivatealbum = ({\n  isOpen,\n  onClose,\n  children,\n  closepopup11,\n}) => {\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose();\n      resetForm(); // Close the popup if the overlay is clicked\n    }\n  };\n  const [spinner, setspinner] = useState(false);\n  const [images, setImages] = useState(null);\n  const [visibility, setVisibility] = useState(\"\");\n  const [addToAlbum, setAddToAlbum] = useState(\"No\");\n  const [addToAlbumPass, setAddToAlbumpass] = useState(\"No\");\n  const [Password, setPassword] = useState(\"\");\n  const [albumName, setAlbumName] = useState(\"\");\n  const [rightsConfirmed, setRightsConfirmed] = useState(\"Yes\");\n  const [error, setError] = useState(\"\");\n  const [successmsg, setsuccessmsg] = useState(\"\");\n  const [preebtn, setpreebtn] = useState(false);\n  const { t } = useTranslation();\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    if (visibility === \"Private_visible\") {\n      setAddToAlbumpass(\"Yes\");\n      setAddToAlbum(\"Yes\");\n    } else {\n      setAddToAlbumpass(\"No\");\n    }\n  }, [visibility]);\n  useEffect(() => {\n    if (!isOpen) {\n      // Reset all form states here\n      setImages(null);\n      setVisibility(\"\");\n      setAlbumName(\"\");\n      setPassword(\"\");\n      setAddToAlbum(\"No\");\n      setRightsConfirmed(\"Yes\");\n      setError(\"\");\n      setsuccessmsg(\"\");\n      setspinner(false);\n      setpreebtn(false);\n\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\"; // Reset file input UI\n      }\n    }\n  }, [isOpen]);\n  const resetForm = () => {\n    setImages(null);\n    setVisibility(\"\");\n    setAlbumName(\"\");\n    setPassword(\"\");\n    setAddToAlbum(\"No\");\n    setRightsConfirmed(\"Yes\");\n    setError(\"\");\n    setsuccessmsg(\"\");\n    setspinner(false);\n    setpreebtn(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  };\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const handleFileChange = async (e) => {\n    const selectedFiles = e.target.files;\n    const maxFileSize = 10 * 1024 * 1024; // 10 MB\n    const maxFileCount = 10;\n    let validFiles = [];\n    let fileError = \"\";\n\n    if (selectedFiles.length > maxFileCount) {\n      fileError = `You can only upload a maximum of ${maxFileCount} files.`;\n    } else {\n      for (const file of selectedFiles) {\n        const fileType = file.type;\n\n        if (!fileType.startsWith(\"image/\") && !fileType.startsWith(\"video/\")) {\n          fileError = `File \"${file.name}\" is not an image or video.`;\n          break;\n        } else if (file.size > maxFileSize) {\n          fileError = `File \"${file.name}\" exceeds the 10 MB limit.`;\n          break;\n        } else if (\n          fileType.startsWith(\"image/\") &&\n          ![\"image/jpeg\", \"image/png\", \"image/gif\"].includes(fileType)\n        ) {\n          try {\n            const converted = await convertToPng(file);\n            validFiles.push(converted);\n          } catch (err) {\n            console.error(`Error converting ${file.name}:`, err);\n            fileError = `Failed to convert image \"${file.name}\".`;\n            break;\n          }\n        } else {\n          validFiles.push(file);\n        }\n      }\n    }\n\n    if (fileError) {\n      setError(fileError);\n    } else {\n      setError(\"\");\n      setImages(validFiles);\n    }\n  };\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = (event) => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  {\n                    type: \"image/png\",\n                    lastModified: Date.now(),\n                  }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Conversion failed.\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = event.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const [yesNoerror, setYesNoError] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!images) {\n      alert(\"Please select images to upload.\");\n      return;\n    }\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const formData = new FormData();\n\n    images.forEach((file) => {\n      formData.append(\"images\", file); // Use the key 'files' for your backend to handle multiple files\n    });\n    formData.append(\"visibility\", visibility);\n    formData.append(\"addToAlbum\", addToAlbum);\n    formData.append(\"albumName\", albumName);\n    formData.append(\"password\", Password);\n    formData.append(\"rightsConfirmed\", rightsConfirmed);\n    formData.append(\"user_id\", userLogin.id);\n    formData.append(\"fileType\", \"\");\n    if (rightsConfirmed === \"No\") {\n      setYesNoError(true);\n      return;\n    } else {\n      setYesNoError(false);\n    }\n    setspinner(true);\n    setpreebtn(true);\n    try {\n      const res = await axios.post(apiUrl + \"saveprivateAlbum\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      var respo = res.data;\n      setpreebtn(false);\n      setsuccessmsg(respo.message);\n      setTimeout(() => {\n        window.location.reload();\n        setspinner(false);\n        setsuccessmsg(\"\");\n        closepopup11();\n        setVisibility(\"\");\n        setAlbumName(\"\");\n        setPassword(\"\");\n        setAddToAlbum(\"No\");\n        setRightsConfirmed(\"Yes\");\n        setImages(null);\n      }, 3500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const removeFile = (index) => {\n    setImages((prev) => {\n      const updatedImages = prev.filter((_, i) => i !== index);\n      // If no files left, reset the input value\n      if (updatedImages.length === 0 && fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n      return updatedImages;\n    });\n  };\n\n  const handlecheck = () => {};\n  if (!isOpen) return null;\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop  d-flex flex-column gap-4\">\n            <h3>{t(\"upload_album\")}</h3>\n            <form\n              action=\"javascript:void(0)\"\n              method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-md-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <p className=\"pb-2\">{t(\"select_one_more\")}</p>\n                    <input\n                      type=\"file\"\n                      name=\"file\"\n                      required\n                      multiple\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                      accept=\"image/*,video/mp4,video/webm,video/ogg\"\n                      ref={fileInputRef}\n                    />\n                    {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    <div\n                      className=\"inload\"\n                      style={{ height: \"auto\", minheight: \"50px\" }}\n                    >\n                      <div className=\"d-flex gap-3 align-items-center flex-wrap p-2\">\n                        {images !== null && (\n                          <>\n                            {images.map((file, index) => (\n                              <div className=\"upimage rel\" key={index}>\n                                <button\n                                  type=\"button\"\n                                  onClick={() => removeFile(index)}\n                                >\n                                  X\n                                </button>\n                                <div className=\"inimag ofit\">\n                                  {file.type.startsWith(\"image/\") ? (\n                                    <img\n                                      src={URL.createObjectURL(file)}\n                                      alt={file.name}\n                                    />\n                                  ) : (\n                                    <video width=\"160\" height=\"120\" controls>\n                                      <source\n                                        src={URL.createObjectURL(file)}\n                                        type={file.type}\n                                      />\n                                    </video>\n                                  )}\n                                </div>\n                              </div>\n                            ))}\n                          </>\n                        )}\n\n                        <div className=\"d-flex align-items-center gap-2\">\n                          <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                          <h3 className=\"m-0\" style={{ fontSize: \"14px\" }}>\n                            {t(\"upload_image\")}/{t(\"Videos\")}\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"how_private\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-lock\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\" />\n                          <path d=\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\" />\n                          <path d=\"M8 11v-4a4 4 0 1 1 8 0v4\" />\n                        </svg>\n                      </div>\n                      <select\n                        value={visibility}\n                        onChange={(e) => setVisibility(e.target.value)}\n                        className=\"\"\n                        required\n                        name=\"visibility\"\n                      >\n                        <option value=\"\">--{t(\"Select\")}--</option>\n                        <option value=\"Public_visible\">{t(\"All\")}</option>\n                        <option value=\"Friends_visible\">\n                          {t(\"Friends_visible\")}\n                        </option>\n                        <option value=\"Private_visible\">\n                          {t(\"Private_visible\")}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                {addToAlbumPass === \"Yes\" && (\n                  <div className=\"col-12\">\n                    <div className=\"d-flex flex-column gap-2\">\n                      <p>Password</p>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <div className=\"icon\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            stroke-width=\"2\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            class=\"icon icon-tabler icons-tabler-outline icon-tabler-lock\"\n                          >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\" />\n                            <path d=\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\" />\n                            <path d=\"M8 11v-4a4 4 0 1 1 8 0v4\" />\n                          </svg>\n                        </div>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Enter protected password here...\"\n                          value={Password}\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p> {t(\"Add_the\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-library-photo\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M7 3m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\" />\n                          <path d=\"M4.012 7.26a2.005 2.005 0 0 0 -1.012 1.737v10c0 1.1 .9 2 2 2h10c.75 0 1.158 -.385 1.5 -1\" />\n                          <path d=\"M17 7h.01\" />\n                          <path d=\"M7 13l3.644 -3.644a1.21 1.21 0 0 1 1.712 0l3.644 3.644\" />\n                          <path d=\"M15 12l1.644 -1.644a1.21 1.21 0 0 1 1.712 0l2.644 2.644\" />\n                        </svg>\n                      </div>\n                      <select\n                        name=\"addToAlbum\"\n                        value={addToAlbum}\n                        onChange={(e) => setAddToAlbum(e.target.value)}\n                        required\n                        style={{\n                          pointerEvents:\n                            visibility === \"Private_visible\" ? \"none\" : \"auto\",\n                          opacity: visibility === \"Private_visible\" ? 0.1 : 1,\n                        }}\n                      >\n                        <option value=\"No\">No</option>\n                        <option value=\"Yes\">Yes</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {addToAlbum === \"Yes\" && (\n                  <div className=\"col-12\">\n                    <div className=\"d-flex flex-column gap-2\">\n                      <p>{t(\"Add_the_album\")}</p>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <div className=\"icon\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"icon icon-tabler icons-tabler-outline icon-tabler-library-photo\"\n                          >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M7 3m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\" />\n                            <path d=\"M4.012 7.26a2.005 2.005 0 0 0 -1.012 1.737v10c0 1.1 .9 2 2 2h10c.75 0 1.158 -.385 1.5 -1\" />\n                            <path d=\"M17 7h.01\" />\n                            <path d=\"M7 13l3.644 -3.644a1.21 1.21 0 0 1 1.712 0l3.644 3.644\" />\n                            <path d=\"M15 12l1.644 -1.644a1.21 1.21 0 0 1 1.712 0l2.644 2.644\" />\n                          </svg>\n                        </div>\n                        <input\n                          type=\"text\"\n                          name=\"album_name\"\n                          placeholder=\"Enter album name...\"\n                          value={albumName}\n                          onChange={(e) => setAlbumName(e.target.value)}\n                          required={addToAlbum === \"Yes\"} // Required only if \"Yes\" is selected\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2 warning_text\">\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-alert-triangle\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M12 9v4\" />\n                          <path d=\"M10.363 3.591l-8.106 13.534a1.914 1.914 0 0 0 1.636 2.871h16.214a1.914 1.914 0 0 0 1.636 -2.87l-8.106 -13.536a1.914 1.914 0 0 0 -3.274 0z\" />\n                          <path d=\"M12 16h.01\" />\n                        </svg>\n                      </div>\n                      <p>{t(\"Responsibility_for\")}</p>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <p>\n                        {\" \"}\n                        <span>{t(\"This_forum_ONLY\")}</span>\n                        <br />\n                        <span>{t(\"By_uploading_images\")}</span>\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {yesNoerror && (\n                    <span style={{ color: \"red\", fontSize: \"12px\" }}>\n                      Please confirm that you have the rights to upload these\n                      images.\n                    </span>\n                  )}\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"Do_you_have_the\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-copyright\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n                          <path d=\"M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173\" />\n                        </svg>\n                      </div>\n\n                      <select\n                        value={rightsConfirmed}\n                        onChange={(e) => setRightsConfirmed(e.target.value)}\n                        name=\"rightsConfirmed\"\n                      >\n                        <option value=\"Yes\">Yes</option>\n                        <option value=\"No\">No</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <span className=\"text-success\">{successmsg}</span>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success send_load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"loading\")}...</span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    style={{\n                      pointerEvents: preebtn ? \"none\" : \"auto\", // Disable button when preebtn is true\n                      opacity: preebtn ? 0.1 : 1, // Reduce opacity when disabled\n                    }}\n                  >\n                    {t(\"upload\")}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["Uploadprivatealbum","_ref","isOpen","onClose","children","closepopup11","spinner","setspinner","useState","images","setImages","visibility","setVisibility","addToAlbum","setAddToAlbum","addToAlbumPass","setAddToAlbumpass","Password","setPassword","albumName","setAlbumName","rightsConfirmed","setRightsConfirmed","error","setError","successmsg","setsuccessmsg","preebtn","setpreebtn","t","useTranslation","fileInputRef","useRef","useEffect","current","value","resetForm","savedLanguage","localStorage","getItem","i18n","language","changeLanguage","convertToPng","file","Promise","resolve","reject","reader","FileReader","onload","event","img","Image","canvas","document","createElement","width","height","getContext","drawImage","toBlob","blob","pngFile","File","name","replace","type","lastModified","Date","now","Error","onerror","src","target","result","readAsDataURL","yesNoerror","setYesNoError","_jsx","_Fragment","className","onClick","e","classList","contains","_jsxs","action","method","onSubmit","async","preventDefault","alert","storedUsername","userLogin","JSON","parse","formData","FormData","forEach","append","id","respo","axios","post","apiUrl","headers","Accept","data","message","setTimeout","window","location","reload","err","response","request","console","required","multiple","onChange","selectedFiles","files","validFiles","fileError","length","fileType","startsWith","size","includes","converted","push","accept","ref","style","color","minheight","map","index","prev","updatedImages","filter","_","i","removeFile","URL","createObjectURL","alt","controls","BsCloudUpload","fontSize","xmlns","viewBox","fill","stroke","class","d","placeholder","pointerEvents","opacity","strokeWidth","strokeLinecap","strokeLinejoin","role"],"sourceRoot":""}
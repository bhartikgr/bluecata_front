{"version":3,"file":"static/js/8119.3fffa201.chunk.js","mappings":"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","sources":["pages/search/Searchpeople.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Headertwo from \"../../components/Headertwo\";\nimport { LeftsidebarSearch } from \"../../components/LeftsidebarSearch\";\nimport SuccessPop from \"../../components/SuccessPop\";\nimport { SlOptions } from \"react-icons/sl\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../../i18n\";\nimport chat from \"../../assets/images/chatpost.png\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport ChatBox from \"../../components/ChatBox\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nfunction Searchpeople() {\n  const navigate = useNavigate();\n  var apiUrlGroup = \"https://backend.amourette.no/api/groups/\";\n  var apiUrlp = \"https://backend.amourette.no/api/profile/\";\n  var apiUrlMembers = \"https://backend.amourette.no/api/members/\";\n  const commentRefs = useRef([]); // Ref to manage scroll to the last comment\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [AllFriendRequest, setAllFriendRequest] = useState([]);\n  const [refreshNotifications, setRefreshNotifications] = useState(false);\n  const [isGroup, setGroup] = useState([]);\n  // const [commentInputs, setCommentInputs] = useState(\n  //   Array(isGroup.length).fill(\"\")\n  // );\n  const [restrictedStates, setRestrictedStates] = useState([]);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [postId, setpostId] = useState(\"\");\n  const [LoginData, setLoginData] = useState(\"\");\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const searchQuery = queryParams.get(\"q\");\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const { t, i18n } = useTranslation();\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = JSON.parse(storedUsername);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const openModal = () => setModalOpen(true);\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    console.log(userLogin);\n    console.log(\"test\");\n    if (userLogin === null) {\n      navigate(\"/login\");\n    }\n  }, []);\n  useEffect(() => {\n    getAllfriends();\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrlMembers + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n      console.log(friendUserIds, \"dd\");\n      setAllfriendId(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    const postDate = new Date(dateString);\n    const now = new Date();\n\n    // Calculate the difference in seconds\n    const secondsDiff = Math.floor((now - postDate) / 1000);\n\n    // Define time intervals\n    const intervals = [\n      { label: \"year\", seconds: 31536000 }, // 365 days\n      { label: \"month\", seconds: 2592000 }, // 30 days\n      { label: \"day\", seconds: 86400 }, // 1 day\n      { label: \"hour\", seconds: 3600 }, // 1 hour\n      { label: \"minute\", seconds: 60 }, // 1 minute\n      { label: \"second\", seconds: 1 }, // 1 second\n    ];\n\n    for (const interval of intervals) {\n      const count = Math.floor(secondsDiff / interval.seconds);\n      if (count >= 1) {\n        return `${count} ${interval.label}${count > 1 ? \"s\" : \"\"} ago`;\n      }\n    }\n\n    return \"Just now\";\n  };\n  const handlegroupPostDeleteconfirm = async (id) => {\n    setpostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this post\");\n  };\n\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  useEffect(() => {\n    if (searchQuery === null) {\n      var search = \"\";\n    } else {\n      var search = searchQuery;\n    }\n    getfriendsearch(search);\n  }, [AllfriendId]);\n  const getfriendsearch = async (search) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const userIdsWithSelf = [...AllfriendId, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      search: search,\n      user_id: userLogin.id,\n    };\n\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrlMembers + \"get_friendsearch\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      console.log(res.data.results, \"kkk\");\n      setAllFriendRequest(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const handlecnacelrequest = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      id: id,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrlMembers + \"handlerequestcancel\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      const storedUserSearch = localStorage.getItem(\"userSearch\");\n      const userSearch = JSON.parse(storedUserSearch);\n      if (searchQuery === null) {\n        var search = \"\";\n      } else {\n        var search = searchQuery;\n      }\n      getfriendsearch(search);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleAddrequest = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      sent_id: id,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrlMembers + \"sendFriendRequest\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      const storedUserSearch = localStorage.getItem(\"userSearch\");\n      const userSearch = JSON.parse(storedUserSearch);\n      if (searchQuery === null) {\n        var search = \"\";\n      } else {\n        var search = searchQuery;\n      }\n      getfriendsearch(search);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [to_id, setto_id] = useState(\"\");\n  const [userblock, setuserblock] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [IsuserDetailForChat, setuserDetailForChat] = useState(\"\");\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [IsuserChatDetail, setuserChatDetail] = useState([]);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [toid, settoid] = useState(\"\");\n  const getUserDetailForChat = async (id) => {\n    let formData = {\n      id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getUserDetailMember\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        setuserDetailForChat(respo);\n        //console.log(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n    setIsPopupOpen(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const chatsectionUser = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: id,\n    };\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    } else {\n      settoid(id);\n      getUserDetailForChat(id);\n      try {\n        const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.results;\n        //console.log(\"getchat\");\n        setuserChatDetail(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n      setIsPopupOpen(true);\n      document.body.style.overflowY = \"hidden\";\n    }\n  };\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const getChatAfterSave = async () => {\n    chatsectionUser(to_id);\n  };\n  const refreshchat = () => {\n    chatsectionUser(to_id);\n  };\n\n  const handleConfirm = async (id, sentto) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      id: id,\n      user_id: userLogin.id,\n      sentto: sentto,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrlp + \"AcceptRequest\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Friend request accepted\");\n      setTimeout(() => {\n        setShowPopSuccess(false);\n\n        window.location.reload();\n      }, 1500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1500);\n  };\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"dashbox d-block\">\n        <div className=\"container-lg\">\n          <div className=\"row justify-content-between\">\n            <LeftsidebarSearch />\n\n            <div className=\"col-lg-8 col-xl-8\">\n              <div className=\"row\">\n                {AllFriendRequest.length === 0 ? (\n                  <div className=\"col-12\">\n                    <p className=\"text-center\">\n                      {t(\"No_friend_requests_found\")}\n                    </p>\n                  </div>\n                ) : (\n                  AllFriendRequest.map((request) => (\n                    <div className=\"col-12 p-2\" key={request.id}>\n                      <div className=\"friend_formen w-100 p-3\">\n                        <div className=\"d-flex w-100 flex-column align-items-start justify-content-between gap-3\">\n                          <div className=\"d-flex align-items-end w-100 justify-content-end flex-column gap-2\">\n                            <div className=\"d-flex align-items-center gap-1 justify-content-between w-100\">\n                              <Link\n                                className=\"flex-shrink-0\"\n                                target=\"_blank\"\n                                to={`/friend/${request.id}`}\n                              >\n                                <div className=\"fromimg ofit overflow-hidden\">\n                                  {request.profile_image ? (\n                                    <img\n                                      src={request.profile_image}\n                                      alt=\"Selected\"\n                                    />\n                                  ) : (\n                                    <img\n                                      src={require(\"../../assets/images/thumb.jpg\")}\n                                      alt=\"Profile\"\n                                    />\n                                  )}\n                                </div>\n                              </Link>\n                              <Link\n                                className=\"flex-grow-1\"\n                                target=\"_blank\"\n                                to={`/friend/${request.id}`}\n                              >\n                                <div className=\"d-flex justify-content-between gap-2 p-3\">\n                                  <div className=\"d-flex flex-column gap-0 align-items-start\">\n                                    <h2>{request.username}</h2>\n                                    <h3>\n                                      {calculateAge(request.birthday_date)}{\" \"}\n                                      {t(\"Years\")}\n                                    </h3>\n                                  </div>\n                                  {/* <div className=\"d-block human_icon flex-shrink-0\">\n                                    <img\n                                      className=\"w-100 h-100 object-fit-contain\"\n                                      src={require(\"../../assets/images/woman.png\")}\n                                      alt=\"Profile\"\n                                    />\n                                  </div> */}\n                                  <div className=\"flex-grow-1 d-flex justify-content-end align-items-end gap-2\">\n                                    {request.fr_status === \"No\" ? (\n                                      <>\n                                        {Number(userLogin.id) ===\n                                        Number(request.sent_to) ? (\n                                          <>\n                                            <button\n                                              className=\"accept_btn allfrd\"\n                                              onClick={() =>\n                                                handleConfirm(\n                                                  request.fr_id,\n                                                  request.sent_to\n                                                )\n                                              }\n                                            >\n                                              {t(\"Accept\")}\n                                            </button>{\" \"}\n                                            <button\n                                              onClick={() =>\n                                                handlecnacelrequest(\n                                                  request.fr_id\n                                                )\n                                              }\n                                              className=\"cancel_request_btn btn btn-danger\"\n                                              type=\"button\"\n                                            >\n                                              {t(\"DECLINE_REQUEST\")}\n                                            </button>\n                                          </>\n                                        ) : (\n                                          <>\n                                            <button\n                                              onClick={() =>\n                                                handlecnacelrequest(\n                                                  request.fr_id\n                                                )\n                                              }\n                                              className=\"cancel_request_btn btn btn-danger\"\n                                              type=\"button\"\n                                            >\n                                              {t(\"CANCEL_REQUEST\")}\n                                            </button>\n                                          </>\n                                        )}\n                                      </>\n                                    ) : (\n                                      <button\n                                        onClick={() =>\n                                          handleAddrequest(request.id)\n                                        }\n                                        className=\"add_confirm_btn \"\n                                        type=\"button\"\n                                      >\n                                        {t(\"ADD_FRIEND\")}\n                                      </button>\n                                    )}\n                                    {/* <button\n                                className=\"send_message\"\n                                onClick={() => chatsectionUser(request.id)}\n                                type=\"button\"\n                              >\n                                {t(\"SEND_MESSAGE\")}\n                              </button> */}\n                                  </div>\n                                </div>\n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n            <div className=\"col-lg-3 col-xl-3 sidefixedbox sticky-top h-100 d-none d-lg-block\"></div>\n          </div>\n        </div>\n      </section>\n\n      <ChatBox\n        isOpen={isPopupOpen}\n        onClose={closePopup}\n        userdetail={IsuserDetailForChat}\n        userChatDetail={IsuserChatDetail}\n        LoginData={LoginData}\n        to_id={toid}\n        getChatAfterSave={getChatAfterSave}\n        refreshchat={refreshchat}\n      ></ChatBox>\n    </>\n  );\n}\n\nexport default Searchpeople;\n"],"names":["navigate","useNavigate","apiUrlMembers","useRef","deleteMessage","setdeleteMessage","useState","AllfriendId","setAllfriendId","modalOpen","setModalOpen","AllFriendRequest","setAllFriendRequest","refreshNotifications","setRefreshNotifications","isGroup","setGroup","restrictedStates","setRestrictedStates","isPopupOpen_delete","setisPopupOpen_delete","postId","setpostId","LoginData","setLoginData","location","useLocation","searchQuery","URLSearchParams","search","get","apiUrl","t","i18n","useTranslation","storedUsername","localStorage","getItem","userLogin","JSON","parse","useEffect","savedLanguage","language","changeLanguage","console","log","getAllfriends","async","formData","user_id","id","friendUserIds","axios","post","headers","Accept","data","results","map","friend","err","response","request","error","message","getfriendsearch","join","res","calculateAge","birthday","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","handlecnacelrequest","storedUserSearch","to_id","setto_id","userblock","setuserblock","showPopError","setShowPopError","errorPopMessage","setPoperrorMessage","IsuserDetailForChat","setuserDetailForChat","isPopupOpen","setIsPopupOpen","IsuserChatDetail","setuserChatDetail","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","toid","settoid","chatsectionUser","setTimeout","row","length","respo","document","body","style","overflowY","getUserDetailForChat","_jsxs","_Fragment","children","_jsx","Headertwo","SuccessPop","className","LeftsidebarSearch","Link","target","to","profile_image","src","alt","require","username","birthday_date","fr_status","Number","sent_to","onClick","sentto","apiUrlp","window","reload","handleConfirm","fr_id","type","sent_id","handleAddrequest","ChatBox","isOpen","onClose","closePopup","userdetail","userChatDetail","getChatAfterSave","refreshchat"],"sourceRoot":""}
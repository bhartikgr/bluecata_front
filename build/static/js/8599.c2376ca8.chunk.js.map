{"version":3,"file":"static/js/8599.c2376ca8.chunk.js","mappings":"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","sources":["components/InviteEventsFriend.jsx","components/AlertSucess.jsx","components/AlertError.jsx","components/Createneweventpost.jsx","components/EventPostComment.jsx","components/Editevent.jsx","components/EventMediaLikeComment.jsx","pages/Singleevent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const InviteEventsFriend = ({\n  isOpen1,\n  onClose1,\n  children,\n  friends,\n  LoginData,\n  eventId,\n  onInvitesSent,\n}) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n  const handleInviterequest = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Create a FormData object to hold the selected friend IDs\n    let formData = {\n      friendIds: selectedFriends,\n      user_id: LoginData.id,\n      eventId: eventId,\n    };\n    console.log(formData);\n    // Append selected friend IDs to formData\n\n    try {\n      const response = await axios.post(\n        apiUrl + \"api/sendEventinvite\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      setinvMessage(\"Invites sent successfully\");\n      setSelectedFriends([]);\n      onInvitesSent();\n      setTimeout(() => {\n        setinvMessage(\"\");\n      }, 1500);\n      console.log(\"Invites sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending invites:\", error);\n      // Optionally handle error (e.g., show an error message)\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"invite_pop gallery_pop d-flex flex-column gap-4\">\n            <div className=\"d-flex flex-column gap-2\">\n              <h3>{`${t(\"invite_a_friend\")}`}</h3>\n              <p className=\"invite_text\"></p>\n            </div>\n            <form\n              action=\"javascript:void(0)\"\n              onSubmit={handleInviterequest}\n              method=\"post\"\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <ul className=\"invite_list scroll_bar p-0\">\n                    {friends.length > 0 ? (\n                      friends.map((friend, index) => (\n                        <li key={index}>\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <div className=\"invite_profile\">\n                              {friend.profile_image ? ( // Display the image URL if available\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={friend.profile_image} // Use the URL created from the file\n                                  alt=\"Selected\"\n                                />\n                              ) : (\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )}\n                            </div>\n                            <h4>{friend.username}</h4>{\" \"}\n                            {/* Display the friend's username */}\n                          </div>\n                          <div className=\"listbox d-flex justify-content-center\">\n                            <label className=\"cbox\">\n                              <input\n                                type=\"checkbox\"\n                                onChange={() => handleCheckboxChange(friend.id)} // Handle checkbox change\n                                checked={selectedFriends.includes(friend.id)} // Check if this friend is selected\n                                name=\"makeImagePrivate\"\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          </div>\n                        </li>\n                      ))\n                    ) : (\n                      <li className=\"invite_text\">\n                        <p>{`${t(\"No_friend_ab\")}`}.</p>{\" \"}\n                        {/* Message when there are no friends */}\n                      </li>\n                    )}\n                  </ul>\n                </div>\n                {invMessage !== \"\" && (\n                  <p className=\"invite_text text-success\">{invMessage}</p>\n                )}\n\n                <div className=\"col-12\">\n                  {friends.length > 0 ? (\n                    <button\n                      type=\"submit\"\n                      className={selectedFriends.length === 0 ? \"opa\" : \"\"}\n                      disabled={selectedFriends.length === 0}\n                    >\n                      {`${t(\"SEND_INVITE\")}`}\n                    </button>\n                  ) : (\n                    <p>{`${t(\"No_friend_ab\")}`}</p> // Optional message when there are no friends\n                  )}\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nexport const AlertSucess = ({ isOpen1, onClose1 }) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay sucess_alert\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"sucess_meess d-flex flex-column gap-4\">\n            <div className=\"d-block sucess_notification\">\n              <p>Sucesses Sucesses Sucesses Sucesses Sucesses</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nexport const AlertError = ({ isOpen1, onClose1 }) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay error_alert\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"error_meess d-flex flex-column gap-4\">\n            <div className=\"d-block error_notification\">\n              <p>Error</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const Createneweventpost = ({\n  isOpen,\n  onClose,\n  eventId,\n  LoginData,\n  reSetPost,\n}) => {\n  // Move the hook calls outside the conditional return\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [restr_message, setrestr_message] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [fileType, setFileType] = useState(\"\");\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/api/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  // If not open, return null\n  if (!isOpen) return null;\n\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const MAX_FILE_SIZE = 25 * 1024 * 1024; // 2 MB\n  const handleImageChange = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      if (!isImage && !isVideo) {\n        setError(\"Please upload a valid image or video file.\");\n        setImage(null);\n        return;\n      }\n\n      if (file.size > MAX_FILE_SIZE) {\n        setError(\"File size must be less than 5 MB.\");\n        setImage(null);\n        return;\n      }\n\n      setError(\"\");\n\n      if (isImage) {\n        const supportedImageTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!supportedImageTypes.includes(file.type)) {\n          try {\n            const convertedFile = await convertToPng(file);\n            setImage(convertedFile);\n            setFileType(\"image\");\n            return;\n          } catch (err) {\n            console.error(\"Image conversion error:\", err);\n            setError(\"Failed to convert image.\");\n            setImage(null);\n            return;\n          }\n        }\n\n        setImage(file);\n        setFileType(\"image\");\n      }\n\n      if (isVideo) {\n        const supportedVideoTypes = [\"video/mp4\", \"video/webm\", \"video/ogg\"];\n        if (!supportedVideoTypes.includes(file.type)) {\n          setError(\n            \"Unsupported video format. Only MP4, WebM, and OGG are allowed.\"\n          );\n          setImage(null);\n          return;\n        }\n\n        setImage(file);\n        setFileType(\"video\");\n      }\n    }\n  };\n\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  {\n                    type: \"image/png\",\n                    lastModified: new Date().getTime(),\n                  }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Failed to convert image.\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = event.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!image) {\n      //setError(\"Please upload an image\");\n      //return;\n    }\n    setspinner(true);\n    // Form data can be submitted here\n    const formData = new FormData();\n    formData.append(\"description\", description);\n    formData.append(\"image\", image);\n    formData.append(\"event_id\", eventId);\n    formData.append(\"user_id\", LoginData.id);\n    formData.append(\"fileType\", \"eventpost\");\n    // You can use fetch or axios to send the form data to your server\n    console.log(\"Submitting form:\", { description, image });\n    try {\n      const res = await axios.post(apiUrl + \"createEventPost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form\", // Ensure the content type is JSON\n        },\n      });\n      setspinner(false);\n      if (res.status === 200) {\n        console.log(\"Submission successful:\", res.data);\n        // Reset the form fields\n        setDescription(\"\");\n        setImage(null);\n        setError(\"\");\n        reSetPost();\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        // console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const isButtonDisabled = (!description.trim() && !image) || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n    setDescription(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop d-flex flex-column gap-4\">\n            <h3>{`${t(\"create_post\")}`}</h3>\n            {restr_message && (\n              <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                {`${t(\"Your_message_contain\")}`}\n              </span>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <textarea\n                    rows=\"8\"\n                    placeholder=\"What do you think?\"\n                    value={description}\n                    onChange={handleCommentChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      required\n                      type=\"file\"\n                      accept=\"image/*,video/mp4,video/webm,video/ogg\"\n                      className=\"fileload\"\n                      name=\"image\"\n                      onChange={handleImageChange}\n                    />\n                    <div className=\"upload_image\">\n                      {/* Show image preview */}\n                      {fileType === \"image\" && image && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(image)}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show video preview */}\n                      {fileType === \"video\" && image && (\n                        <video className=\"w-100 h-100\" controls>\n                          <source\n                            src={videoUrl || URL.createObjectURL(image)}\n                            type=\"video/mp4\"\n                          />\n                          {t(\"Your_browser_does\")}\n                        </video>\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>{`${t(\n                          \"upload_image\"\n                        )}`}</h3>\n                      </div>\n                      {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={isButtonDisabled} // Disable button if comment is empty\n                    style={{ opacity: isButtonDisabled ? 0.8 : 1 }}\n                  >\n                    {`${t(\"post\")}`}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport chat from \"../assets/images/chatpost.png\";\nimport axios from \"axios\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { DateTime } from \"luxon\";\nexport const EventPostComment = ({\n  isEventpost,\n  LoginData,\n  Iseventfav,\n  commentSectionRefresh,\n  getpostCommentrefresh,\n}) => {\n  const [postId, setpostId] = useState(\"\");\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [comments, setComments] = useState(Array(isEventpost.length).fill(\"\"));\n  const [webSocket, setWebSocket] = useState(null);\n  const apiUrl = \"https://backend.amourette.no/api/\";\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [restrictedStates, setRestrictedStates] = useState([]); // To track restricted word status for each input\n  const MAX_WORDS = 2000;\n  const inputRef = useRef({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [imagess, setimage] = useState(null);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => {\n    setimage(null); // Close the modal by setting imagess to null\n  };\n  const [showPopError, setShowPopError] = useState(false);\n  // Create WebSocket connection when component mounts\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        console.log(\"New WebSocket message:\", receivedMessage);\n\n        if (receivedMessage.event === \"eventComments\") {\n          commentSectionRefresh();\n        }\n        if (receivedMessage.event === \"eventfav\") {\n          console.log(\"aaaaaa\");\n\n          commentSectionRefresh();\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [isEventpost, LoginData]);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const handleCommentChange = (e, index) => {\n    const inputValue = e.target.value;\n\n    setComments((prev) => ({\n      ...prev,\n      [index]: inputValue, // Ensure updating only specific input\n    }));\n\n    // Check for restricted words for the specific input\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    // Update the restriction state for this input\n    setRestrictedStates((prev) => ({\n      ...prev,\n      [index]: hasRestrictedWord,\n    }));\n  };\n\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const fetchComments = async (event_id) => {\n    let formData = {\n      event_id: event_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"GetEventPostComments\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(res.data);\n      // Ensure commentsData is an array of strings\n      const commentsData = res.data.results;\n      //setComments(commentsData);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handlePostComment = async (index, postId, event_id) => {\n    // Ensure the input is trimmed and not empty\n    const commentText = comments[index]?.trim();\n    const currentWordCount = countWords(commentText); // Assuming a single comment input for simplicity\n\n    if (currentWordCount < 2000) {\n      if (commentText) {\n        const formData = {\n          post_id: postId,\n          user_id: LoginData.id,\n          event_id: event_id,\n          comment: commentText, // Use trimmed comment\n        };\n\n        try {\n          const res = await axios.post(\n            apiUrl + \"CreateEventPostComment\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n\n          console.log(index);\n          // Clear the comment input after posting\n          setComments((prev) => ({\n            ...prev,\n            [index]: \"\", // Reset only this comment field\n          }));\n\n          Iseventfav();\n          // Refresh the comment section\n          await fetchComments(event_id);\n        } catch (err) {\n          console.error(\"Error posting comment:\", err);\n        }\n      }\n    } else {\n      setShowPopError(true);\n      setPoperrorMessage(\n        `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n      );\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    }\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Treat input as a Europe/Oslo time (even though it has 'Z')\n    // Remove the 'Z' if it exists\n    const cleanDateString = dateString.replace(/Z$/, \"\");\n\n    // Parse it as if it's Oslo local time (not UTC)\n    const osloTime = DateTime.fromISO(cleanDateString, { zone: \"Europe/Oslo\" });\n\n    if (!osloTime.isValid) {\n      console.error(\"Invalid Oslo Time:\", osloTime.invalidExplanation);\n      return \"Invalid Date\";\n    }\n\n    // Convert to current system's local timezone\n    const localTime = osloTime.setZone(\n      Intl.DateTimeFormat().resolvedOptions().timeZone\n    );\n\n    const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    console.log(osloTime);\n    const now = DateTime.now().setZone(userTimeZone);\n    const localPostTime = localTime.toFormat(\"HH:mm\");\n\n    const diffInMinutes = now.diff(localTime, \"minutes\").minutes;\n    const diffInHours = now.diff(localTime, \"hours\").hours;\n    const diffInDays = now.diff(localTime, \"days\").days;\n    const diffInWeeks = Math.floor(diffInDays / 7);\n    const diffInMonths = Math.floor(diffInDays / 30);\n    const diffInYears = Math.floor(diffInDays / 365);\n\n    if (diffInMinutes < 60) return `${localPostTime}`;\n    if (diffInHours < 24) return `${localPostTime}`;\n    if (Math.floor(diffInDays) === 1) return `Yesterday at ${localPostTime}`;\n    if (diffInDays < 7) return `${Math.floor(diffInDays)}d ${localPostTime}`;\n    if (diffInWeeks < 4) return `${diffInWeeks}w ${localPostTime}`;\n    if (diffInMonths < 12) return `${diffInMonths}m ${localPostTime}`;\n    return `${diffInYears}y ${localPostTime}`;\n  };\n\n  const [showPicker, setShowPicker] = useState({}); // Ensure it's an object\n\n  const handleEmojiClick = (emojiObject, index) => {\n    const inputEl = inputRef.current[index];\n    if (!inputEl) return;\n\n    // Get current value, ensuring it's a string\n    const currentValue = comments[index] || \"\";\n\n    // Insert emoji at the current cursor position\n    const startPos = inputEl.selectionStart || currentValue.length;\n    const endPos = inputEl.selectionEnd || currentValue.length;\n    const newValue =\n      currentValue.substring(0, startPos) +\n      emojiObject.emoji +\n      currentValue.substring(endPos);\n\n    setComments((prev) => ({\n      ...prev,\n      [index]: newValue, // Ensure the index key is properly set\n    }));\n\n    // Move cursor after the inserted emoji\n    setTimeout(() => {\n      inputEl.selectionStart = inputEl.selectionEnd =\n        startPos + emojiObject.emoji.length;\n      inputEl.focus();\n    }, 0);\n\n    // Close emoji picker\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: false,\n    }));\n  };\n  const pickerRefs = useRef({}); // hold refs for each index\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      Object.keys(pickerRefs.current).forEach((key) => {\n        const ref = pickerRefs.current[key];\n        if (ref && !ref.contains(event.target)) {\n          setShowPicker((prev) => ({\n            ...prev,\n            [key]: false,\n          }));\n        }\n      });\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n  const toggleEmojiPicker = (index) => {\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: !prev[index], // Toggle the specific index\n    }));\n  };\n  const handleChangeHeart = async (postid, event_id) => {\n    let formData = {\n      user_id: LoginData.id,\n      post_id: postid,\n      event_id: event_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"EventpostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      Iseventfav();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleeventPostDeleteconfirm = async (id) => {\n    setpostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const handleeventPostDelete = async () => {\n    let formData = {\n      id: postId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"eventpostDelete\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setisPopupOpen_delete(false);\n      getpostCommentrefresh();\n    } catch (err) {\n      console.error(\"Error posting comment:\", err);\n    }\n  };\n  const refreshpopup = async () => {\n    handleeventPostDelete();\n  };\n  const handleKeyDown = (e, index, postId, event_id) => {\n    if (e.key === \"Enter\" && comments[index]?.trim() !== \"\") {\n      e.preventDefault();\n      handlePostComment(index, postId, event_id);\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    // Attach event listener\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  return (\n    <>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {isEventpost.length > 0 ? (\n        isEventpost.map((post, index) => (\n          <div className=\"evname d-block\" key={index}>\n            <div className=\"d-flex flex-column gap-2\">\n              <div className=\"d-flex gap-2 align-items-center\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                    <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                      {post.profile_image && post.makeImagePrivate === 0 ? (\n                        <img src={post.profile_image} alt=\"Selected\" />\n                      ) : (\n                        <img\n                          src={require(\"../assets/images/thumb.jpg\")}\n                          alt=\"Profile\"\n                        />\n                      )}\n                    </Link>\n                  </div>\n                </div>\n                <div className=\"flex-grow-1\">\n                  <div className=\"d-flex flex-column gap-1 evettimeheaing\">\n                    <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                      {post.username} {t(\"createdaevent\")}\n                    </Link>\n                    <h5>{formateTime(post.date)}</h5>\n                  </div>\n                </div>\n                {LoginData.id === post.user_id && (\n                  <div className=\"flex-shrink-0 posttopbtns\">\n                    <button\n                      title=\"Delete\"\n                      type=\"button\"\n                      onClick={() => handleeventPostDeleteconfirm(post.id)}\n                      className=\"btn redbtn\"\n                      style={{\n                        padding: \"0px 0px\",\n                        textAlign: \"center\",\n                        minWidth: \"0px\",\n                        background: \"red\",\n                      }}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"icon icon-tabler icons-tabler-outline icon-tabler-trash\"\n                      >\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                        <path d=\"M4 7l16 0\" />\n                        <path d=\"M10 11l0 6\" />\n                        <path d=\"M14 11l0 6\" />\n                        <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                        <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                      </svg>\n                    </button>\n                  </div>\n                )}\n              </div>\n              <div className=\"d-block contpost\">\n                <p>{post.description}</p>\n              </div>\n              {post.file && (\n                <div className=\"postimgfull ofit rounded-2 overflow-hidden\">\n                  <MediaRenderer\n                    url={post.file}\n                    onClick={() => {\n                      setimage(post.file);\n                    }}\n                  />\n                </div>\n              )}\n              <div className=\"d-flex justify-content-end\">\n                <div className=\"d-flex gap-3 postchatheart\">\n                  <div className=\"d-flex align-items-center gap-3\">\n                    <button type=\"button\" className=\"btn fulw\">\n                      <img src={chat} alt=\"chatpic\" />\n                    </button>\n                    <p>{post.post.length}</p>\n                  </div>\n                  <div className=\"d-flex align-items-center gap-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => handleChangeHeart(post.id, post.event_id)}\n                      className=\"liked btn fulw\"\n                    >\n                      {post.fav ? <FaHeart /> : <FaRegHeart />}\n                    </button>\n\n                    <p>{post.fav_count}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"comment_input d-flex flex-column gap-3 rel\">\n                <ul className=\"p-0 comment_section scroll_bar d-flex flex-column gap-2\">\n                  {post.post.length > 0 ? (\n                    post.post.map((comm, index) => (\n                      <li\n                        className=\"d-flex align-items-start gap-2\"\n                        key={index}\n                      >\n                        <Link\n                          to={`/friend/${comm.comt_uid}`}\n                          target=\"_blank\"\n                          className=\"d-block user_profile\"\n                        >\n                          {comm.comment_user_profile_image &&\n                          comm.comment_makeImagePrivate === 0 ? (\n                            <img\n                              className=\"w-100 h-100\"\n                              src={comm.comment_user_profile_image}\n                              alt=\"eventspic\"\n                            />\n                          ) : (\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/thumb.jpg\")}\n                              alt=\"eventspic\"\n                            />\n                          )}\n                        </Link>\n                        <div className=\"d-flex flex-column gap-1\">\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <Link\n                              to={`/friend/${comm.comt_uid}`}\n                              target=\"_blank\"\n                              className=\"textcolor\"\n                            >\n                              {comm.comment_user_username}{\" \"}\n                            </Link>\n                            <span className=\"comment_time\">\n                              {formateTime(comm.comment_date)}\n                            </span>\n                          </div>\n                          <p className=\"comment_user scroll_bar\">\n                            {comm.description}\n                          </p>\n                        </div>\n                      </li>\n                    ))\n                  ) : (\n                    <p>{t(\"Nocommentsavailable\")}</p>\n                  )}\n                </ul>\n                {restrictedStates[index] && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"d-flex align-items-center gap-2\">\n                  <div className=\"emoji-container position-absolute bottom-0\">\n                    <button\n                      type=\"button\"\n                      className=\"emoji-button\"\n                      onClick={() => toggleEmojiPicker(index)}\n                    >\n                      😀\n                    </button>\n\n                    {showPicker[index] && (\n                      <div\n                        className=\"emoji-picker\"\n                        ref={(el) => (pickerRefs.current[index] = el)}\n                      >\n                        <EmojiPicker\n                          onEmojiClick={(emojiObject) =>\n                            handleEmojiClick(emojiObject, index)\n                          }\n                        />\n                      </div>\n                    )}\n                  </div>\n                  <input\n                    type=\"text\"\n                    name=\"comment\"\n                    className=\"ps-5\"\n                    placeholder={t(\"EnterYourComment\")}\n                    onKeyDown={(e) =>\n                      handleKeyDown(e, index, post.id, post.event_id)\n                    }\n                    ref={(el) => (inputRef.current[index] = el)}\n                    value={comments[index]} // Controlled input\n                    onChange={(e) => handleCommentChange(e, index)} // Handle input changes\n                  />\n\n                  <button\n                    type=\"submit\"\n                    onClick={() =>\n                      handlePostComment(index, post.id, post.event_id)\n                    }\n                    disabled={\n                      !comments[index]?.trim() || restrictedStates[index]\n                    } // Disable button if input is empty or has restricted words\n                    style={{\n                      opacity:\n                        !comments[index]?.trim() || restrictedStates[index]\n                          ? 1\n                          : 1,\n                      transition: \"opacity 0.3s\",\n                    }}\n                    className=\"comment_postbtn\"\n                  >\n                    {t(\"Post\")}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>{t(\"Nopostsavailable\")}</p>\n      )}\n      {imagess && (\n        <div\n          className=\"p-5\"\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            zIndex: 989898,\n          }}\n          onClick={closeModal} // Close when clicked outside\n        >\n          <div className=\"rel d-block h-100\">\n            <button type=\"button\" className=\"closebtnpic\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M18 6l-12 12\" />\n                <path d=\"M6 6l12 12\" />\n              </svg>\n            </button>\n            <MediaRenderer\n              className=\"w-100 h-100 object-fit-cover\"\n              url={imagess}\n              style={{\n                maxWidth: \"100%\",\n                maxHeight: \"100%\",\n                borderRadius: \"10px\",\n                height: \"85vh\",\n                objectFit: \"contain\",\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\n\nexport const Editevent = ({\n  isOpen,\n  onClose,\n  onEventCreated,\n  eventId,\n  EventDetail,\n}) => {\n  console.log(EventDetail);\n  // Initialize state for the checkbox only\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [makeImagePrivate, setMakeImagePrivate] = useState(false);\n  const [spinner, setspinner] = useState(false);\n  const [eventData, setEventData] = useState({\n    name: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    time: \"\",\n    location: \"\",\n    description: \"\",\n    image: null,\n  });\n  var apiUrl = \"https://backend.amourette.no/\";\n  const [restr_message, setrestr_message] = useState(false);\n  const today = new Date(); // Get today's date\n  const day = String(today.getDate()).padStart(2, \"0\"); // Get day and ensure 2 digits\n  const month = String(today.getMonth() + 1).padStart(2, \"0\"); // Get month and ensure 2 digits (months are zero-indexed)\n  const year = today.getFullYear(); // Get the full year\n  const { t } = useTranslation();\n  const [previewImage, setPreviewImage] = useState(\"\");\n\n  useEffect(() => {\n    if (EventDetail) {\n      setEventData({\n        name: EventDetail.name,\n        description: EventDetail.description,\n        start_date: EventDetail.start_date\n          ? EventDetail.start_date.split(\"T\")[0]\n          : \"\",\n        end_date: EventDetail.end_date\n          ? EventDetail.end_date.split(\"T\")[0]\n          : \"\",\n        time: EventDetail.time,\n        location: EventDetail.location,\n      });\n      if (EventDetail.image) {\n        setSelectedFile(null); // Reset selectedFile if editing\n        setPreviewImage(EventDetail.image);\n      }\n      setMakeImagePrivate(EventDetail.makeImageUse || false);\n\n      if (EventDetail.image) {\n        setSelectedFile(null); // Reset selectedFile if editing\n        setPreviewImage(EventDetail.image);\n      }\n    }\n  }, [EventDetail]);\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const today_enddate = `${day}-${month}-${year}`;\n  if (!isOpen) return null;\n\n  const handleOverlayClick = (e) => {\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, files } = e.target;\n\n    // Check for restricted words only for text inputs\n    if (type === \"text\" || type === \"textarea\") {\n      const hasRestrictedWord = restrictedWords.some((word) =>\n        value.toLowerCase().includes(word.toLowerCase())\n      );\n\n      if (hasRestrictedWord) {\n        // Display a message or set an error state\n        setrestr_message(true);\n      } else {\n        setrestr_message(false);\n      }\n    }\n\n    // Update event data\n    setEventData((prevData) => ({\n      ...prevData,\n      [name]: type === \"file\" ? files[0] : value,\n    }));\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handleCheckboxChange = (e) => {\n    const { checked } = e.target;\n    setMakeImagePrivate(checked);\n  };\n  const MAX_FILE_SIZE = 2 * 1024 * 1024; // 2 MB\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage(\"Please upload a valid image file.\");\n        setSelectedFile(null);\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage(\"File size must be less than 2 MB.\");\n        setSelectedFile(null);\n        return;\n      }\n      setPreviewImage(\"\");\n      // Clear any previous error messages and set the selected file\n      setErrorMessage(\"\");\n      setSelectedFile(file);\n    }\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    setspinner(true);\n    try {\n      if (selectedFile !== null) {\n        const formData = new FormData();\n        // Append checkbox value to formData\n        formData.append(\"makeImagePrivate\", makeImagePrivate);\n        formData.append(\"user_id\", userLogin.id);\n        formData.append(\"fileType\", \"events\");\n        formData.append(\"eventId\", eventId);\n        formData.append(\"image\", selectedFile);\n        for (const key in eventData) {\n          formData.append(key, eventData[key]);\n        }\n\n        const response = await axios.post(\n          apiUrl + \"api/eventseditfile\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n        setspinner(false);\n        //console.log(response.data);\n        if (response.data.status === \"2\") {\n          setShowPopError(true);\n          setPoperrorMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n            //onClose();\n          }, 1000);\n        } else {\n          window.location.replace(`/singleevent/${response.data.slug}`);\n          setShowPopSuccess(true);\n          setPopsuccessMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setShowPopSuccess(false);\n            window.location.reload();\n          }, 900);\n          console.log(\"Event created:\", response.data);\n          setEventData({\n            name: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            time: \"\",\n            location: \"\",\n            description: \"\",\n            image: null,\n          });\n          setSelectedFile(null);\n        }\n      } else {\n        const formData = new FormData();\n        // Append checkbox value to formData\n        formData.append(\"makeImagePrivate\", makeImagePrivate);\n        formData.append(\"user_id\", userLogin.id);\n        formData.append(\"fileType\", \"events\");\n        formData.append(\"eventId\", eventId);\n        formData.append(\"image\", selectedFile);\n\n        formData.append(\"previewImage\", previewImage);\n        for (const key in eventData) {\n          formData.append(key, eventData[key]);\n        }\n\n        const response = await axios.post(apiUrl + \"api/eventsedit\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setspinner(false);\n\n        if (response.data.status === \"2\") {\n          setShowPopError(true);\n          setPoperrorMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n            //onClose();\n          }, 1000);\n        } else {\n          window.location.replace(`/singleevent/${response.data.slug}`);\n          setShowPopSuccess(true);\n          setPopsuccessMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setShowPopSuccess(false);\n            window.location.reload();\n          }, 900);\n\n          setEventData({\n            name: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            time: \"\",\n            location: \"\",\n            description: \"\",\n            image: null,\n          });\n          setSelectedFile(null);\n        }\n      }\n\n      // Close the popup after submission\n    } catch (error) {\n      setspinner(false);\n      setShowPopError(true);\n      setPoperrorMessage(\"Some thing went wrong,Please try again:\", error);\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopError(\"\");\n        onClose();\n      }, 1000);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          {showPopSuccess && <SuccessPop message={successPopMessage} />}\n          {showPopError && <ErrorPop message={errorPopMessage} />}\n          <div className=\"cneventup d-flex flex-column gap-4\">\n            <h3> {t(\"edit_event\")}</h3>\n\n            <form onSubmit={handleSubmit}>\n              <div className=\"row gy-4\">\n                <div className=\"col-md-4\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      required={!previewImage}\n                      name=\"image\"\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                    />\n                    <div className=\"upload_image\">\n                      {previewImage && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={previewImage} // Create a URL for the selected image\n                          alt=\"Selected\"\n                        />\n                      )}\n                      {selectedFile && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(selectedFile)} // Create a URL for the selected image\n                          alt=\"Selected\"\n                        />\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>\n                          {t(\"upload_image\")} *\n                        </h3>\n                      </div>\n                    </div>\n                    {errorMessage && (\n                      <p className=\"text-danger\">{errorMessage}</p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"event_name\")}\n                    name=\"name\"\n                    defaultValue={eventData.name}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"start_date\")} *</label>\n                    <input\n                      type=\"date\"\n                      name=\"start_date\"\n                      defaultValue={eventData.start_date}\n                      onChange={(e) => {\n                        const selectedDate = new Date(e.target.value);\n                        const today = new Date();\n                        today.setHours(0, 0, 0, 0); // Normalize today's date\n\n                        if (selectedDate < today) {\n                          alert(\"Please select a future date.\");\n                        } else {\n                          handleInputChange(e);\n                        }\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"end_date\")} *</label>\n                    <input\n                      type=\"date\"\n                      name=\"end_date\"\n                      value={eventData.end_date}\n                      minLength={today_enddate}\n                      onChange={handleInputChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"time\")} *</label>\n                    <input\n                      type=\"time\"\n                      name=\"time\"\n                      value={eventData.time}\n                      onChange={handleInputChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"Location\")}\n                    name=\"location\"\n                    value={eventData.location}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <textarea\n                    name=\"description\"\n                    rows=\"5\"\n                    placeholder={t(\"event_description\")}\n                    value={eventData.description}\n                    onChange={handleInputChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"listbox\">\n                    <label className=\"cbox\">\n                      {t(\"Make_private\")}\n                      <input\n                        type=\"checkbox\"\n                        name=\"makeImagePrivate\"\n                        checked={makeImagePrivate} // Use the state directly\n                        onChange={handleCheckboxChange} // Use dedicated handler\n                      />\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </div>\n                </div>\n                {restr_message && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"loading\")}...</span>\n                    </div>\n                  )}\n                  <button type=\"submit\">{t(\"edit_event\")}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { DateTime } from \"luxon\";\nexport const EventMediaLikeComment = ({\n  isOpen1,\n  onClose1,\n  GroupPostDataPopup,\n  GrouppostCommentGet,\n  getrefreshComment,\n  favSectionRefresh,\n  gotoNext,\n  gotoprev,\n  validPosts,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const chatEndRef = useRef(null);\n  const { t } = useTranslation();\n  const inputRef = useRef(null);\n  const [isparamVl, setparamVl] = useState(\"\");\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [UserPhotoCommets, setUserPhotoCommets] = useState(\"\");\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [UserPopupData, setUserPopupData] = useState(\"\");\n\n  const [PopupData, setPopupData] = useState(\"\");\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Treat input as a Europe/Oslo time (even though it has 'Z')\n    // Remove the 'Z' if it exists\n    const cleanDateString = dateString.replace(/Z$/, \"\");\n\n    // Parse it as if it's Oslo local time (not UTC)\n    const osloTime = DateTime.fromISO(cleanDateString, { zone: \"Europe/Oslo\" });\n\n    if (!osloTime.isValid) {\n      console.error(\"Invalid Oslo Time:\", osloTime.invalidExplanation);\n      return \"Invalid Date\";\n    }\n\n    // Convert to current system's local timezone\n    const localTime = osloTime.setZone(\n      Intl.DateTimeFormat().resolvedOptions().timeZone\n    );\n\n    const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    console.log(osloTime);\n    const now = DateTime.now().setZone(userTimeZone);\n    const localPostTime = localTime.toFormat(\"HH:mm\");\n\n    const diffInMinutes = now.diff(localTime, \"minutes\").minutes;\n    const diffInHours = now.diff(localTime, \"hours\").hours;\n    const diffInDays = now.diff(localTime, \"days\").days;\n    const diffInWeeks = Math.floor(diffInDays / 7);\n    const diffInMonths = Math.floor(diffInDays / 30);\n    const diffInYears = Math.floor(diffInDays / 365);\n\n    if (diffInMinutes < 60) return `${localPostTime}`;\n    if (diffInHours < 24) return `${localPostTime}`;\n    if (Math.floor(diffInDays) === 1) return `Yesterday at ${localPostTime}`;\n    if (diffInDays < 7) return `${Math.floor(diffInDays)}d ${localPostTime}`;\n    if (diffInWeeks < 4) return `${diffInWeeks}w ${localPostTime}`;\n    if (diffInMonths < 12) return `${diffInMonths}m ${localPostTime}`;\n    return `${diffInYears}y ${localPostTime}`;\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!isOpen1) return;\n      if (event.key === \"ArrowRight\") {\n        gotoNext();\n      } else if (event.key === \"ArrowLeft\") {\n        gotoprev();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen1, gotoNext, gotoprev]);\n\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const getcommentUseralbum = async (id, commentid) => {\n    let formData = {\n      id: id,\n      commentid: commentid,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"getUseralbumsCommentsSeperate\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const newComment = res.data.album.comments; // the newly saved comment with full details\n      console.log(newComment);\n      setUserPhotoCommets((prevComments) => [\n        ...prevComments, // Spread the previous comments\n        ...newComment, // Append the new comments\n      ]);\n      if (newComment.user_id === userLogin.id) {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault();\n\n    setspinner(true);\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      comment: e.description || e.target.description.value,\n      event_id: GroupPostDataPopup.event_id,\n      post_id: GroupPostDataPopup.id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"CreateEventPostComment\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      getrefreshComment(\"\");\n      setTimeout(() => {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }, 1000);\n      setComments(\"\");\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n\n  const [showPicker, setShowPicker] = useState(false);\n  const pickerRef = useRef(null); // hold refs for each index\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n        setShowPicker(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        event_id: GroupPostDataPopup.event_id,\n        post_id: GroupPostDataPopup.id,\n        user_id: userLogin.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this album media\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  };\n  const handleChangeHeartPopup = async (postid, event_id) => {\n    let formData = {\n      user_id: userLogin.id,\n      post_id: postid,\n      event_id: event_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"EventpostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      favSectionRefresh();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={() => gotoNext()}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={() => gotoprev()}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-2 p-md-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    {GroupPostDataPopup.file ? (\n                      // Check if the URL ends with a valid image extension\n                      <MediaRenderer url={GroupPostDataPopup.file} />\n                    ) : (\n                      // Fallback when `item.image` is undefined or invalid\n                      <p>{t(\"No_avalibale_media\")}</p>\n                    )}\n                  </div>\n                  {userLogin.id === GroupPostDataPopup.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      {/* <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button> */}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 py-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link\n                        to={`/friend/${GroupPostDataPopup.uid}`}\n                        target=\"_blank\"\n                      >\n                        {GroupPostDataPopup.username}\n                      </Link>\n\n                      <h6>{formateTime(GroupPostDataPopup.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {GroupPostDataPopup &&\n                        GroupPostDataPopup.description &&\n                        GroupPostDataPopup.description.length > 150\n                          ? GroupPostDataPopup.description.substring(0, 150) +\n                            \"...\"\n                          : GroupPostDataPopup?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            className=\"liked  fulw\"\n                            onClick={() =>\n                              handleChangeHeartPopup(\n                                GroupPostDataPopup.id,\n                                GroupPostDataPopup.event_id\n                              )\n                            }\n                          >\n                            {GroupPostDataPopup.total_favorite ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_favorite}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_comments}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GrouppostCommentGet.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GrouppostCommentGet.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        {spinner && (\n                          <div\n                            className=\"spinner-border text-success postloader\"\n                            role=\"status\"\n                          >\n                            <span className=\"visually-hidden\"></span>\n                          </div>\n                        )}\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          <input\n                            type=\"hidden\"\n                            value={PopupData.id}\n                            name=\"comment_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                ref={pickerRef}\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 1 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport iconphoto from \"../assets/images/me3.png\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport icon1 from \"../assets/images/det1.png\";\nimport { IconUserPlus } from \"@tabler/icons-react\";\nimport icon2 from \"../assets/images/det2.png\";\nimport icon3 from \"../assets/images/det3.png\";\nimport axios from \"axios\";\nimport { InviteEventsFriend } from \"../components/InviteEventsFriend\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport { AlertSucess } from \"../components/AlertSucess\";\nimport { AlertError } from \"../components/AlertError\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { format, parseISO } from \"date-fns\";\nimport { Createneweventpost } from \"../components/Createneweventpost\";\nimport { EventPostComment } from \"../components/EventPostComment\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Editevent } from \"../components/Editevent\";\nimport { EventMediaLikeComment } from \"../components/EventMediaLikeComment\";\n\nimport { IoMdCloseCircleOutline } from \"react-icons/io\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport { FaFacebookMessenger } from \"react-icons/fa\";\nexport default function Singleevent() {\n  const [key, setKey] = useState(\"Invite\");\n  const navigate = useNavigate();\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [allevents, setallevents] = useState([]);\n  const [editPage, seteditPage] = useState(false);\n  const [Allcheckgroupmember, setAllcheckgroupmember] = useState([]);\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [eventId, seteventId] = useState(\"\");\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [isPopupOpen_error, setisPopupOpen_error] = useState(false);\n  const [isPopupOpen_sucess, setisPopupOpen_sucess] = useState(false);\n  const [isGrouppost, setGrouppost] = useState([]);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [allyoureventsUser, setallyoureventsUser] = useState([]);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [LoginData, setLoginData] = useState(\"\");\n  const [EventDetail, setEventDetail] = useState(\"\");\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n\n  const [EventDetailIntersted, setEventDetailIntersted] = useState([]);\n  const [EventDetailInterstedTotal, setEventDetailInterstedTotal] = useState(\n    []\n  );\n  const [showhide, setshowhide] = useState(false);\n\n  const [isInterested, setIsInterested] = useState(false);\n\n  const [isPopupOpen_newpost, setIsPopupOpen_newpost] = useState(false);\n  const [eventAcceptorNo, seteventAcceptorNo] = useState(false);\n  const [eventAccepted, seteventAccepted] = useState(false);\n  const [eventAcceptorNoCheck, seteventAcceptorNoCheck] = useState(false);\n  const [isEventpost, setEventpost] = useState([]);\n  const [allEventsInterstedUser, setallEventsInterstedUser] = useState([]);\n  const [eventView, seteventView] = useState(false);\n\n  const [inviteGuestuser, setinviteGuestuser] = useState([]);\n  const [confirmgodGuestuser, setconfirmgodGuestuser] = useState([]);\n  const [cannotgodGuestuser, setcannotgodGuestuser] = useState([]);\n  const [intersetddGuestuser, setintersetddGuestuser] = useState([]);\n  var apiUrl = \"https://backend.amourette.no/api/\";\n  var apiUrl2 = \"https://backend.amourette.no/api/members/\";\n  const { slug } = useParams();\n  const { t } = useTranslation();\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const editPageClose = () => {\n    seteditPage(false);\n  };\n  const open_Edit = () => {\n    seteditPage(true);\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n\n    getAllfriends();\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllfriendId(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    setLoginData(userLogin);\n    if (slug === undefined) {\n      //seteventId(\"\");\n    } else {\n      getDetails(slug);\n      UsercheckAccept();\n    }\n  }, [eventId]);\n  useEffect(() => {\n    if (LoginData) {\n      UsercheckAccept(); // Call UsercheckAccept only when LoginData is available\n    }\n    if (slug !== undefined) {\n      getDetails(slug);\n    }\n  }, [LoginData, eventView, slug]);\n  const UsercheckAccept = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"UsercheckAccept\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      if (respo.length === 0) {\n        seteventView(false);\n        seteventAcceptorNo(false);\n        // navigate(\"/events\");\n      } else {\n        if (respo[0].event_status === \"Created by You\") {\n          seteventView(true);\n          seteventAcceptorNo(false);\n          seteventAcceptorNoCheck(false);\n        }\n        if (respo[0].invite_status === \"No\") {\n          seteventView(false);\n          seteventAcceptorNo(true);\n        }\n        if (respo[0].invite_status === \"Yes\") {\n          seteventView(true);\n          seteventAccepted(false);\n          seteventAcceptorNoCheck(true);\n        }\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [showInvite, setshowInvite] = useState(false);\n  const getDetails = async (slug) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      slug: slug,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"get_EventDetailSlug\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.event;\n      console.log(respo);\n      if (respo === \"\" || respo === undefined) {\n        navigate(\"/events\");\n      }\n      if (respo.accept === \"Yes\") {\n        setshowInvite(true);\n      } else {\n        setshowInvite(false);\n      }\n      seteventId(respo.id);\n      //getEventdetail(respo.id);\n\n      getEventdetailallIntersted(respo.id);\n      get_EventIntersted(respo.id);\n      getpostComment(respo.id);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (slug !== undefined) {\n      getinviteusers();\n      getintesusers();\n      getcannotattend();\n      getconfirmgodGuestuser();\n    }\n  }, [slug]);\n  const getinviteusers = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getinviteusers\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setinviteGuestuser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getconfirmgodGuestuser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"getconfirmgodGuestuser\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      setconfirmgodGuestuser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getintesusers = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getintesusers\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setintersetddGuestuser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getcannotattend = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getcannotattend\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setcannotgodGuestuser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (eventId !== \"\") {\n      getEventInterstedUser();\n      getEventdetailallInterstedTotal();\n    }\n  }, [eventId]);\n  const getEventInterstedUser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    let formData = {\n      user_id: userLogin.id,\n      event_id: eventId,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getEventInterstedUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(res.data.results);\n      console.log(\"hhh\");\n      setallEventsInterstedUser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getallYoureventsUser = async (id) => {\n    let formData = {\n      user_id: LoginData.id,\n      event_id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getallYoureventsUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setallyoureventsUser(res.data.events);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (eventId !== \"\") {\n      getEventdetail();\n    }\n  }, [eventId]);\n  const getEventdetail = async () => {\n    let formData = {\n      event_id: eventId,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"get_EventDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      if (res.data.event === \"\" || res.data.event === undefined) {\n        navigate(\"/events\");\n      } else {\n        if (LoginData && LoginData.id === res.data.event.user_id) {\n          setshowhide(true);\n        } else {\n          setshowhide(false);\n        }\n      }\n      setEventDetail(res.data.event);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const getEventdetailallIntersted = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n      user_ids: userIdsWithSelf,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"get_EventdetailAllIntersted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      setEventDetailIntersted(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getEventdetailallInterstedTotal = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\n    let formData = {\n      event_id: eventId,\n      user_id: userLogin.id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"get_EventdetailAllInterstedTotal\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      setEventDetailInterstedTotal(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const get_EventIntersted = async (idd) => {\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"get_EventIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const openPopup1 = (id) => {\n    seteventId(id);\n    getallYoureventsUser(id);\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n\n  const open_DeleteAlert = (id) => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this event\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n    setisPopupOpen_delete2(false);\n  };\n  const closePopup_error = () => {\n    setisPopupOpen_error(false);\n  };\n  const closePopup_sucess = () => {\n    setisPopupOpen_sucess(false);\n  };\n  const refreshFriendsList = () => {\n    getallYoureventsUser(eventId);\n  };\n\n  const openPopup_newpost = () => {\n    setIsPopupOpen_newpost(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const closePopup_newpost = () => {\n    setIsPopupOpen_newpost(false);\n    document.body.style.overflowY = \"auto\";\n  };\n\n  const deleteEvent = async () => {\n    let deleteev = {\n      user_id: LoginData.id,\n      event_id: eventId,\n    };\n    console.log(deleteev);\n    try {\n      const res = await axios.post(apiUrl + \"userDeleteEvent\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      navigate(\"/events\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (EventDetail) {\n      getuserGroupView(EventDetail.user_id);\n    }\n  }, [EventDetail]);\n  const getuserGroupView = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: EventDetail.user_id,\n      checkfrd: EventDetail.user_id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"checkfrdevent\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllcheckgroupmember(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const refreshpopup = async () => {\n    deleteEvent();\n  };\n\n  const formatDateRange = (startDate, endDate) => {\n    const start = parseISO(startDate);\n    const end = parseISO(endDate);\n\n    const startDay = format(start, \"d\");\n    const endDay = format(end, \"d\");\n    const month = format(start, \"MMM\");\n\n    return `${startDay} ${month} - ${endDay} ${month}`;\n  };\n\n  const handleInterested = async () => {\n    let formData = {\n      event_id: eventId,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"userEventIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"hh\");\n      getEventdetailallIntersted(eventId);\n      getEventdetailallInterstedTotal();\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getpostComment = async (idd) => {\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"get_postComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"res.data\");\n      setEventpost(res.data.results);\n      setGrouppost(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const refreshPostComment = () => {\n    getpostComment(eventId);\n    setIsPopupOpen_newpost(false);\n  };\n\n  const Iseventfav = async () => {\n    getpostComment(eventId);\n  };\n  const commentSectionRefresh = async () => {\n    getpostComment(eventId);\n  };\n  const [isPopupOpen_delete2, setisPopupOpen_delete2] = useState(false);\n  const [deleteMessage2, setdeleteMessage2] = useState(\"\");\n  const handledeleteSentto = async (slug) => {\n    setisPopupOpen_delete2(true);\n    setdeleteMessage2(\"Are you sure? You want leave this event\");\n  };\n  const refreshpopupleave = async () => {\n    leavegroup();\n  };\n  const leavegroup = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    let deleteev = {\n      user_id: userLogin.id,\n      event_id: eventId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"DeleteInviteRequest\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopError(true);\n      setPoperrorMessage(\"Successfully deleted\");\n      navigate(\"/events\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleAccept = async (slug) => {\n    let eventAccepted = {\n      user_id: LoginData.id,\n      event_id: eventId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"eventAccepted\", eventAccepted, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(res);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Event accepted successfully\");\n      UsercheckAccept();\n      setTimeout(() => {\n        setShowPopSuccess(false);\n        window.location.reload();\n      }, 800);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getpostCommentrefresh = async () => {\n    getpostComment(eventId);\n  };\n  useEffect(() => {\n    if (modalOpen) {\n      // Disable scrolling when modal is open\n      document.body.style.overflowY = \"hidden\";\n    } else {\n      // Enable scrolling when modal is closed\n      document.body.style.overflowY = \"auto\";\n    }\n\n    // Cleanup to restore the overflow style when the component unmounts\n    return () => {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [modalOpen]);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setModalOpen(false);\n      }\n    };\n\n    // Add event listener\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!modalOpen) return; // Ensure key events work only when modal is open\n\n      if (event.key === \"ArrowRight\") {\n        showSlide(currentSlideIndex + 1); // Right arrow → moves to next slide\n      } else if (event.key === \"ArrowLeft\") {\n        showSlide(currentSlideIndex - 1); // Left arrow ← moves to previous slide\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [currentSlideIndex, modalOpen]);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n  const validPosts = isGrouppost.filter((post) => post.file);\n  const showSlide = (index) => {\n    if (index < 0) {\n      setCurrentSlideIndex(validPosts.length); // Loop back to last slide\n    } else if (index > validPosts.length) {\n      setCurrentSlideIndex(1); // Loop to first slide\n    } else {\n      setCurrentSlideIndex(index);\n    }\n  };\n\n  // Likes Comments Groups Same As Gallery\n  console.log(validPosts);\n  const [isPopupOpen11, setIsPopupOpen11] = useState(false);\n  const [GroupPostDataPopup, setGroupPostDataPopup] = useState(\"\");\n  const [GrouppostCommentGet, setGrouppostCommentGet] = useState([]);\n  const [popupgroupindex, setpopupgroupindex] = useState(\"\");\n  const [currentIndexPopup, setCurrentIndexPopup] = useState(0); // Assuming you have a state to track the index\n  const [GroupCommentpopupPostId, setGroupCommentpopupPostId] = useState(\"\");\n  const openPopupCommentBox = async (id, group_id, index) => {\n    setGroupCommentpopupPostId(id);\n    GrouppostComment(id, group_id);\n    setpopupgroupindex(index);\n    let formData = {\n      id: id,\n      event_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getEventPostData\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGroupPostDataPopup(res.data.results[0]);\n      setIsPopupOpen11(true);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const GrouppostComment = async (postid, group_id) => {\n    let formData = {\n      id: postid,\n      event_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getEventpostComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGrouppostCommentGet(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const closePopup11 = () => {\n    setIsPopupOpen11(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const getrefreshComment = async () => {\n    GrouppostComment(GroupCommentpopupPostId, eventId);\n  };\n  const favSectionRefresh = async () => {\n    openPopupCommentBox(GroupCommentpopupPostId, eventId, popupgroupindex);\n  };\n  const gotoNext = () => {\n    console.log(\"Navigating to next post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex < validPosts.length - 1) {\n        const newIndex = prevIndex + 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Next Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].event_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the last post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n\n  const gotoprev = () => {\n    console.log(\"Navigating to previous post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex > 0) {\n        const newIndex = prevIndex - 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Previous Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].event_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the first post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n  const [openGuest, setopenGuest] = useState(false);\n  const OpenGuest = () => {\n    getinviteusers();\n    getintesusers();\n    getcannotattend();\n    getconfirmgodGuestuser();\n    setopenGuest(true);\n  };\n  const guestClose = () => {\n    setopenGuest(false);\n  };\n  console.log(eventView);\n  const handleCancelRequest = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      id: idd,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"handlerequestcancel\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      getinviteusers();\n      getintesusers();\n      getcannotattend();\n      getconfirmgodGuestuser();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleAddFriend = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      sent_id: id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"sendFriendRequest\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.message;\n      //console.log(respo);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(respo);\n      getinviteusers();\n      getintesusers();\n      getcannotattend();\n      getconfirmgodGuestuser();\n      setTimeout(() => {\n        setShowPopSuccess(false);\n        setPopsuccessMessage(\"\");\n      }, 800);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  // Likes Comments Groups Same As Gallery\n  return (\n    <>\n      <Headertwo />\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"singleevent d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-7\">\n              <div className=\"d-flex flex-column gap-4\">\n                <div className=\"eventtitle d-block pb-1\">\n                  <h1>{EventDetail.name}</h1>\n                </div>\n                <div className=\"d-flex flex-column gap-2\">\n                  {eventView && (\n                    <div className=\"evname d-block\">\n                      <div className=\"d-flex flex-column gap-2\">\n                        <div\n                          className=\"d-flex gap-2 align-items-center\"\n                          onClick={openPopup_newpost}\n                        >\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                              <img src={EventDetail.image} alt=\"evepic\" />\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            <div className=\"whatthink d-block\">\n                              <h4>{`${t(\"what_do_you_think\")}`}</h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          className=\"d-flex justify-content-end addphotothink\"\n                          onClick={openPopup_newpost}\n                        >\n                          <div className=\"d-flex gap-2 align-items-center\">\n                            <div className=\"flex-grow-1\">\n                              <h4>{`${t(\"Add_photo\")}`}</h4>\n                            </div>\n                            <div className=\"flex-shrink-0\">\n                              <div className=\"iconphoto fulw\">\n                                <img src={iconphoto} alt=\"namepic\" />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {eventView ? (\n                    <EventPostComment\n                      isEventpost={isEventpost}\n                      LoginData={LoginData}\n                      Iseventfav={Iseventfav}\n                      commentSectionRefresh={commentSectionRefresh}\n                      getpostCommentrefresh={getpostCommentrefresh}\n                    />\n                  ) : (\n                    <p>{`${t(\"No_result_found\")}`}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-5\">\n              <div className=\"d-flex flex-column gap-3\">\n                <div className=\"d-flex align-items-start flex-wrap gap-3\">\n                  <div className=\"d-flex justify-content-start flex-wrap gap-3 posttopbtns\">\n                    {eventAcceptorNo && (\n                      <button\n                        type=\"button\"\n                        onClick={() => handleAccept(slug)}\n                        className={`btn prbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Accept\")}`}\n                      </button>\n                    )}\n                    {/* {eventAcceptorNoCheck && (\n                      <button\n                        type=\"button\"\n                        className={`btn prbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Accepted\")}`}\n                      </button>\n                    )} */}\n                    {Number(EventDetail.user_id) !== Number(userLogin.id) && (\n                      <button\n                        type=\"button\"\n                        onClick={handleInterested}\n                        className={`btn prbtn ${\n                          isInterested ? \"interested_btn\" : \"\"\n                        }`}\n                      >\n                        {`${t(\"INTERESTED\")}`}\n                      </button>\n                    )}\n\n                    {eventAcceptorNoCheck && (\n                      <button\n                        type=\"button\"\n                        onClick={() => handledeleteSentto(slug)}\n                        className={`btn redbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Leaveevent\")}`}\n                      </button>\n                    )}\n                    {showhide && (\n                      <button\n                        type=\"button\"\n                        onClick={() => openPopup1(eventId)}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"invite_a_member\")}`}\n                      </button>\n                    )}\n                    {Number(EventDetail.user_id) !== Number(userLogin.id) &&\n                      showInvite && (\n                        <button\n                          type=\"button\"\n                          onClick={() => openPopup1(eventId)}\n                          className=\"btn sebtn\"\n                        >\n                          {`${t(\"invite_a_member\")}`}\n                        </button>\n                      )}\n                    {showhide && (\n                      <div className=\"d-flex justify-content-between posttopbtns\">\n                        <button\n                          type=\"button\"\n                          onClick={() => OpenGuest()}\n                          className=\"btn sebtn\"\n                        >\n                          {`${t(\"GuestUser\")}`}\n                        </button>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button type=\"button\" className=\"btn prbtn\">\n                        {`${t(\"save_changes\")}`}\n                      </button>\n                    </div>\n                  )} */}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_DeleteAlert(eventId)}\n                        className=\"btn redbtn\"\n                      >\n                        {`${t(\"DELETE_EVENT\")}`}\n                      </button>\n                    </div>\n                  )}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_Edit()}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"save_changes\")}`}\n                      </button>\n                    </div>\n                  )}\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"Detaljer\")}`}</h3>\n                  <p>{EventDetail.description}</p>\n                  <div className=\"d-flex flex-column gap-2 mt-2\">\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon1} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>\n                          {EventDetail.makeImagePrivate === 0\n                            ? \"Public\"\n                            : \"Private\"}\n                        </h5>\n                      </div>\n                    </div>\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon2} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>{EventDetail.location}</h5>\n                      </div>\n                    </div>\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon3} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>\n                          {EventDetail.time} and{\" \"}\n                          {EventDetail.start_date && EventDetail.end_date ? (\n                            formatDateRange(\n                              EventDetail.start_date,\n                              EventDetail.end_date\n                            )\n                          ) : (\n                            <span> {`${t(\"invalid_date_range\")}`}</span>\n                          )}\n                        </h5>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  {/* <div className=\"row g-2 g-md-4\">\n                    {EventDetailIntersted && EventDetailIntersted.length > 0 ? (\n                      EventDetailIntersted.map((member, index) => (\n                        <div className=\"col-2 col-md-3\" key={index}>\n                          <div className=\"memperson ofit d-flex flex-column gap-1 overflow-hidden rounded-3\">\n                            {member.profile_image ? ( // Display the image URL if available\n                              <img\n                                className=\"w-100 h-100\"\n                                src={member.profile_image} // Use the URL created from the file\n                                alt=\"Selected\"\n                              />\n                            ) : (\n                              <img\n                                className=\"w-100 h-100\"\n                                src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                alt=\"Profile\"\n                              />\n                            )}\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"col-12\">\n                        <p>{`${t(\"No_result_found\")}`}</p>\n                      </div>\n                    )}\n                  </div> */}\n\n                  <div className=\"row g-2 g-md-4\">\n                    <div className=\"col-12\">\n                      <h3>{`${t(\"LeftMenu_Members\")}`} </h3>\n                      <div className=\"d-flex flex-column gap-3 tag_friends\">\n                        <div className=\"d-flex align-items-start w-100 gap-3\">\n                          {/* <span>{EventDetailIntersted.length}</span> */}\n                          <div className=\"d-flex flex-column gap-3 overflow-auto scroll_bar pb-4\">\n                            <div className=\"d-flex align-items-center w-100 gap-2\">\n                              {EventDetailIntersted.length > 0 && (\n                                <span>{EventDetailIntersted.length}</span>\n                              )}\n\n                              <p className=\"text1line\">\n                                {EventDetailIntersted &&\n                                EventDetailIntersted.length > 0\n                                  ? EventDetailIntersted.map(\n                                      (member, index) => (\n                                        <span key={member.uid}>\n                                          <Link\n                                            to={`/friend/${member.uid}`}\n                                            target=\"_blank\"\n                                          >\n                                            {member.username}\n                                          </Link>\n                                          {index !==\n                                            EventDetailIntersted.length - 1 &&\n                                            \", \"}\n                                        </span>\n                                      )\n                                    )\n                                  : \"\"}\n                              </p>\n                            </div>\n\n                            {EventDetailIntersted &&\n                            EventDetailIntersted.length > 0 ? (\n                              <ul className=\"avimgs\">\n                                {EventDetailIntersted.map((member, index) => (\n                                  <li key={index}>\n                                    <Link\n                                      to={`/friend/${member.uid}`}\n                                      target=\"_blank\"\n                                    >\n                                      <img\n                                        className=\"w-100 h-100\"\n                                        src={\n                                          member.profile_image ||\n                                          require(\"../assets/images/thumb.jpg\")\n                                        }\n                                        alt=\"Profile\"\n                                      />\n                                    </Link>\n                                  </li>\n                                ))}\n                              </ul>\n                            ) : (\n                              <p>{t(\"No_result_found\")}</p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  {/* <div className=\"row g-2 g-md-4\">\n                    {EventDetailIntersted && EventDetailIntersted.length > 0 ? (\n                      EventDetailIntersted.map((member, index) => (\n                        <div className=\"col-2 col-md-3\" key={index}>\n                          <div className=\"memperson ofit d-flex flex-column gap-1 overflow-hidden rounded-3\">\n                            {member.profile_image ? ( // Display the image URL if available\n                              <img\n                                className=\"w-100 h-100\"\n                                src={member.profile_image} // Use the URL created from the file\n                                alt=\"Selected\"\n                              />\n                            ) : (\n                              <img\n                                className=\"w-100 h-100\"\n                                src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                alt=\"Profile\"\n                              />\n                            )}\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"col-12\">\n                        <p>{`${t(\"No_result_found\")}`}</p>\n                      </div>\n                    )}\n                  </div> */}\n\n                  <div className=\"row g-2 g-md-4\">\n                    <div className=\"col-12\">\n                      <h3>{`${t(\"LeftMenu_Membersinster\")}`} </h3>\n                      <div className=\"d-flex flex-column gap-3 tag_friends\">\n                        <div className=\"d-flex align-items-start w-100 gap-3\">\n                          {/* <span>{EventDetailIntersted.length}</span> */}\n                          <div className=\"d-flex flex-column gap-3 overflow-auto scroll_bar pb-4\">\n                            <div className=\"d-flex align-items-center w-100 gap-2\">\n                              {EventDetailInterstedTotal.length > 0 && (\n                                <span>{EventDetailInterstedTotal.length}</span>\n                              )}\n\n                              <p className=\"text1line\">\n                                {EventDetailInterstedTotal &&\n                                EventDetailInterstedTotal.length > 0\n                                  ? EventDetailInterstedTotal.map(\n                                      (member, index) => (\n                                        <span key={member.uid}>\n                                          <Link\n                                            to={`/friend/${member.uid}`}\n                                            target=\"_blank\"\n                                          >\n                                            {member.username}\n                                          </Link>\n                                          {index !==\n                                            EventDetailInterstedTotal.length -\n                                              1 && \", \"}\n                                        </span>\n                                      )\n                                    )\n                                  : \"\"}\n                              </p>\n                            </div>\n\n                            {EventDetailInterstedTotal &&\n                            EventDetailInterstedTotal.length > 0 ? (\n                              <ul className=\"avimgs\">\n                                {EventDetailInterstedTotal.map(\n                                  (member, index) => (\n                                    <li key={index}>\n                                      <Link\n                                        to={`/friend/${member.uid}`}\n                                        target=\"_blank\"\n                                      >\n                                        <img\n                                          className=\"w-100 h-100\"\n                                          src={\n                                            member.profile_image ||\n                                            require(\"../assets/images/thumb.jpg\")\n                                          }\n                                          alt=\"Profile\"\n                                        />\n                                      </Link>\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            ) : (\n                              <p>{t(\"No_result_found\")}</p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"Media\")}`}</h3>\n\n                  {eventView && validPosts.length > 0 ? (\n                    <div className=\"row gy-2\">\n                      {validPosts.map((post, index) =>\n                        post.file ? (\n                          <div className=\"col-sm-3 col-md-6\" key={index}>\n                            <div className=\"memperson ofit d-flex flex-column gap-1 \">\n                              <div className=\"overflow-hidden rounded-3 d-block\">\n                                <MediaRenderer\n                                  url={post.file}\n                                  onClick={() => {\n                                    if (eventView) {\n                                      openPopupCommentBox(\n                                        post.id,\n                                        post.event_id,\n                                        index\n                                      );\n                                      showSlide(index + 1);\n                                    } else {\n                                      openModal(); // Call your function for opening the modal when groupView is false\n                                      showSlide(index + 1);\n                                    }\n                                  }}\n                                />\n                              </div>\n                              <Link\n                                to={`/friend/${post.uid}`}\n                                target=\"_blank\"\n                                className=\"goupmediatext\"\n                              >\n                                {post.username}\n                              </Link>\n                            </div>\n                          </div>\n                        ) : null\n                      )}\n                    </div>\n                  ) : (\n                    <p>{`${t(\"No_available_media\")}`}</p>\n                  )}\n\n                  {eventView &&\n                    validPosts.some(\n                      (post) =>\n                        post.file &&\n                        typeof post.file === \"string\" &&\n                        post.file.trim() !== \"\"\n                    ) && (\n                      <div className=\"d-block vmore\">\n                        <Link to={`/eventmedia/${slug}`}>{`${t(\n                          \"view_more\"\n                        )}`}</Link>\n                      </div>\n                    )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {modalOpen && (\n        <div id=\"myModal\" className=\"modalgg\">\n          <span className=\"close cursor\" onClick={closeModal}>\n            &times;\n          </span>\n          <div className=\"modal-content\">\n            {validPosts.length > 0 ? (\n              validPosts.map((post, index) => (\n                <div\n                  className=\"mySlides\"\n                  style={{\n                    display: currentSlideIndex === index + 1 ? \"block\" : \"none\",\n                  }}\n                  key={index}\n                >\n                  <div className=\"numbertext\">\n                    {index + 1} / {validPosts.length}\n                  </div>\n\n                  {post.file &&\n                  typeof post.file === \"string\" &&\n                  post.file.match(/\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i) ? (\n                    <img src={post.file} alt=\"img\" />\n                  ) : post.file &&\n                    typeof post.file === \"string\" &&\n                    post.file.match(\n                      /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                    ) ? (\n                    <video controls alt=\"video\">\n                      <source src={post.file} type=\"video/mp4\" />\n                      {`${t(\"Your_browser_does\")}`}\n                    </video>\n                  ) : null}\n                </div>\n              ))\n            ) : (\n              <p>{`${t(\"No_available_media\")}`}</p>\n            )}\n\n            <a\n              className=\"prev\"\n              onClick={() => showSlide(currentSlideIndex - 1)}\n            >\n              &#10094;\n            </a>\n            <a\n              className=\"next\"\n              onClick={() => showSlide(currentSlideIndex + 1)}\n            >\n              &#10095;\n            </a>\n          </div>\n        </div>\n      )}\n      <InviteEventsFriend\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        friends={allyoureventsUser}\n        LoginData={LoginData}\n        eventId={eventId}\n        onInvitesSent={refreshFriendsList}\n      ></InviteEventsFriend>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete2}\n        onClose1={closePopup_delete}\n        message={deleteMessage2}\n        onReturnSent={refreshpopupleave}\n      ></AlertDelete>\n      <AlertError\n        isOpen1={isPopupOpen_error}\n        onClose1={closePopup_error}\n      ></AlertError>\n      <AlertSucess\n        isOpen1={isPopupOpen_sucess}\n        onClose1={closePopup_sucess}\n      ></AlertSucess>\n      <Createneweventpost\n        isOpen={isPopupOpen_newpost}\n        onClose={closePopup_newpost}\n        eventId={eventId}\n        LoginData={LoginData}\n        reSetPost={refreshPostComment}\n      ></Createneweventpost>\n      <Editevent\n        isOpen={editPage}\n        onClose={editPageClose}\n        LoginData={LoginData}\n        eventId={eventId}\n        EventDetail={EventDetail}\n      ></Editevent>\n\n      <EventMediaLikeComment\n        isOpen1={isPopupOpen11}\n        onClose1={closePopup11}\n        GroupPostDataPopup={GroupPostDataPopup}\n        GrouppostCommentGet={GrouppostCommentGet}\n        getrefreshComment={getrefreshComment}\n        favSectionRefresh={favSectionRefresh}\n        gotoNext={gotoNext}\n        gotoprev={gotoprev}\n        validPosts={validPosts}\n      />\n      {openGuest && (\n        <>\n          <div className=\"d-flex flex-column gap-3 scroll_bar guest_invitepop\">\n            <h4>{t(\"Guest\")}</h4>\n            <button onClick={guestClose} className=\"guestClose\">\n              <IoMdCloseCircleOutline />\n            </button>\n            <Tabs\n              id=\"controlled-tab-example\"\n              activeKey={key}\n              onSelect={(k) => setKey(k)}\n              className=\"mb-3 flex gap-3\"\n            >\n              <Tab\n                eventKey=\"Going\"\n                title={`${t(\"going\")} (${confirmgodGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({confirmgodGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {confirmgodGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        confirmgodGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.sender_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.sender_username}</h6>\n                                </div>\n                              </div>\n                              {invite.is_friend === \"Yes\" && (\n                                <Link\n                                  to={`/receivedchatmessage/${invite.sender_slug}`}\n                                  className=\"send_messsage\"\n                                >\n                                  <FaFacebookMessenger />\n                                  <p>{t(\"Message\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === null && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleAddFriend(invite.sent_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <IconUserPlus stroke={2} />\n                                  <p>{t(\"AddFriend\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === \"No\" && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleCancelRequest(invite.frd_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <p>{t(\"CancelRequest\")}</p>\n                                </Link>\n                              )}\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </Tab>\n              <Tab\n                eventKey=\"Maybe\"\n                title={`${t(\"Maybe\")} (${intersetddGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({intersetddGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {intersetddGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        intersetddGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.sender_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.sender_username}</h6>\n                                </div>\n                              </div>\n                              {invite.is_friend === \"Yes\" && (\n                                <Link\n                                  to={`/receivedchatmessage/${invite.sender_slug}`}\n                                  className=\"send_messsage\"\n                                >\n                                  <FaFacebookMessenger />\n                                  <p>{t(\"Message\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === null && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleAddFriend(invite.sent_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <IconUserPlus stroke={2} />\n                                  <p>{t(\"AddFriend\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === \"No\" && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleCancelRequest(invite.frd_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <p>{t(\"CancelRequest\")}</p>\n                                </Link>\n                              )}\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </Tab>\n              <Tab\n                eventKey=\"Invite\"\n                title={`${t(\"Invite\")} (${inviteGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({inviteGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {inviteGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        inviteGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.sender_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.sender_username}</h6>\n                                </div>\n                              </div>\n                              {invite.is_friend === \"Yes\" && (\n                                <Link\n                                  to={`/receivedchatmessage/${invite.sender_slug}`}\n                                  className=\"send_messsage\"\n                                >\n                                  <FaFacebookMessenger />\n                                  <p>{t(\"Message\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === null && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleAddFriend(invite.sent_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <IconUserPlus stroke={2} />\n                                  <p>{t(\"AddFriend\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === \"No\" && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleCancelRequest(invite.frd_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <p>{t(\"CancelRequest\")}</p>\n                                </Link>\n                              )}\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </Tab>\n              <Tab\n                eventKey=\"cannot\"\n                title={`${t(\"cannot\")} (${cannotgodGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({cannotgodGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {cannotgodGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        cannotgodGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.sender_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.sender_username}</h6>\n                                </div>\n                              </div>\n                              {invite.is_friend === \"Yes\" && (\n                                <Link\n                                  to={`/receivedchatmessage/${invite.sender_slug}`}\n                                  className=\"send_messsage\"\n                                >\n                                  <FaFacebookMessenger />\n                                  <p>{t(\"Message\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === null && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleAddFriend(invite.sent_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <IconUserPlus stroke={2} />\n                                  <p>{t(\"AddFriend\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === \"No\" && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleCancelRequest(invite.frd_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <p>{t(\"CancelRequest\")}</p>\n                                </Link>\n                              )}\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </Tab>\n\n              {/* <Tab eventKey=\"contact\" title=\"Contact\">\n                            Tab content for Contact\n                          </Tab> */}\n            </Tabs>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["InviteEventsFriend","_ref","isOpen1","onClose1","children","friends","LoginData","eventId","onInvitesSent","selectedFriends","setSelectedFriends","useState","invMessage","setinvMessage","t","useTranslation","useEffect","savedLanguage","localStorage","getItem","console","log","i18n","language","changeLanguage","_jsx","_Fragment","className","onClick","e","target","classList","contains","_jsxs","action","onSubmit","async","preventDefault","formData","friendIds","user_id","id","response","axios","post","apiUrl","headers","setTimeout","data","error","method","length","map","friend","index","profile_image","src","alt","require","username","type","onChange","handleCheckboxChange","userId","prevSelected","includes","filter","checked","name","disabled","AlertSucess","AlertError","Createneweventpost","isOpen","onClose","reSetPost","description","setDescription","image","setImage","restr_message","setrestr_message","setError","spinner","setspinner","fileType","setFileType","videoUrl","setVideoUrl","convertToPng","file","Promise","resolve","reject","reader","FileReader","onload","event","img","Image","canvas","document","createElement","width","height","getContext","drawImage","toBlob","blob","pngFile","File","replace","lastModified","Date","getTime","Error","onerror","result","readAsDataURL","restrictedWords","isButtonDisabled","trim","style","fontSize","FormData","append","res","Accept","status","err","request","rows","placeholder","value","inputValue","hasRestrictedWord","some","word","toLowerCase","required","accept","files","isImage","startsWith","isVideo","size","convertedFile","URL","createObjectURL","controls","BsCloudUpload","color","role","opacity","EventPostComment","isEventpost","Iseventfav","commentSectionRefresh","getpostCommentrefresh","postId","setpostId","currentSlideIndex","setCurrentSlideIndex","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","comments","setComments","Array","fill","webSocket","setWebSocket","errorPopMessage","setPoperrorMessage","restrictedStates","setRestrictedStates","inputRef","useRef","modalOpen","setModalOpen","imagess","setimage","closeModal","showPopError","setShowPopError","ws","WebSocket","onmessage","receivedMessage","JSON","parse","close","handlePostComment","event_id","_comments$index","commentText","currentWordCount","text","split","post_id","comment","prev","results","fetchComments","formateTime","dateString","cleanDateString","osloTime","DateTime","fromISO","zone","isValid","invalidExplanation","localTime","setZone","Intl","DateTimeFormat","resolvedOptions","timeZone","userTimeZone","now","localPostTime","toFormat","diffInMinutes","diff","minutes","diffInHours","hours","diffInDays","days","diffInWeeks","Math","floor","diffInMonths","diffInYears","showPicker","setShowPicker","pickerRefs","handleClickOutside","Object","keys","current","forEach","key","ref","addEventListener","removeEventListener","handleKeyDown","AlertDelete","closePopup_delete","message","onReturnSent","handleeventPostDelete","ErrorPop","_comments$index3","_comments$index4","Link","to","uid","makeImagePrivate","date","title","handleeventPostDeleteconfirm","padding","textAlign","minWidth","background","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","url","chat","postid","handleChangeHeart","fav","FaHeart","FaRegHeart","fav_count","comm","comt_uid","comment_user_profile_image","comment_makeImagePrivate","comment_user_username","comment_date","toggleEmojiPicker","el","EmojiPicker","onEmojiClick","emojiObject","handleEmojiClick","inputEl","currentValue","startPos","selectionStart","endPos","selectionEnd","newValue","substring","emoji","focus","onKeyDown","_comments$index2","handleCommentChange","transition","position","top","left","backgroundColor","display","justifyContent","alignItems","zIndex","maxWidth","maxHeight","borderRadius","objectFit","Editevent","onEventCreated","EventDetail","selectedFile","setSelectedFile","errorMessage","setErrorMessage","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","setMakeImagePrivate","eventData","setEventData","start_date","end_date","time","location","today","day","String","getDate","padStart","month","getMonth","year","getFullYear","previewImage","setPreviewImage","makeImageUse","today_enddate","handleInputChange","prevData","SuccessPop","storedUsername","userLogin","window","slug","reload","defaultValue","selectedDate","setHours","alert","minLength","EventMediaLikeComment","GroupPostDataPopup","GrouppostCommentGet","getrefreshComment","favSectionRefresh","gotoNext","gotoprev","validPosts","input","setInput","chatEndRef","isparamVl","setparamVl","UserPhotoCommets","setUserPhotoCommets","UserPopupData","setUserPopupData","PopupData","setPopupData","handlePostSubmit","scrollIntoView","behavior","pickerRef","deletePost","FaChevronRight","FaChevronLeft","handleChangeHeartPopup","total_favorite","total_comments","prevMessage","Singleevent","setKey","navigate","useNavigate","allevents","setallevents","editPage","seteditPage","Allcheckgroupmember","setAllcheckgroupmember","AllfriendId","setAllfriendId","seteventId","isPopupOpen1","setIsPopupOpen1","isPopupOpen_error","setisPopupOpen_error","isPopupOpen_sucess","setisPopupOpen_sucess","isGrouppost","setGrouppost","allyoureventsUser","setallyoureventsUser","setLoginData","setEventDetail","EventDetailIntersted","setEventDetailIntersted","EventDetailInterstedTotal","setEventDetailInterstedTotal","showhide","setshowhide","isInterested","setIsInterested","isPopupOpen_newpost","setIsPopupOpen_newpost","eventAcceptorNo","seteventAcceptorNo","eventAccepted","seteventAccepted","eventAcceptorNoCheck","seteventAcceptorNoCheck","setEventpost","allEventsInterstedUser","setallEventsInterstedUser","eventView","seteventView","inviteGuestuser","setinviteGuestuser","confirmgodGuestuser","setconfirmgodGuestuser","cannotgodGuestuser","setcannotgodGuestuser","intersetddGuestuser","setintersetddGuestuser","apiUrl2","useParams","getAllfriends","friendUserIds","undefined","getDetails","UsercheckAccept","respo","event_status","invite_status","showInvite","setshowInvite","getEventdetailallIntersted","get_EventIntersted","getpostComment","getinviteusers","getintesusers","getcannotattend","getconfirmgodGuestuser","getEventInterstedUser","getEventdetailallInterstedTotal","getallYoureventsUser","events","getEventdetail","userIdsWithSelf","idd","user_ids","openPopup1","body","overflowY","setisPopupOpen_delete2","openPopup_newpost","getuserGroupView","checkfrd","isPopupOpen_delete2","deleteMessage2","setdeleteMessage2","leavegroup","deleteev","showSlide","isPopupOpen11","setIsPopupOpen11","setGroupPostDataPopup","setGrouppostCommentGet","popupgroupindex","setpopupgroupindex","currentIndexPopup","setCurrentIndexPopup","GroupCommentpopupPostId","setGroupCommentpopupPostId","openPopupCommentBox","group_id","GrouppostComment","openGuest","setopenGuest","handleCancelRequest","handleAddFriend","sent_id","Headertwo","iconphoto","handleAccept","Number","handledeleteSentto","icon1","icon2","icon3","formatDateRange","startDate","endDate","start","parseISO","end","startDay","format","endDay","member","match","closePopup1","refreshFriendsList","deleteEvent","closePopup_error","closePopup_sucess","closePopup_newpost","refreshPostComment","editPageClose","closePopup11","prevIndex","newIndex","guestClose","IoMdCloseCircleOutline","Tabs","activeKey","onSelect","k","Tab","eventKey","invite","sender_profile_image","sender_username","is_friend","sender_slug","FaFacebookMessenger","IconUserPlus","frd_id"],"sourceRoot":""}
{"version":3,"file":"static/js/5781.d14d2216.chunk.js","mappings":"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","sources":["components/Alertpopupsuccess.jsx","pages/User/Investor/Recordround.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Alertpopupsuccess({ message, onClose }) {\n  const [fade, setFade] = useState(\"show\"); // Bootstrap's \"show\" class\n\n  useEffect(() => {\n    const fadeTimer = setTimeout(() => {\n      setFade(\"\"); // remove \"show\" to trigger Bootstrap fade out\n    }, 2500);\n\n    const closeTimer = setTimeout(() => {\n      onClose();\n    }, 3000);\n\n    return () => {\n      clearTimeout(fadeTimer);\n      clearTimeout(closeTimer);\n    };\n  }, [onClose]);\n\n  return (\n    <div\n      className={`alert alert-success alert-dismissible fade ${fade}`}\n      role=\"alert\"\n      style={{\n        position: \"fixed\",\n        top: \"20px\",\n        right: \"20px\",\n        zIndex: 9999,\n        minWidth: \"300px\",\n        maxWidth: \"90%\",\n      }}\n    >\n      <strong>Success!</strong> {message}\n      <button\n        type=\"button\"\n        className=\"btn-close\"\n        aria-label=\"Close\"\n        onClick={onClose}\n      ></button>\n    </div>\n  );\n}\n\nexport default Alertpopupsuccess;\n","import React, { useState, useEffect } from \"react\";\r\nimport TopBar from \"../../../components/Users/TopBar\";\r\nimport ModuleSideNav from \"../../../components/Users/ModuleSideNav\";\r\nimport Alertpopup from \"../../../components/Alertpopup\";\r\nimport Alertpopupsuccess from \"../../../components/Alertpopupsuccess\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../../components/Styles/RegisterStyles\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport PreviousSection from \"../../../components/Users/PreviousSection\";\r\n\r\nimport { NumericFormat } from \"react-number-format\";\r\nimport axios from \"axios\";\r\nimport DangerAlertPopup from \"../../../components/Admin/DangerAlertPopup\";\r\nexport default function Recordround() {\r\n  const apiUrlRound = \"https://blueprintcatalyst.com/api/user/capitalround/\";\r\n  const [progresswidth, setprogresswidth] = useState(\"0\");\r\n  const [countrySymbolList, setCountrysymbollist] = useState([]);\r\n  const [errorMsg, seterrorMsg] = useState(\"\");\r\n  const [successMsg, setsuccessMsg] = useState(\"\");\r\n  const [activeSection, setActiveSection] = useState(\"shareclass\");\r\n  const storedUsername = localStorage.getItem(\"UserLoginData\");\r\n  const [messageAll, setmessageAll] = useState(\"\");\r\n  const [errr, seterrr] = useState(false);\r\n  const userLogin = JSON.parse(storedUsername);\r\n  // Add this to your component state\r\n  const [errors, setErrors] = useState({\r\n    liquidationOther: \"\",\r\n    nameOfRound: \"\",\r\n    shareClassType: \"\",\r\n    shareclassother: \"\",\r\n    instrumentType: \"\",\r\n    customInstrument: \"\",\r\n    issuedshares: \"\",\r\n    dateroundclosed: \"\",\r\n    liquidation: \"\",\r\n    convertible: \"\",\r\n    convertibleType: \"\",\r\n    voting: \"\",\r\n    termsheetFile: \"\",\r\n    subscriptiondocument: \"\",\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    liquidationOther: \"\",\r\n    liquidationpreferences: \"\",\r\n    shareClassType: \"\",\r\n    nameOfRound: \"\",\r\n    shareclassother: \"\",\r\n    description: \"\",\r\n    instrumentType: \"\",\r\n    customInstrument: \"\",\r\n    roundsize: \"\",\r\n    currency: \"CAD $\",\r\n    issuedshares: \"\",\r\n    dateroundclosed: \"\",\r\n    rights: \"\",\r\n    liquidation: \"\",\r\n    convertible: \"\",\r\n    convertibleType: \"\",\r\n    voting: \"\",\r\n    termsheetFile: null,\r\n    subscriptiondocument: null,\r\n    generalnotes: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = \"Create Record Round Page\";\r\n  }, []);\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleFileUpload = (field, files) => {\r\n    if (files && files.length > 0) {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [field]: files[0],\r\n      }));\r\n    }\r\n  };\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [otherText, setOtherText] = useState(\"\");\r\n  const [isReviewing, setIsReviewing] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"user_id\", userLogin.id);\r\n    formDataToSend.append(\"shareClassType\", selected);\r\n    formDataToSend.append(\"description\", formData.description);\r\n    formDataToSend.append(\"liquidationOther\", formData.liquidationOther);\r\n    formDataToSend.append(\r\n      \"liquidationpreferences\",\r\n      formData.liquidationpreferences\r\n    );\r\n    formDataToSend.append(\"nameOfRound\", formData.nameOfRound);\r\n    formDataToSend.append(\"shareclassother\", formData.shareclassother);\r\n    formDataToSend.append(\"instrumentType\", formData.instrumentType);\r\n    formDataToSend.append(\"customInstrument\", formData.customInstrument);\r\n    formDataToSend.append(\"roundsize\", formData.roundsize);\r\n    formDataToSend.append(\"currency\", formData.currency);\r\n    formDataToSend.append(\"issuedshares\", formData.issuedshares);\r\n    formDataToSend.append(\"rights\", formData.rights);\r\n    formDataToSend.append(\"liquidation\", formData.liquidation);\r\n    formDataToSend.append(\"convertible\", formData.convertible);\r\n    formDataToSend.append(\"convertibleType\", formData.convertibleType);\r\n    formDataToSend.append(\"voting\", formData.voting);\r\n    formDataToSend.append(\"dateroundclosed\", formData.dateroundclosed);\r\n    formDataToSend.append(\"generalnotes\", formData.generalnotes);\r\n    if (formData.termsheetFile && formData.termsheetFile.length > 0) {\r\n      formData.termsheetFile.forEach((file) => {\r\n        formDataToSend.append(\"termsheetFile\", file);\r\n      });\r\n    }\r\n    if (\r\n      formData.subscriptiondocument &&\r\n      formData.subscriptiondocument.length > 0\r\n    ) {\r\n      formData.subscriptiondocument.forEach((file) => {\r\n        formDataToSend.append(\"subscriptiondocument\", file);\r\n      });\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlRound + \"CreatecapitalRound\",\r\n        formDataToSend,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      seterrr(false);\r\n      setmessageAll(\"Record save successfully\");\r\n      setTimeout(() => {\r\n        setmessageAll(\"\");\r\n        window.location.reload();\r\n      }, 5000);\r\n    } catch (err) {\r\n      seterrr(true);\r\n      setmessageAll(err);\r\n      setTimeout(() => {\r\n        setmessageAll(\"\");\r\n      }, 5000);\r\n      console.error(\"Error fetching company details:\", err);\r\n    }\r\n    //setsuccessMsg(\"Record round created successfully!\");\r\n  };\r\n\r\n  // Share class options\r\n\r\n  const options = [\r\n    \"Founder Shares (Family and Friends)\",\r\n    \"Advisor Shares\",\r\n    \"Pre-Seed\",\r\n    \"Seed\",\r\n    \"Seed Extension / Seed+\",\r\n    \"Series A\",\r\n    \"Series A Extension\",\r\n    \"Series B\",\r\n    \"Series B Extension\",\r\n    \"Series C\",\r\n    \"Series C Extension\",\r\n    \"Series D\",\r\n    \"Bridge Round\",\r\n    \"OTHER\",\r\n  ];\r\n\r\n  // Form sections\r\n  const sections = [\r\n    { id: \"shareclass\", title: \"Share Class\" },\r\n    { id: \"description\", title: \"Description\" },\r\n    { id: \"instrument\", title: \"Investment Instrument\" },\r\n    { id: \"roundsize\", title: \"Round Size\" },\r\n    { id: \"issuedshares\", title: \"# Issued Shares\" },\r\n    { id: \"rights\", title: \"Rights & Preferences\" },\r\n    { id: \"liquidation\", title: \"Liquidation Preference\" },\r\n    { id: \"convertible\", title: \"Convertible?\" },\r\n    { id: \"voting\", title: \"Voting Rights\" },\r\n    { id: \"termsheet\", title: \"Term Sheet\" },\r\n    { id: \"subscription\", title: \"Subscription Document\" },\r\n    { id: \"notes\", title: \"Notes\" },\r\n  ];\r\n  //Progress bar\r\n  const totalSections = sections.length;\r\n\r\n  // Find the index of the active section\r\n  const activeIndex = sections.findIndex(\r\n    (section) => section.id === activeSection\r\n  );\r\n\r\n  // Compute progress percentage\r\n  // - If only 1 section => 0%\r\n  // - Otherwise, calculate relative progress from 0% to 100%\r\n  const progressWidth =\r\n    totalSections > 1\r\n      ? Math.round((activeIndex / (totalSections - 1)) * 100)\r\n      : 0;\r\n\r\n  //Progress bar\r\n  //Instrument\r\n  const instrumentOptions = [\r\n    {\r\n      value: \"Common Stock\",\r\n      label: \"Common Stock\",\r\n      description:\r\n        \"Direct sale of common shares, often to founders or early employees.\",\r\n    },\r\n    {\r\n      value: \"Preferred Equity\",\r\n      label: \"Preferred Equity\",\r\n      description:\r\n        \"Equity with liquidity preference, often used in priced rounds with early-stage investors.\",\r\n    },\r\n    {\r\n      value: \"Convertible Note\",\r\n      label: \"Convertible Note\",\r\n      description:\r\n        \"Short-term debt that converts into equity at a future financing round.\",\r\n    },\r\n    {\r\n      value: \"Safe\",\r\n      label: \"Safe\",\r\n      description:\r\n        \"Simple Agreement for Future Equity - converts at the time of a priced round.\",\r\n    },\r\n    {\r\n      value: \"Venture/Bank DEBT\",\r\n      label: \"Venture/Bank DEBT\",\r\n      description:\r\n        \"Non-convertible financing structured as loans, typically repaid with interest.\",\r\n    },\r\n    {\r\n      value: \"OTHER\",\r\n      label: \"Other\",\r\n      description: \"Custom investment instrument not listed above.\",\r\n    },\r\n  ];\r\n\r\n  const liquidationOptions = [\r\n    {\r\n      value: \"1x Investor Multiple Preference\",\r\n      label: \"1x Investor Multiple Preference\",\r\n      description:\r\n        \"Multiple of the original investment returned before common shares participate.\",\r\n    },\r\n    {\r\n      value: \"2x Investor Multiple Preference\",\r\n      label: \"2x Investor Multiple Preference\",\r\n      description:\r\n        \"Multiple of the original investment returned before common shares participate.\",\r\n    },\r\n    {\r\n      value: \"3x Investor Multiple Preference\",\r\n      label: \"3x Investor Multiple Preference\",\r\n      description:\r\n        \"Multiple of the original investment returned before common shares participate.\",\r\n    },\r\n    {\r\n      value: \"Non-Participating\",\r\n      label: \"Non-Participating\",\r\n      description:\r\n        \"Investor chooses either the liquidation preference or the stock value.\",\r\n    },\r\n    {\r\n      value: \"Participating\",\r\n      label: \"Participating\",\r\n      description:\r\n        \"Received liquidation preference and then participated pro-rata with common shareholders.\",\r\n    },\r\n    {\r\n      value: \"Capped Participating\",\r\n      label: \"Capped Participating\",\r\n      description:\r\n        \"Participation capped at a defined multiple (e.g. total return capped at 3x).\",\r\n    },\r\n    {\r\n      value: \"Participating with Catch-up\",\r\n      label: \"Participating with Catch-up\",\r\n      description:\r\n        \"Common gets paid first to a threshold, then preferred ‘catches up’ before full pro-rata sharing.\",\r\n    },\r\n    {\r\n      value: \"Senior Debt\",\r\n      label: \"Senior Debt\",\r\n      description:\r\n        \"A loan or obligation that takes repayment priority over other debts in the event of bankruptcy.\",\r\n    },\r\n    {\r\n      value: \"Common Debt\",\r\n      label: \"Common Debt\",\r\n      description:\r\n        \"A loan or obligation that takes secondary repayment priority over other senior debts in the event of bankruptcy.\",\r\n    },\r\n    {\r\n      value: \"N/A\",\r\n      label: \"N/A\",\r\n      description: \"Does not apply to this round.\",\r\n    },\r\n    {\r\n      value: \"OTHER\",\r\n      label: \"Other\",\r\n      description: \"Custom response entered by the company.\",\r\n    },\r\n  ];\r\n\r\n  //getallcountrySymbolList\r\n  useEffect(() => {\r\n    getallcountrySymbolList();\r\n  }, []);\r\n  const getallcountrySymbolList = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlRound + \"getallcountrySymbolList\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n\r\n      var respo = res.data.results;\r\n\r\n      setCountrysymbollist(respo);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n    }\r\n  };\r\n  const handleReviewpage = () => {\r\n    setsuccessMsg(\r\n      \"Please review all the information carefully before submitting. Once submitted, it can be officially recorded.\"\r\n    );\r\n    setIsReviewing(true); // show confirm button\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    setsuccessMsg(\"\"); // clear review message\r\n    setIsReviewing(false); // hide confirm button\r\n    await handleSubmit(); // submit form once\r\n  };\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"fullpage d-block\">\r\n        <div className=\"d-flex align-items-start gap-0\">\r\n          <ModuleSideNav\r\n            isCollapsed={isCollapsed}\r\n            setIsCollapsed={setIsCollapsed}\r\n          />\r\n          <div\r\n            className={`global_view ${isCollapsed ? \"global_view_col\" : \"\"}`}\r\n          >\r\n            <TopBar />\r\n            <SectionWrapper className=\"d-block p-4\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"d-flex flex-column gap-4\">\r\n                  {errorMsg && (\r\n                    <Alertpopup\r\n                      message={errorMsg}\r\n                      onClose={() => seterrorMsg(\"\")}\r\n                    />\r\n                  )}\r\n                  {messageAll && (\r\n                    <p\r\n                      className={errr ? \" mt-3 error_pop\" : \"success_pop mt-3\"}\r\n                    >\r\n                      {messageAll}\r\n                    </p>\r\n                  )}\r\n                  {successMsg && (\r\n                    // <Alertpopupsuccess\r\n                    //   message={successMsg}\r\n                    //   onClose={() => setsuccessMsg(\"\")}\r\n                    // />\r\n                    <DangerAlertPopup\r\n                      message={successMsg}\r\n                      onConfirm={handleConfirm}\r\n                      onCancel={() => {\r\n                        setsuccessMsg(\"\");\r\n                      }}\r\n                    />\r\n                  )}\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <div className=\"pb-3 bar_design\">\r\n                      <h4 className=\"h5 mb-0\">Create New Record Round</h4>\r\n                    </div>\r\n                    {/* <div className=\"d-flex gap-2\">\r\n                      <button className=\"close_btn w-fit\">Save Draft</button>\r\n                      <button\r\n                        className=\"global_btn w-fit\"\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        Create Round\r\n                      </button>\r\n                    </div> */}\r\n                  </div>\r\n\r\n                  <div className=\"mb-4 dashboard_card\">\r\n                    <div class=\"progress-container pt-3\">\r\n                      <div class=\"progress-info\">\r\n                        <div class=\"progress-label\">Progress</div>\r\n                        <div class=\"progress-value\">\r\n                          {progressWidth}% Complete\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"progress-bar\">\r\n                        <div\r\n                          class=\"progress-fill\"\r\n                          style={{ width: `${progressWidth}%` }}\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Section Navigation */}\r\n                  <div className=\"mb-4 \">\r\n                    <div className=\"d-flex flex-wrap gap-2\">\r\n                      {sections.map((section) => (\r\n                        <button\r\n                          key={section.id}\r\n                          className={`btn ${\r\n                            activeSection === section.id\r\n                              ? \"select_btn_active\"\r\n                              : \"select_btn\"\r\n                          } rounded-pill`}\r\n                        >\r\n                          {section.title}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Form Sections */}\r\n                  <form method=\"post\" action=\"javascript:void(0)\">\r\n                    <div className=\"from_quation\">\r\n                      {/* Share Class Section */}\r\n                      {activeSection === \"shareclass\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <h3 className=\"h5 mb-4 text-gray-800\">Share Class</h3>\r\n\r\n                          {/* Name of Round Field */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Name of Round{\" \"}\r\n                              <span className=\"text-danger fs-5\">*</span>\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Enter round name (e.g., Series A, Seed Round)\"\r\n                              value={formData.nameOfRound}\r\n                              onChange={(e) => {\r\n                                handleInputChange(\r\n                                  \"nameOfRound\",\r\n                                  e.target.value\r\n                                );\r\n                                // Clear error when user starts typing\r\n                                if (errors.nameOfRound) {\r\n                                  setErrors((prev) => ({\r\n                                    ...prev,\r\n                                    nameOfRound: \"\",\r\n                                  }));\r\n                                }\r\n                              }}\r\n                              className={`textarea_input ${\r\n                                errors.nameOfRound ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              maxLength={30}\r\n                            />\r\n                            <div className=\"d-flex justify-content-between align-items-center mt-1\">\r\n                              <div className=\"form-text\">\r\n                                {formData.nameOfRound.length}/30 characters\r\n                              </div>\r\n                              {errors.nameOfRound && (\r\n                                <div className=\"text-danger small\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.nameOfRound}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Share Class Type Field */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              Select Share Class Type\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  Share class refers to different types of\r\n                                  ownership in a startup, each tailored to the\r\n                                  people investing or contributing at various\r\n                                  stages. It helps define who gets what—how much\r\n                                  ownership, what voting power, and what\r\n                                  priority in payouts.\r\n                                  <br />\r\n                                  For example, Founder Shares typically reward\r\n                                  early involvement and risk, often extended to\r\n                                  family and friends. Advisor Shares compensate\r\n                                  strategic contributors without full-time\r\n                                  roles. Pre-Seed to Seed Extension rounds\r\n                                  involve early investors betting on potential,\r\n                                  often with convertible securities.\r\n                                  <br />\r\n                                  Series A to Series D, including their\r\n                                  Extensions, mark institutional growth phases\r\n                                  with increasing valuation, governance\r\n                                  oversight, and negotiation power.\r\n                                  <br />\r\n                                  A Bridge Round is interim financing,\r\n                                  maintaining momentum between significant\r\n                                  raises or hitting milestones before the next\r\n                                  round.\r\n                                  <br />\r\n                                  Selecting the right share class aligns equity\r\n                                  distribution with strategic intent, investor\r\n                                  expectations, and long-term capitalization\r\n                                  planning.\r\n                                </div>\r\n                              </span>\r\n                              <span className=\"text-danger fs-5 ms-1\">*</span>\r\n                              {errors.shareClassType && (\r\n                                <span className=\"text-danger small ms-2\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.shareClassType}\r\n                                </span>\r\n                              )}\r\n                            </label>\r\n\r\n                            <div className=\"row mt-3\">\r\n                              {options.map((opt) => (\r\n                                <div key={opt} className=\"col-md-6 mb-3\">\r\n                                  <div\r\n                                    className={`form-check-card p-3 border rounded-3 cursor-pointer h-100 ${\r\n                                      selected === opt\r\n                                        ? \" bg-light\"\r\n                                        : \"border-gray-300\"\r\n                                    } ${\r\n                                      errors.shareClassType\r\n                                        ? \"border-danger\"\r\n                                        : \"\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                      setSelected(opt);\r\n\r\n                                      // Update shareClassType\r\n                                      handleInputChange(\r\n                                        \"shareClassType\",\r\n                                        opt === \"OTHER\"\r\n                                          ? formData.shareclassother\r\n                                          : opt\r\n                                      );\r\n\r\n                                      // Reset custom input if not OTHER\r\n                                      if (opt !== \"OTHER\") {\r\n                                        handleInputChange(\r\n                                          \"shareclassother\",\r\n                                          \"\"\r\n                                        );\r\n                                      }\r\n\r\n                                      // Clear errors\r\n                                      if (\r\n                                        errors.shareClassType ||\r\n                                        errors.shareclassother\r\n                                      ) {\r\n                                        setErrors((prev) => ({\r\n                                          ...prev,\r\n                                          shareClassType: \"\",\r\n                                          shareclassother: \"\",\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"form-check\">\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        name=\"shareClassType\"\r\n                                        value={opt}\r\n                                        checked={selected === opt}\r\n                                        onChange={() => {\r\n                                          setSelected(opt);\r\n\r\n                                          handleInputChange(\r\n                                            \"shareClassType\",\r\n                                            opt === \"OTHER\"\r\n                                              ? formData.shareclassother\r\n                                              : opt\r\n                                          );\r\n\r\n                                          if (opt !== \"OTHER\")\r\n                                            handleInputChange(\r\n                                              \"shareclassother\",\r\n                                              \"\"\r\n                                            );\r\n\r\n                                          if (\r\n                                            errors.shareClassType ||\r\n                                            errors.shareclassother\r\n                                          ) {\r\n                                            setErrors((prev) => ({\r\n                                              ...prev,\r\n                                              shareClassType: \"\",\r\n                                              shareclassother: \"\",\r\n                                            }));\r\n                                          }\r\n                                        }}\r\n                                        className=\"form-check-input\"\r\n                                      />\r\n                                      <label className=\"form-check-label fw-medium\">\r\n                                        {opt}\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Conditional Field for OTHER option */}\r\n                          {selected === \"OTHER\" && (\r\n                            <div className=\"mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Custom Share Class Name\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter custom share class name\"\r\n                                value={formData.shareclassother}\r\n                                onChange={(e) =>\r\n                                  handleInputChange(\r\n                                    \"shareclassother\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                                className={`form-control ${\r\n                                  errors.shareclassother ? \"is-invalid\" : \"\"\r\n                                }`}\r\n                                maxLength={30}\r\n                              />\r\n                              <div className=\"form-text\">\r\n                                {formData.shareclassother.length}/30 characters\r\n                              </div>\r\n                              {errors.shareclassother && (\r\n                                <div className=\"text-danger small\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.shareclassother}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Next Button with Validation */}\r\n                          <div className=\"d-flex justify-content-end \">\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                // Validate before proceeding\r\n                                const newErrors = {};\r\n\r\n                                if (!formData.nameOfRound.trim()) {\r\n                                  newErrors.nameOfRound =\r\n                                    \"This field is required\";\r\n                                }\r\n\r\n                                if (!selected) {\r\n                                  newErrors.shareClassType =\r\n                                    \"Please select a share class type\";\r\n                                }\r\n                                if (selected === \"OTHER\") {\r\n                                  if (!formData.shareclassother.trim()) {\r\n                                    newErrors.shareclassother =\r\n                                      \"This field is required\";\r\n                                  }\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"description\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Description Section */}\r\n                      {activeSection === \"description\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          {/* Show previous section data */}\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\"shareclass\"]}\r\n                          />\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Description{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> A strategic\r\n                                  summary that links the equity class to its\r\n                                  purpose, issuance context, and recipient\r\n                                  group.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> Investors use\r\n                                  this to understand the logic behind each\r\n                                  class, e.g. who holds it, under what\r\n                                  conditions it was granted.\r\n                                  <br />\r\n                                  <strong>How to fill it:</strong> Detail the\r\n                                  rationale and stakeholders behind issuance.\r\n                                  Think of this as the “why” behind the class.\r\n                                  For example:\r\n                                  <br />– Reserved for key hires under Employee\r\n                                  Stock Option Pool\r\n                                  <br />– Issued to seed investors during SAFE\r\n                                  conversion in 2022\r\n                                  <br />– Created for strategic Gulf partner\r\n                                  with board observer rights\r\n                                </div>\r\n                              </span>\r\n                              <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <textarea\r\n                              placeholder=\"Enter the strategic description of your round...\"\r\n                              className={`textarea_input ${\r\n                                errors.description ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              rows=\"6\"\r\n                              value={formData.description}\r\n                              onChange={(e) => {\r\n                                handleInputChange(\r\n                                  \"description\",\r\n                                  e.target.value\r\n                                );\r\n                                if (errors.description)\r\n                                  setErrors((prev) => ({\r\n                                    ...prev,\r\n                                    description: \"\",\r\n                                  }));\r\n                              }}\r\n                            />\r\n                            {errors.description && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.description}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          <div className=\"d-flex justify-content-between pt-3 w-100 border-top gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"shareclass\")}\r\n                            >\r\n                              <i className=\"bi bi-arrow-left me-2\"></i>Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                if (!formData.description.trim()) {\r\n                                  setErrors({\r\n                                    ...errors,\r\n                                    description: \"This field is required\",\r\n                                  });\r\n                                } else {\r\n                                  setErrors({ ...errors, description: \"\" });\r\n                                  setActiveSection(\"instrument\"); // next section\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Investment Instrument Section */}\r\n                      {activeSection === \"instrument\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\"shareclass\", \"description\"]}\r\n                          />\r\n\r\n                          {/* Instruction text */}\r\n\r\n                          {/* Instrument selection */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              Select Investment Instrument Type\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>Description:</strong> The type of\r\n                                  equity issued. Common classes include \"Common\r\n                                  Stock\" for founders/employees and \"Preferred\"\r\n                                  shares for investors. Each class has unique\r\n                                  legal treatment.\r\n                                  <br />\r\n                                  <br />\r\n                                  <strong>Why It’s Important:</strong> Signals\r\n                                  investor seniority and expected rights.\r\n                                  <br />\r\n                                  <br /> Helps cap table readers quickly\r\n                                  understand who holds what.\r\n                                  <br />\r\n                                  <br /> Prevents confusion when new rounds\r\n                                  introduce more classes (e.g. Series A, B).\r\n                                  <br />\r\n                                  <br /> Used in legal docs, audits, and future\r\n                                  diligence — consistency matters.\r\n                                </div>\r\n                              </span>\r\n                              <span className=\"text-danger fs-5 ms-1\">*</span>\r\n                              {errors.instrumentType && (\r\n                                <span className=\"text-danger small ms-2\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.instrumentType}\r\n                                </span>\r\n                              )}\r\n                            </label>\r\n\r\n                            <div className=\"row mt-3\">\r\n                              {instrumentOptions.map((opt) => (\r\n                                <div key={opt.value} className=\"col-md-6 mb-3\">\r\n                                  <div\r\n                                    className={`form-check-card p-3 border rounded-3 cursor-pointer h-100 ${\r\n                                      formData.instrumentType === opt.value\r\n                                        ? \" bg-light\"\r\n                                        : \"border-gray-300\"\r\n                                    } ${\r\n                                      errors.instrumentType\r\n                                        ? \"border-danger\"\r\n                                        : \"\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                      handleInputChange(\r\n                                        \"instrumentType\",\r\n                                        opt.value\r\n                                      );\r\n\r\n                                      // Reset customInstrument if not OTHER\r\n                                      if (opt.value !== \"OTHER\")\r\n                                        handleInputChange(\r\n                                          \"customInstrument\",\r\n                                          \"\"\r\n                                        );\r\n\r\n                                      // Clear errors\r\n                                      if (\r\n                                        errors.instrumentType ||\r\n                                        errors.customInstrument\r\n                                      ) {\r\n                                        setErrors((prev) => ({\r\n                                          ...prev,\r\n                                          instrumentType: \"\",\r\n                                          customInstrument: \"\",\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"form-check\">\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        name=\"instrumentType\"\r\n                                        value={opt.value}\r\n                                        checked={\r\n                                          formData.instrumentType === opt.value\r\n                                        }\r\n                                        onChange={() => {\r\n                                          handleInputChange(\r\n                                            \"instrumentType\",\r\n                                            opt.value\r\n                                          );\r\n\r\n                                          if (opt.value !== \"OTHER\")\r\n                                            handleInputChange(\r\n                                              \"customInstrument\",\r\n                                              \"\"\r\n                                            );\r\n\r\n                                          if (\r\n                                            errors.instrumentType ||\r\n                                            errors.customInstrument\r\n                                          ) {\r\n                                            setErrors((prev) => ({\r\n                                              ...prev,\r\n                                              instrumentType: \"\",\r\n                                              customInstrument: \"\",\r\n                                            }));\r\n                                          }\r\n                                        }}\r\n                                        className=\"form-check-input\"\r\n                                      />\r\n                                      <label className=\"form-check-label fw-medium\">\r\n                                        {opt.label}\r\n                                      </label>\r\n                                    </div>\r\n                                    <p className=\"text-muted small mb-0 mt-2\">\r\n                                      {opt.description}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Conditional OTHER input */}\r\n                          {formData.instrumentType === \"OTHER\" && (\r\n                            <div className=\"mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Custom Investment Instrument Name\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter custom investment instrument name\"\r\n                                value={formData.customInstrument || \"\"}\r\n                                onChange={(e) =>\r\n                                  handleInputChange(\r\n                                    \"customInstrument\",\r\n                                    e.target.value\r\n                                  )\r\n                                }\r\n                                className={`form-control ${\r\n                                  errors.customInstrument &&\r\n                                  !formData.customInstrument\r\n                                    ? \"is-invalid\"\r\n                                    : \"\"\r\n                                }`}\r\n                                maxLength={30}\r\n                              />\r\n                              <div className=\"form-text\">\r\n                                {formData.customInstrument\r\n                                  ? formData.customInstrument.length\r\n                                  : 0}\r\n                                /30 characters\r\n                              </div>\r\n                              {errors.customInstrument && (\r\n                                <div className=\"text-danger small\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.customInstrument}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Navigation buttons */}\r\n                          <div className=\"d-flex justify-content-between pt-3 border-top gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"description\")}\r\n                            >\r\n                              <i className=\"bi bi-arrow-left me-2\"></i>Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                if (!formData.instrumentType) {\r\n                                  newErrors.instrumentType =\r\n                                    \"Please select an investment instrument type\";\r\n                                }\r\n                                if (formData.instrumentType === \"OTHER\") {\r\n                                  if (!formData.customInstrument.trim()) {\r\n                                    newErrors.customInstrument =\r\n                                      \"This field is required\";\r\n                                  }\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".border-danger, .is-invalid\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"roundsize\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Round Size Section */}\r\n                      {activeSection === \"roundsize\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                            ]}\r\n                          />\r\n                          <h3 className=\"h5 mb-4 text-gray-800\">Round Size</h3>\r\n                          <div className=\"row align-items-start\">\r\n                            <div className=\"col-md-6 mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Amount{\" \"}\r\n                                <span\r\n                                  className=\"tooltip-icon ms-2\"\r\n                                  tabIndex={0}\r\n                                >\r\n                                  <img\r\n                                    className=\"blackdark\"\r\n                                    width=\"15\"\r\n                                    height=\"15\"\r\n                                    src=\"/assets/user/images/question.png\"\r\n                                    alt=\"Tip\"\r\n                                  />\r\n                                  <div\r\n                                    className=\"tooltip-text tool-test-white text-white\"\r\n                                    role=\"tooltip\"\r\n                                  >\r\n                                    Round size is the total capital an\r\n                                    early-stage company seeks to raise in a\r\n                                    financing round, typically through equity,\r\n                                    SAFEs, or convertible notes, and plays a\r\n                                    critical role in determining ownership\r\n                                    dilution, investor rights, and cap table\r\n                                    structure. It’s the headline number often\r\n                                    seen in investor decks (“We’re raising $2\r\n                                    million in our Seed round”), but beneath\r\n                                    that number sits a complex mix of legal,\r\n                                    strategic, and operational considerations.\r\n                                    Getting it right is essential: raising too\r\n                                    little risks running out of funds before\r\n                                    hitting key milestones, while raising too\r\n                                    much can distort valuations and lead to down\r\n                                    rounds. Smart planning ensures funds last to\r\n                                    the next inflection point, supports\r\n                                    momentum, and protects founder control.\r\n                                  </div>\r\n                                </span>\r\n                                <span className=\"text-danger fs-5\">*</span>\r\n                              </label>\r\n                              <NumericFormat\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                                fixedDecimalScale={true}\r\n                                allowNegative={false}\r\n                                placeholder=\"Enter amount\"\r\n                                value={formData.roundsize}\r\n                                onValueChange={(values) => {\r\n                                  handleInputChange(\"roundsize\", values.value); // raw numeric value (without commas)\r\n                                  if (errors.roundsize) {\r\n                                    setErrors((prev) => ({\r\n                                      ...prev,\r\n                                      roundsize: \"\",\r\n                                    }));\r\n                                  }\r\n                                }}\r\n                                className={`textarea_input ${\r\n                                  errors.roundsize ? \"is-invalid\" : \"\"\r\n                                }`}\r\n                              />\r\n\r\n                              <div className=\"d-flex justify-content-between align-items-center mt-1\">\r\n                                {errors.roundsize && (\r\n                                  <div className=\"text-danger small\">\r\n                                    <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                    {errors.roundsize}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Currency\r\n                              </label>\r\n                              <select\r\n                                className=\"textarea_input\"\r\n                                value={formData.currency}\r\n                                onChange={(e) =>\r\n                                  handleInputChange(\"currency\", e.target.value)\r\n                                }\r\n                              >\r\n                                <option value=\"\">-- Select Currency --</option>\r\n                                {countrySymbolList.map((item) => (\r\n                                  <option\r\n                                    key={item.id}\r\n                                    value={`${item.currency_code} ${item.currency_symbol}`} // 👈 code + symbol\r\n                                  >\r\n                                    {item.currency_code} {item.currency_symbol}\r\n                                  </option>\r\n                                ))}\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between  gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"instrument\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                // Validate before proceeding\r\n                                const newErrors = {};\r\n\r\n                                if (!formData.roundsize.trim()) {\r\n                                  newErrors.roundsize =\r\n                                    \"This field is required\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"issuedshares\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Additional sections would follow the same pattern */}\r\n                      {/* Issued Shares Section */}\r\n                      {activeSection === \"issuedshares\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                            ]}\r\n                          />\r\n                          <h3 className=\"h5 mb-4 text-gray-800\">\r\n                            Specify the total number of shares being issued in\r\n                            this round only\r\n                          </h3>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-6  mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Total Shares Issued in this Round{\" \"}\r\n                                <span\r\n                                  className=\"tooltip-icon ms-2\"\r\n                                  tabIndex={0}\r\n                                >\r\n                                  <img\r\n                                    className=\"blackdark\"\r\n                                    width=\"15\"\r\n                                    height=\"15\"\r\n                                    src=\"/assets/user/images/question.png\"\r\n                                    alt=\"Tip\"\r\n                                  />\r\n                                  <div\r\n                                    className=\"tooltip-text tool-test-white text-white\"\r\n                                    role=\"tooltip\"\r\n                                  >\r\n                                    The number of shares in an early-stage\r\n                                    company represents the total units of\r\n                                    ownership authorized, issued, or outstanding\r\n                                    across the cap table, and serves as the\r\n                                    fundamental denominator for equity\r\n                                    allocation, valuation modeling, and investor\r\n                                    negotiations. At its core, share count\r\n                                    affects percentage ownership, dilution\r\n                                    outcomes, and legal entitlements such as\r\n                                    voting power and liquidation preferences.\r\n                                    Startups typically begin with a set number\r\n                                    of authorized shares (e.g. 10 million) —\r\n                                    often arbitrary but chosen to facilitate\r\n                                    clean math and flexibility for future\r\n                                    allocations like option pools or new rounds.\r\n                                  </div>\r\n                                </span>\r\n                                <span className=\"text-danger\">*</span>\r\n                              </label>\r\n                              <NumericFormat\r\n                                thousandSeparator={true}\r\n                                decimalScale={2}\r\n                                fixedDecimalScale={true}\r\n                                allowNegative={false}\r\n                                placeholder=\"Enter # of shares\"\r\n                                value={formData.issuedshares}\r\n                                onValueChange={(values) => {\r\n                                  handleInputChange(\r\n                                    \"issuedshares\",\r\n                                    values.value\r\n                                  ); // raw numeric value (without commas)\r\n                                  if (errors.issuedshares) {\r\n                                    setErrors((prev) => ({\r\n                                      ...prev,\r\n                                      issuedshares: \"\",\r\n                                    }));\r\n                                  }\r\n                                }}\r\n                                className={`textarea_input ${\r\n                                  errors.issuedshares ? \"is-invalid\" : \"\"\r\n                                }`}\r\n                              />\r\n                              <div className=\"d-flex justify-content-between align-items-center mt-1\">\r\n                                {errors.issuedshares && (\r\n                                  <div className=\"text-danger small\">\r\n                                    <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                    {errors.issuedshares}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Date Round Closed{\" \"}\r\n                                <span className=\"text-danger\">*</span>\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                placeholder=\"MM/DD/YYYY or ROUND OPEN\"\r\n                                value={formData.dateroundclosed}\r\n                                onChange={(e) => {\r\n                                  handleInputChange(\r\n                                    \"dateroundclosed\",\r\n                                    e.target.value\r\n                                  );\r\n\r\n                                  if (errors.dateroundclosed) {\r\n                                    setErrors((prev) => ({\r\n                                      ...prev,\r\n                                      dateroundclosed: \"\",\r\n                                    }));\r\n                                  }\r\n                                }}\r\n                                className={`textarea_input ${\r\n                                  errors.dateroundclosed ? \"is-invalid\" : \"\"\r\n                                }`}\r\n                              />\r\n                              {errors.dateroundclosed && (\r\n                                <div className=\"text-danger small mt-1\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.dateroundclosed}\r\n                                </div>\r\n                              )}\r\n                              <div className=\"form-text\">\r\n                                Calendar: MM / DD / YYYY. If round not closed,\r\n                                type \"ROUND OPEN\".\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"roundsize\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                // Validate issuedshares\r\n                                if (!formData.issuedshares.trim()) {\r\n                                  newErrors.issuedshares =\r\n                                    \"This field is required\";\r\n                                }\r\n\r\n                                // Validate dateroundclosed\r\n                                const dateRegex =\r\n                                  /^(0[1-9]|1[0-2])\\/(0[1-9]|[12]\\d|3[01])\\/\\d{4}$/; // MM/DD/YYYY\r\n                                const inputValue =\r\n                                  formData.dateroundclosed.trim();\r\n\r\n                                if (!inputValue) {\r\n                                  newErrors.dateroundclosed =\r\n                                    \"This field is required\";\r\n                                } else if (\r\n                                  inputValue.toUpperCase() !== \"ROUND OPEN\"\r\n                                ) {\r\n                                  if (!dateRegex.test(inputValue)) {\r\n                                    newErrors.dateroundclosed =\r\n                                      'Enter a valid date (MM/DD/YYYY) or type \"ROUND OPEN\"';\r\n                                  } else {\r\n                                    // Check if date is today or in the future\r\n                                    const [month, day, year] = inputValue\r\n                                      .split(\"/\")\r\n                                      .map(Number);\r\n                                    const inputDate = new Date(\r\n                                      year,\r\n                                      month - 1,\r\n                                      day\r\n                                    );\r\n                                    const today = new Date();\r\n                                    today.setHours(0, 0, 0, 0); // ignore time\r\n\r\n                                    if (inputDate < today) {\r\n                                      newErrors.dateroundclosed =\r\n                                        \"Date cannot be in the past\";\r\n                                    }\r\n                                  }\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"rights\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Placeholder for remaining sections - would implement similarly */}\r\n                      {activeSection === \"rights\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                            ]}\r\n                          />\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Rights Associated with this Share Class{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> Specifies the\r\n                                  negotiated powers and entitlements that\r\n                                  holders of this class enjoy — it’s the fine\r\n                                  print investors care about.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> This defines\r\n                                  control dynamics, dividend rights, conversion\r\n                                  triggers, redemption clauses, anti-dilution,\r\n                                  etc. It’s the architecture of deal terms.\r\n                                  <br />\r\n                                  <strong>How to fill it:</strong> Reference\r\n                                  exact clauses from investor agreements (term\r\n                                  sheets or subscription documents) and simplify\r\n                                  into readable but accurate summaries.\r\n                                  <br />– Non-cumulative dividends at 6%\r\n                                  annually\r\n                                  <br />– Automatic conversion on qualified\r\n                                  financing &gt;$5M\r\n                                  <br />– Protective provisions for mergers,\r\n                                  board expansion, and budget approvals\r\n                                </div>\r\n                              </span>\r\n                            </label>\r\n                            <textarea\r\n                              placeholder=\"Describe the rights and preferences for this share class\"\r\n                              className=\"textarea_input\"\r\n                              rows=\"4\"\r\n                              value={formData.rights}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\"rights\", e.target.value)\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"issuedshares\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"liquidation\")}\r\n                            >\r\n                              Next: Liquidation Preference\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {activeSection === \"liquidation\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                            ]}\r\n                          />\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Liquidation Preference Details{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> Establishes the\r\n                                  order and magnitude of payouts if the company\r\n                                  is sold or dissolved.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> Investors\r\n                                  look here to understand downside protection\r\n                                  and exit expectations — it’s one of the most\r\n                                  scrutinized clauses during fundraising.\r\n                                  <br />\r\n                                  <strong>How to fill it:</strong> Clearly\r\n                                  outline whether it’s non-participating (just\r\n                                  the preference) or participating (preference +\r\n                                  pro-rata share), and how it stacks with other\r\n                                  rounds.\r\n                                </div>\r\n                              </span>\r\n                            </label>\r\n                            <textarea\r\n                              placeholder=\"Describe the liquidation preference\"\r\n                              className=\"textarea_input\"\r\n                              rows=\"4\"\r\n                              value={formData.liquidationpreferences}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  \"liquidationpreferences\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            />\r\n                            <div className=\"row mt-3\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Liquidation Participating{\" \"}\r\n                                <span className=\"text-danger\">*</span>\r\n                              </label>\r\n                              {liquidationOptions.map((opt) => (\r\n                                <div key={opt.value} className=\"col-md-6 mb-3\">\r\n                                  <div\r\n                                    className={`form-check-card p-3 border rounded-3 cursor-pointer h-100 ${\r\n                                      formData.liquidation.includes(opt.value)\r\n                                        ? \" bg-light\"\r\n                                        : \"border-gray-300\"\r\n                                    } ${\r\n                                      errors.liquidation ? \"border-danger\" : \"\"\r\n                                    }`}\r\n                                    onClick={() => {\r\n                                      let updatedSelection = [\r\n                                        ...formData.liquidation,\r\n                                      ];\r\n\r\n                                      if (opt.value === \"N/A\") {\r\n                                        // If N/A is selected, clear all others\r\n                                        updatedSelection = [\"N/A\"];\r\n                                      } else if (opt.value === \"OTHER\") {\r\n                                        // Remove N/A if OTHER is selected\r\n                                        updatedSelection =\r\n                                          updatedSelection.filter(\r\n                                            (v) => v !== \"N/A\"\r\n                                          );\r\n                                        if (\r\n                                          !updatedSelection.includes(\"OTHER\")\r\n                                        ) {\r\n                                          updatedSelection.push(\"OTHER\");\r\n                                        } else {\r\n                                          updatedSelection =\r\n                                            updatedSelection.filter(\r\n                                              (v) => v !== \"OTHER\"\r\n                                            );\r\n                                        }\r\n                                      } else {\r\n                                        // Remove N/A if any normal option is selected\r\n                                        updatedSelection =\r\n                                          updatedSelection.filter(\r\n                                            (v) => v !== \"N/A\"\r\n                                          );\r\n\r\n                                        if (\r\n                                          updatedSelection.includes(opt.value)\r\n                                        ) {\r\n                                          updatedSelection =\r\n                                            updatedSelection.filter(\r\n                                              (v) => v !== opt.value\r\n                                            );\r\n                                        } else {\r\n                                          updatedSelection.push(opt.value);\r\n                                        }\r\n                                      }\r\n\r\n                                      handleInputChange(\r\n                                        \"liquidation\",\r\n                                        updatedSelection\r\n                                      );\r\n\r\n                                      if (errors.liquidation) {\r\n                                        setErrors((prev) => ({\r\n                                          ...prev,\r\n                                          liquidation: \"\",\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"form-check\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        name=\"liquidation\"\r\n                                        value={opt.value}\r\n                                        checked={formData.liquidation.includes(\r\n                                          opt.value\r\n                                        )}\r\n                                        onChange={() => {}}\r\n                                        className=\"form-check-input\"\r\n                                      />\r\n                                      <label className=\"form-check-label fw-medium\">\r\n                                        {opt.label}\r\n                                      </label>\r\n                                    </div>\r\n                                    <p className=\"text-muted small mb-0 mt-2\">\r\n                                      {opt.description}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n\r\n                              {formData.liquidation.includes(\"OTHER\") && (\r\n                                <div className=\"mb-4\">\r\n                                  <label className=\"form-label fw-semibold\">\r\n                                    Custom Liquidation Participating:\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter custom response\"\r\n                                    value={formData.liquidationOther}\r\n                                    onChange={(e) => {\r\n                                      handleInputChange(\r\n                                        \"liquidationOther\",\r\n                                        e.target.value\r\n                                      );\r\n                                      if (errors.liquidationOther) {\r\n                                        setErrors((prev) => ({\r\n                                          ...prev,\r\n                                          liquidationOther: \"\",\r\n                                        }));\r\n                                      }\r\n                                    }}\r\n                                    className={`form-control ${\r\n                                      errors.liquidationOther\r\n                                        ? \"is-invalid\"\r\n                                        : \"\"\r\n                                    }`}\r\n                                  />\r\n\r\n                                  {errors.liquidationOther && (\r\n                                    <div className=\"text-danger small\">\r\n                                      <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                      {errors.liquidationOther}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"rights\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                // Validate before proceeding\r\n                                const newErrors = {};\r\n\r\n                                if (!formData.liquidation) {\r\n                                  newErrors.liquidation =\r\n                                    \"Please select a liquidation participating type\";\r\n                                }\r\n\r\n                                if (formData.liquidation.includes(\"OTHER\")) {\r\n                                  if (!formData.liquidationOther.trim()) {\r\n                                    newErrors.liquidationOther =\r\n                                      \"This field is required\";\r\n                                  }\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"convertible\");\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {activeSection === \"convertible\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                            ]}\r\n                          />\r\n\r\n                          {/* YES / NO - Shares Convertible */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Shares are convertible{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> Indicate the\r\n                                  conditions under which the security, typically\r\n                                  a convertible note or SAFE, automatically or\r\n                                  optionally converts into another class of\r\n                                  shares, most commonly Common Stock.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> Impacts\r\n                                  equity dilution, IPO readiness, and governance\r\n                                  transitions. This is key in modelling cap\r\n                                  table evolution.\r\n                                  <br />\r\n                                  <strong>How to fill it:</strong> Yes/No +\r\n                                  trigger mechanisms (voluntary, automatic,\r\n                                  conditional)\r\n                                </div>\r\n                              </span>{\" \"}\r\n                              <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div className=\"d-flex gap-3\">\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"convertible\"\r\n                                  value=\"Yes\"\r\n                                  checked={formData.convertible === \"Yes\"}\r\n                                  onChange={() => {\r\n                                    handleInputChange(\"convertible\", \"Yes\");\r\n                                    if (errors.convertible) {\r\n                                      setErrors((prev) => ({\r\n                                        ...prev,\r\n                                        convertible: \"\",\r\n                                      }));\r\n                                    }\r\n                                  }}\r\n                                  className={`form-check-input ${\r\n                                    errors.convertible ? \"is-invalid\" : \"\"\r\n                                  }`}\r\n                                />\r\n                                <label className=\"form-check-label\">Yes</label>\r\n                              </div>\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"convertible\"\r\n                                  value=\"No\"\r\n                                  checked={formData.convertible === \"No\"}\r\n                                  onChange={() => {\r\n                                    handleInputChange(\"convertible\", \"No\");\r\n                                    if (errors.convertible) {\r\n                                      setErrors((prev) => ({\r\n                                        ...prev,\r\n                                        convertible: \"\",\r\n                                      }));\r\n                                    }\r\n                                  }}\r\n                                  className={`form-check-input ${\r\n                                    errors.convertible ? \"is-invalid\" : \"\"\r\n                                  }`}\r\n                                />\r\n                                <label className=\"form-check-label\">No</label>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {errors.convertible && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.convertible}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Show only if YES */}\r\n                          {formData.convertible === \"Yes\" && (\r\n                            <div className=\"mb-4\">\r\n                              <label className=\"form-label fw-semibold\">\r\n                                Convertible Type{\" \"}\r\n                                <span className=\"text-danger\">*</span>\r\n                              </label>\r\n                              <div className=\"row mt-2\">\r\n                                {[\"Voluntary\", \"Automatic\", \"Conditional\"].map(\r\n                                  (opt) => (\r\n                                    <div key={opt} className=\"col-md-4 mb-3\">\r\n                                      <div\r\n                                        className={`form-check-card p-3 border rounded-3 cursor-pointer h-100 ${\r\n                                          formData.convertibleType === opt\r\n                                            ? \" bg-light\"\r\n                                            : errors.convertibleType\r\n                                            ? \"border-danger\"\r\n                                            : \"border-gray-300\"\r\n                                        }`}\r\n                                        onClick={() => {\r\n                                          handleInputChange(\r\n                                            \"convertibleType\",\r\n                                            opt\r\n                                          );\r\n                                          if (errors.convertibleType) {\r\n                                            setErrors((prev) => ({\r\n                                              ...prev,\r\n                                              convertibleType: \"\",\r\n                                            }));\r\n                                          }\r\n                                        }}\r\n                                      >\r\n                                        <div className=\"form-check\">\r\n                                          <input\r\n                                            type=\"radio\"\r\n                                            name=\"convertibleType\"\r\n                                            value={opt}\r\n                                            checked={\r\n                                              formData.convertibleType === opt\r\n                                            }\r\n                                            onChange={() => {\r\n                                              handleInputChange(\r\n                                                \"convertibleType\",\r\n                                                opt\r\n                                              );\r\n                                              if (errors.convertibleType) {\r\n                                                setErrors((prev) => ({\r\n                                                  ...prev,\r\n                                                  convertibleType: \"\",\r\n                                                }));\r\n                                              }\r\n                                            }}\r\n                                            className=\"form-check-input\"\r\n                                          />\r\n                                          <label className=\"form-check-label fw-medium\">\r\n                                            {opt}\r\n                                          </label>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n\r\n                              {errors.convertibleType && (\r\n                                <div className=\"text-danger small mt-1\">\r\n                                  <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                  {errors.convertibleType}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"liquidation\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                // validation\r\n                                if (!formData.convertible) {\r\n                                  newErrors.convertible =\r\n                                    \"Please select Yes or No\";\r\n                                }\r\n                                if (\r\n                                  formData.convertible === \"Yes\" &&\r\n                                  !formData.convertibleType\r\n                                ) {\r\n                                  newErrors.convertibleType =\r\n                                    \"Please select Voluntary, Automatic or Conditional\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"voting\"); // move ahead\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {activeSection === \"voting\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                              \"convertible\",\r\n                            ]}\r\n                          />\r\n\r\n                          {/* YES / NO - Shares Convertible */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold\">\r\n                              Shareholders Voting Rights{\" \"}\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  <strong>What it is:</strong> Determines how\r\n                                  much influence equity holders wield in company\r\n                                  decisions, including board appointments,\r\n                                  strategic pivots, and future fundraising.\r\n                                  <br />\r\n                                  <strong>Why it matters:</strong> Control\r\n                                  rights shape governance — founders often trade\r\n                                  economic upside for retaining voting control.\r\n                                </div>\r\n                              </span>{\" \"}\r\n                              <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div className=\"d-flex gap-3\">\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"voting\"\r\n                                  value=\"Yes\"\r\n                                  checked={formData.voting === \"Yes\"}\r\n                                  onChange={() => {\r\n                                    handleInputChange(\"voting\", \"Yes\");\r\n                                    if (errors.voting) {\r\n                                      setErrors((prev) => ({\r\n                                        ...prev,\r\n                                        voting: \"\",\r\n                                      }));\r\n                                    }\r\n                                  }}\r\n                                  className={`form-check-input ${\r\n                                    errors.voting ? \"is-invalid\" : \"\"\r\n                                  }`}\r\n                                />\r\n                                <label className=\"form-check-label\">Yes</label>\r\n                              </div>\r\n                              <div className=\"form-check\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"voting\"\r\n                                  value=\"No\"\r\n                                  checked={formData.voting === \"No\"}\r\n                                  onChange={() => {\r\n                                    handleInputChange(\"voting\", \"No\");\r\n                                    if (errors.voting) {\r\n                                      setErrors((prev) => ({\r\n                                        ...prev,\r\n                                        voting: \"\",\r\n                                      }));\r\n                                    }\r\n                                  }}\r\n                                  className={`form-check-input ${\r\n                                    errors.voting ? \"is-invalid\" : \"\"\r\n                                  }`}\r\n                                />\r\n                                <label className=\"form-check-label\">No</label>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {errors.voting && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.voting}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"convertible\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                // validation\r\n                                if (!formData.voting) {\r\n                                  newErrors.voting = \"Please select Yes or No\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"termsheet\"); // move ahead\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {activeSection === \"termsheet\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                              \"convertible\",\r\n                              \"voting\",\r\n                            ]}\r\n                          />\r\n\r\n                          {/* Upload Term Sheet */}\r\n                          {/* Upload Term Sheet */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              Upload Your Term Sheet(s)\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  A term sheet is a non-binding document that\r\n                                  sets the stage for an investment by outlining\r\n                                  the essential terms of the deal: valuation,\r\n                                  share type, governance rights, investor\r\n                                  protections, and expected post-money\r\n                                  ownership. It is the ‘strategic handshake’\r\n                                  between founders and investors before drafting\r\n                                  legal documents.\r\n                                  <br />\r\n                                  <br />\r\n                                  Investors review it to understand precisely\r\n                                  what they get in return for their capital,\r\n                                  avoiding surprises like excessive dilution or\r\n                                  missing voting rights.\r\n                                  <br />\r\n                                  <br />\r\n                                  Once interest is confirmed, often through\r\n                                  soft-circling, where investors signal informal\r\n                                  commitments based on these outlined terms, the\r\n                                  term sheet forms the backbone for the formal,\r\n                                  binding subscription documents.\r\n                                  <br />\r\n                                  <br />\r\n                                  Formal commitment only happens when investors\r\n                                  sign the Term Sheet and the Subscription\r\n                                  documents and transfer funds, officially\r\n                                  becoming shareholders.\r\n                                </div>\r\n                              </span>\r\n                            </label>\r\n\r\n                            <input\r\n                              type=\"file\"\r\n                              multiple\r\n                              onChange={(e) => {\r\n                                handleInputChange(\r\n                                  \"termsheetFile\",\r\n                                  Array.from(e.target.files)\r\n                                );\r\n                                if (errors.termsheetFile) {\r\n                                  setErrors((prev) => ({\r\n                                    ...prev,\r\n                                    termsheetFile: \"\",\r\n                                  }));\r\n                                }\r\n                              }}\r\n                              className={`textarea_input ${\r\n                                errors.termsheetFile ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                            />\r\n\r\n                            {/* Show selected file names */}\r\n                            {formData.termsheetFile &&\r\n                              formData.termsheetFile.length > 0 && (\r\n                                <ul className=\"mt-2 small text-muted\">\r\n                                  {formData.termsheetFile.map((file, index) => (\r\n                                    <li key={index}>\r\n                                      <strong>{file.name}</strong>\r\n                                    </li>\r\n                                  ))}\r\n                                </ul>\r\n                              )}\r\n\r\n                            {errors.termsheetFile && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.termsheetFile}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"voting\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                if (\r\n                                  !formData.termsheetFile ||\r\n                                  formData.termsheetFile.length === 0\r\n                                ) {\r\n                                  newErrors.termsheetFile =\r\n                                    \"Please upload your file\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"subscription\"); // move ahead\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {activeSection === \"subscription\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                              \"convertible\",\r\n                              \"voting\",\r\n                              \"termsheet\",\r\n                            ]}\r\n                          />\r\n\r\n                          {/* Upload Term Sheet */}\r\n                          {/* Upload Term Sheet */}\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              Upload Your Subscription Document\r\n                              <span className=\"tooltip-icon ms-2\" tabIndex={0}>\r\n                                <img\r\n                                  className=\"blackdark\"\r\n                                  width=\"15\"\r\n                                  height=\"15\"\r\n                                  src=\"/assets/user/images/question.png\"\r\n                                  alt=\"Tip\"\r\n                                />\r\n                                <div\r\n                                  className=\"tooltip-text tool-test-white text-white\"\r\n                                  role=\"tooltip\"\r\n                                >\r\n                                  Subscription documents are the formal, legally\r\n                                  binding agreements that an investor signs to\r\n                                  purchase equity in a company after a term\r\n                                  sheet has been agreed upon. These include the\r\n                                  Subscription Agreement, which outlines how\r\n                                  many shares the investor is buying, at what\r\n                                  price, and under what terms; and are often\r\n                                  accompanied by ancillary documents such as a\r\n                                  Shareholders’ Agreement (covering governance,\r\n                                  exit terms, voting rights), and occasionally\r\n                                  Investor Rights Agreements or Side Letters.\r\n                                  <br />\r\n                                  <br />\r\n                                  Subscription documents legally commit the\r\n                                  investor to the deal and obligate the company\r\n                                  to issue shares in exchange for capital. They\r\n                                  are drafted using the economic and legal terms\r\n                                  defined in the term sheet, meaning they\r\n                                  enforce the handshake that began at the\r\n                                  negotiation stage.\r\n                                  <br />\r\n                                  <br />\r\n                                  Investors must carefully review subscription\r\n                                  documents before signing, as they mark the\r\n                                  transition from informal interest to formal\r\n                                  shareholder status, binding them to the\r\n                                  obligations, rights, and risks of the\r\n                                  investment.\r\n                                </div>\r\n                              </span>\r\n                            </label>\r\n\r\n                            <input\r\n                              type=\"file\"\r\n                              multiple\r\n                              onChange={(e) => {\r\n                                handleInputChange(\r\n                                  \"subscriptiondocument\",\r\n                                  Array.from(e.target.files)\r\n                                );\r\n                                if (errors.subscriptiondocument) {\r\n                                  setErrors((prev) => ({\r\n                                    ...prev,\r\n                                    subscriptiondocument: \"\",\r\n                                  }));\r\n                                }\r\n                              }}\r\n                              className={`textarea_input ${\r\n                                errors.subscriptiondocument ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                            />\r\n\r\n                            {/* Show selected file names */}\r\n                            {formData.subscriptiondocument &&\r\n                              formData.subscriptiondocument.length > 0 && (\r\n                                <ul className=\"mt-2 small text-muted\">\r\n                                  {formData.subscriptiondocument.map(\r\n                                    (file, index) => (\r\n                                      <li key={index}>\r\n                                        <strong>{file.name}</strong>\r\n                                      </li>\r\n                                    )\r\n                                  )}\r\n                                </ul>\r\n                              )}\r\n\r\n                            {errors.subscriptiondocument && (\r\n                              <div className=\"text-danger small mt-1\">\r\n                                <i className=\"bi bi-exclamation-circle me-1\"></i>\r\n                                {errors.subscriptiondocument}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"termsheet\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              onClick={() => {\r\n                                const newErrors = {};\r\n\r\n                                if (\r\n                                  !formData.subscriptiondocument ||\r\n                                  formData.subscriptiondocument.length === 0\r\n                                ) {\r\n                                  newErrors.subscriptiondocument =\r\n                                    \"Please upload your file\";\r\n                                }\r\n\r\n                                if (Object.keys(newErrors).length > 0) {\r\n                                  setErrors(newErrors);\r\n\r\n                                  // Scroll to first error\r\n                                  setTimeout(() => {\r\n                                    const firstErrorElement =\r\n                                      document.querySelector(\r\n                                        \".is-invalid, .border-danger\"\r\n                                      );\r\n                                    if (firstErrorElement) {\r\n                                      firstErrorElement.scrollIntoView({\r\n                                        behavior: \"smooth\",\r\n                                        block: \"center\",\r\n                                      });\r\n                                    }\r\n                                  }, 100);\r\n                                } else {\r\n                                  setErrors({});\r\n                                  setActiveSection(\"notes\"); // move ahead\r\n                                }\r\n                              }}\r\n                            >\r\n                              Save and Continue\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {activeSection === \"notes\" && (\r\n                        <div className=\"section-content p-4 border rounded-3 shadow-sm bg-white\">\r\n                          <PreviousSection\r\n                            formData={formData}\r\n                            otherText={otherText}\r\n                            selected={selected}\r\n                            visibleFields={[\r\n                              \"shareclass\",\r\n                              \"description\",\r\n                              \"instrument\",\r\n                              \"roundsize\",\r\n                              \"issuedshares\",\r\n                              \"rights\",\r\n                              \"liquidation\",\r\n                              \"convertible\",\r\n                              \"voting\",\r\n                              \"termsheet\",\r\n                              \"subscription\",\r\n                            ]}\r\n                          />\r\n\r\n                          <div className=\"mb-4\">\r\n                            <label className=\"form-label fw-semibold d-flex align-items-center\">\r\n                              General Notes About the Round\r\n                            </label>\r\n\r\n                            <textarea\r\n                              placeholder=\"Enter here...\"\r\n                              className=\"textarea_input\"\r\n                              rows=\"4\"\r\n                              value={formData.generalnotes}\r\n                              onChange={(e) =>\r\n                                handleInputChange(\r\n                                  \"generalnotes\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Footer Buttons */}\r\n                          <div className=\"d-flex justify-content-between gap-2\">\r\n                            <button\r\n                              className=\"close_btn w-fit\"\r\n                              onClick={() => setActiveSection(\"subscription\")}\r\n                            >\r\n                              Back\r\n                            </button>\r\n                            <button\r\n                              className=\"global_btn w-fit\"\r\n                              type=\"button\"\r\n                              onClick={handleReviewpage}\r\n                            >\r\n                              Save\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Add similar sections for the remaining form fields */}\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </SectionWrapper>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n"],"names":["_ref","message","onClose","fade","setFade","useState","useEffect","fadeTimer","setTimeout","closeTimer","clearTimeout","_jsxs","className","role","style","position","top","right","zIndex","minWidth","maxWidth","children","_jsx","type","onClick","Recordround","apiUrlRound","progresswidth","setprogresswidth","countrySymbolList","setCountrysymbollist","errorMsg","seterrorMsg","successMsg","setsuccessMsg","activeSection","setActiveSection","storedUsername","localStorage","getItem","messageAll","setmessageAll","errr","seterrr","userLogin","JSON","parse","errors","setErrors","liquidationOther","nameOfRound","shareClassType","shareclassother","instrumentType","customInstrument","issuedshares","dateroundclosed","liquidation","convertible","convertibleType","voting","termsheetFile","subscriptiondocument","formData","setFormData","liquidationpreferences","description","roundsize","currency","rights","generalnotes","document","title","handleInputChange","field","value","prev","selected","setSelected","otherText","setOtherText","isReviewing","setIsReviewing","sections","id","totalSections","length","activeIndex","findIndex","section","progressWidth","Math","round","getallcountrySymbolList","async","respo","axios","post","headers","Accept","data","results","err","isCollapsed","setIsCollapsed","Wrapper","ModuleSideNav","TopBar","SectionWrapper","Alertpopup","DangerAlertPopup","onConfirm","formDataToSend","FormData","append","forEach","file","window","location","reload","console","error","handleSubmit","onCancel","class","width","map","method","action","placeholder","onChange","e","target","maxLength","tabIndex","height","src","alt","opt","name","checked","newErrors","trim","Object","keys","firstErrorElement","querySelector","scrollIntoView","behavior","block","PreviousSection","visibleFields","rows","label","NumericFormat","thousandSeparator","decimalScale","fixedDecimalScale","allowNegative","onValueChange","values","item","currency_code","currency_symbol","dateRegex","inputValue","toUpperCase","test","month","day","year","split","Number","inputDate","Date","today","setHours","includes","updatedSelection","filter","v","push","multiple","Array","from","files","index","handleReviewpage"],"sourceRoot":""}
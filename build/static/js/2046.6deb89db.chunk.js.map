{"version":3,"file":"static/js/2046.6deb89db.chunk.js","mappings":"8PA+rBA,QArrBA,WACE,IAAIA,EAAS,4CACb,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,KACpCO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,KACpCS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,IAChCW,EAAOC,IAAYZ,EAAAA,EAAAA,UAAS,OAMnCa,EAAAA,EAAAA,YAAU,KACRC,QAAQC,IAAI,qCACWC,WACrB,GAAIP,EAAS,OACbC,GAAW,GACXE,EAAS,MAET,MAAMK,EAAiBC,aAAaC,QAAQ,aACtCC,EAAYH,EAAiBI,KAAKC,MAAML,GAAkB,KAChE,GAAc,OAATG,QAAS,IAATA,IAAAA,EAAWG,GAId,OAHAT,QAAQH,MAAM,qBACdC,EAAS,2BACTF,GAAW,GAIb,IAAIc,EAAW,CACbC,QAASL,EAAUG,IAErBT,QAAQC,IAAI,YAAaS,GAEzB,IACE,MAAME,QAAYC,EAAAA,EAAMC,KAAK/B,EAAS,gBAAiB2B,EAAU,CAC/DK,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAIdC,EADQL,EAAIM,KAAKC,QACKC,KAAKC,GAAWA,EAAOZ,KACnDrB,GAAgBkC,GACTC,IAAQD,EAASL,IAItBjB,QAAQC,IAAI,6CACLqB,IAJLtB,QAAQC,IAAI,wBAAyBgB,GAC9BA,IAKb,CAAE,MAAOO,GAEHA,EAAIC,UACNzB,QAAQH,MAAM,+BAAgC2B,EAAIC,SAASP,MAC3DpB,EAAS,4BACA0B,EAAIE,SACb1B,QAAQH,MAAM,wBAAyB2B,EAAIE,SAC3C5B,EAAS,6BAETE,QAAQH,MAAM,4BAA6B2B,EAAIG,SAC/C7B,EAAS,qBAEb,CAAC,QACCF,GAAW,EACb,GAGFgC,EAAgB,GACf,KAEH7B,EAAAA,EAAAA,YAAU,KACUG,WACZf,EAAY0C,OAAS,IACvB7B,QAAQC,IAAI,oCAAqCd,GACjD2C,IACF,EAGFC,EAAW,GACV,CAAC5C,IAEJ,MAAM2C,EAAgB5B,UACpB,GAAIP,EAAS,OACbC,GAAW,GACXE,EAAS,MAET,MAAMK,EAAiBC,aAAaC,QAAQ,aACtCC,EAAYH,EAAiBI,KAAKC,MAAML,GAAkB,KAChE,GAAc,OAATG,QAAS,IAATA,IAAAA,EAAWG,GAId,OAHAT,QAAQH,MAAM,qBACdD,GAAW,QACXE,EAAS,sBAMX,IAAIY,EAAW,CACbsB,SAHsB,IAAI7C,EAAamB,EAAUG,IACbwB,KAAK,MAGzCtB,QAASL,EAAUG,IAGrBT,QAAQC,IAAI,YAAaS,GAEzB,IACE,MAAME,QAAYC,EAAAA,EAAMC,KAAK/B,EAAS,iBAAkB2B,EAAU,CAChEK,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGpBhB,QAAQC,IAAIW,EAAIM,KAAKC,SACrB,MAAMe,EAAQtB,EAAIM,KAAKC,QACvBlC,EAAciD,EAChB,CAAE,MAAOV,GACHA,EAAIC,UACNzB,QAAQH,MAAM,+BAAgC2B,EAAIC,SAASP,MAC3DpB,EAAS,0BACA0B,EAAIE,SACb1B,QAAQH,MAAM,wBAAyB2B,EAAIE,SAC3C5B,EAAS,6BAETE,QAAQH,MAAM,4BAA6B2B,EAAIG,SAC/C7B,EAAS,qBAEb,CAAC,QACCF,GAAW,EACb,IAGFG,EAAAA,EAAAA,YAAU,KACR,MAAMoC,EAAWC,aAAY,KAC3BC,GAAa,GACZ,KAEH,MAAO,IAAMC,cAAcH,EAAS,GACnC,CAAChD,IAEJ,MAAMkD,EAAcnC,UAClB,MAAMC,EAAiBC,aAAaC,QAAQ,aACtCC,EAAYH,EAAiBI,KAAKC,MAAML,GAAkB,KAEvBG,EAAUG,GAEnD,IAAIC,EAAW,CACbC,QAASL,EAAUG,IAGrB,IAOE,IAAIyB,SANcrB,EAAAA,EAAMC,KAAK/B,EAAS,oBAAqB2B,EAAU,CACnEK,QAAS,CACPC,OAAQ,mBACR,eAAgB,uBAGJE,KAChB5B,EAAY4C,EAAMf,QACpB,CAAE,MAAOK,GACPxB,QAAQH,MAAM2B,EAChB,IAEFzB,EAAAA,EAAAA,YAAU,KACR,MAAMoC,EAAWC,aAAY,KAC3BG,GAAc,GACb,KAEH,MAAO,IAAMD,cAAcH,EAAS,GACnC,CAAChD,IAEJ,MAAMoD,EAAerC,UACnB,MAAMC,EAAiBC,aAAaC,QAAQ,aACtCC,EAAYH,EAAiBI,KAAKC,MAAML,GAAkB,KAEvBG,EAAUG,GACnD,IAAIC,EAAW,CAAEC,QAASL,EAAUG,IAEpC,IACE,MAAMG,QAAYC,EAAAA,EAAMC,KAAK/B,EAAS,oBAAqB2B,EAAU,CACnEK,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGpBxB,EAAaoB,EAAIM,KAAKC,QACxB,CAAE,MAAOK,GAEHA,EAAIC,UACNzB,QAAQH,MAAM,iBAAkB2B,EAAIC,SAASP,MAC7ClB,QAAQH,MAAM,mBAAoB2B,EAAIC,SAASe,SACtChB,EAAIE,QACb1B,QAAQH,MAAM,gBAAiB2B,EAAIE,SAEnC1B,QAAQH,MAAM,iBAAkB2B,EAAIG,QAExC,IAEF5B,EAAAA,EAAAA,YAAU,KACR,MAAMoC,EAAWC,aAAY,KAC3BK,GAAoB,GACnB,MAEH,MAAO,IAAMH,cAAcH,EAAS,GACnC,CAAChD,IACJ,MAAMsD,EAAqBvC,UACzB,MAAMC,EAAiBC,aAAaC,QAAQ,aACtCC,EAAYH,EAAiBI,KAAKC,MAAML,GAAkB,KAGhE,IAAIO,EAAW,CACbsB,SAFsB,IAAI7C,EAAamB,EAAUG,IAGjDE,QAASL,EAAUG,GACnBiC,OAAQ,IAGV,IACE,MAAM9B,QAAYC,EAAAA,EAAMC,KAAK/B,EAAS,qBAAsB2B,EAAU,CACpEK,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGpBtB,EAAakB,EAAIM,KAAKC,QACxB,CAAE,MAAOK,GAEHA,EAAIC,UACNzB,QAAQH,MAAM,iBAAkB2B,EAAIC,SAASP,MAC7ClB,QAAQH,MAAM,mBAAoB2B,EAAIC,SAASe,SACtChB,EAAIE,QACb1B,QAAQH,MAAM,gBAAiB2B,EAAIE,SAEnC1B,QAAQH,MAAM,iBAAkB2B,EAAIG,QAExC,GAEIgB,EAAeC,IACnB,IAAKA,EAAY,OAAO,KAIxB,MAAMC,EAAkBD,EAAWE,QAAQ,KAAM,IAG3CC,EAAWC,EAAAA,GAASC,QAAQJ,EAAiB,CAAEK,KAAM,gBAE3D,IAAKH,EAASI,QAEZ,OADAnD,QAAQH,MAAM,qBAAsBkD,EAASK,oBACtC,eAIT,MAAMC,EAAYN,EAASO,QACzBC,KAAKC,iBAAiBC,kBAAkBC,UAGpCC,EAAeJ,KAAKC,iBAAiBC,kBAAkBC,SAE7D1D,QAAQC,IAAI8C,GACZ,MAAMa,EAAMZ,EAAAA,GAASY,MAAMN,QAAQK,GAC7BE,EAAgBR,EAAUS,SAAS,SAEnCC,EAAgBH,EAAII,KAAKX,EAAW,WAAWY,QAC/CC,EAAcN,EAAII,KAAKX,EAAW,SAASc,MAC3CC,EAAaR,EAAII,KAAKX,EAAW,QAAQgB,KACzCC,EAAcC,KAAKC,MAAMJ,EAAa,GACtCK,EAAeF,KAAKC,MAAMJ,EAAa,IACvCM,EAAcH,KAAKC,MAAMJ,EAAa,KAE5C,OAAIL,EAAgB,IAChBG,EAAc,GADa,GAAGL,IAEH,IAA3BU,KAAKC,MAAMJ,GAA0B,gBAAgBP,IACrDO,EAAa,EAAU,GAAGG,KAAKC,MAAMJ,OAAgBP,IACrDS,EAAc,EAAU,GAAGA,MAAgBT,IAC3CY,EAAe,GAAW,GAAGA,MAAiBZ,IAC3C,GAAGa,MAAgBb,GAAe,EAErCc,EAAkB/B,IACtB,IAAKA,EAAY,OAAO,KAExB,MAAMgC,EAAW,IAAIC,KAAKjC,GACpBkC,EAAU,CAAEpB,SAAU,eAoB5B,MAAO,GAjBekB,EACnBG,mBAAmB,QAAS,CAC3BC,IAAK,UACLC,MAAO,UACPC,KAAM,aACHJ,IAEJhC,QAAQ,MAAO,QAGI8B,EAASO,mBAAmB,QAAS,CACzDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,KACLR,KAGqC,GAEtC,EAAES,IAAMC,EAAAA,EAAAA,OAEdzF,EAAAA,EAAAA,YAAU,KACR,MAAM0F,EAAgBrF,aAAaC,QAAQ,aAAe,KAGtDqF,EAAAA,EAAKC,WAAaF,GACpBC,EAAAA,EAAKE,eAAeH,EACtB,GACC,CAACC,EAAAA,EAAMH,IAEV,MAAOM,EAAcC,IAAmB5G,EAAAA,EAAAA,WAAS,IAC1C6G,EAAuBC,IAA4B9G,EAAAA,EAAAA,UAAS,KAC5D+G,EAAYC,IAAiBhH,EAAAA,EAAAA,UAAS,KACtCiH,EAAgBC,IAAqBlH,EAAAA,EAAAA,UAAS,KAC9CmH,EAAoBC,IAAyBpH,EAAAA,EAAAA,UAAS,KACtDqH,EAAQC,IAAatH,EAAAA,EAAAA,UAAS,KAC9BuH,EAAWC,IAAgBxH,EAAAA,EAAAA,UAAS,KACpCyH,EAAYC,IAAiB1H,EAAAA,EAAAA,UAAS,IAK7C,IAAI2H,EAAe,6CACnB9G,EAAAA,EAAAA,YAAU,KACR,MAAMI,EAAiBC,aAAaC,QAAQ,aACtCC,EAAYH,EAAiBI,KAAKC,MAAML,GAAkB,KAChEuG,EAAapG,GACbwG,GAAe,GACd,IACH,MAAMA,EAAgB5G,UACpB,MAAMC,EAAiBC,aAAaC,QAAQ,aAE5C,IAAIK,EAAW,CACbC,SAFgBR,EAAiBI,KAAKC,MAAML,GAAkB,MAE3CM,IAErB,IACE,MAAMG,QAAYC,EAAAA,EAAMC,KAAK+F,EAAe,gBAAiBnG,EAAU,CACrEK,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGpB,GAAIJ,EAAIM,KAAK6F,IAAIlF,OAAS,EAAG,CAC3B,IAAIK,EAAQtB,EAAIM,KAAK6F,IAAI,GACzBb,EAAchE,EAChB,CACF,CAAE,MAAOV,GAEHA,EAAIC,WACGD,EAAIE,QACb1B,QAAQH,MAAM,gBAAiB2B,EAAIE,SAEnC1B,QAAQH,MAAM,iBAAkB2B,EAAIG,SAExC,GAEIqF,EAAmB9G,UACvBoG,EAAsBW,GACtBC,GAAmBD,GACnBE,EAA6BF,GAC7B,IAAIvG,EAAW,CACbD,GAAIwG,EACJtG,QAAS8F,EAAUhG,IAErB,IACE,MAAMG,QAAYC,EAAAA,EAAMC,KACtB+F,EAAe,mBACfnG,EACA,CACEK,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAItB,GAAIJ,EAAIM,KAAK6F,IAAIlF,OAAS,EAAG,CAC3B,IAAIK,EAAQtB,EAAIM,KAAK6F,IAAI,GAlX7BjB,GAAgB,GAChBsB,SAASC,KAAKC,MAAMC,UAAY,SAmX5BvB,EAAyB9D,EAC3B,CACF,CAAE,MAAOV,GAEHA,EAAIC,WACGD,EAAIE,QACb1B,QAAQH,MAAM,gBAAiB2B,EAAIE,SAEnC1B,QAAQH,MAAM,iBAAkB2B,EAAIG,SAExC,GAEIwF,EAA+BjH,UACnC,IAAIQ,EAAW,CACbD,GAAIwG,EACJtG,QAAS8F,EAAUhG,IAErB,IACE,MAAMG,QAAYC,EAAAA,EAAMC,KACtB+F,EAAe,+BACfnG,EACA,CACEK,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAKW,OAA7BJ,EAAIM,KAAKsG,iBACXZ,EAAchG,EAAIM,KAAKsG,iBAEY,OAAjC5G,EAAIM,KAAKuG,qBACXjB,EAAU5F,EAAIM,KAAKuG,oBAEvB,CAAE,MAAOjG,GAEHA,EAAIC,WACGD,EAAIE,QACb1B,QAAQH,MAAM,gBAAiB2B,EAAIE,SAEnC1B,QAAQH,MAAM,iBAAkB2B,EAAIG,SAExC,GAcIuF,GAAqBhH,UACzB,IAAIQ,EAAW,CACbD,GAAIiH,EACJ/G,QAAS8F,EAAUhG,IAErB,IAQE,IAAIyB,SAPcrB,EAAAA,EAAMC,KAAK/B,EAAS,qBAAsB2B,EAAU,CACpEK,QAAS,CACPC,OAAQ,mBACR,eAAgB,uBAIJE,KAAKC,QAErBiF,EAAkBlE,EACpB,CAAE,MAAOV,GAEHA,EAAIC,WACGD,EAAIE,QACb1B,QAAQH,MAAM,gBAAiB2B,EAAIE,SAEnC1B,QAAQH,MAAM,iBAAkB2B,EAAIG,SAExC,GAIF,OACEgG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KACVD,EAAAA,EAAAA,KAAA,WAASD,UAAU,sBAAqBD,UACtCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,eAAcD,UAC3BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAUD,SAAA,EACvBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,SAAQD,UACrBE,EAAAA,EAAAA,KAAA,MAAAF,SAAKtC,EAAE,kBAETwC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,WAAUD,UACvBF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2BAA0BD,SAAA,EACvCE,EAAAA,EAAAA,KAAA,MAAID,UAAU,8BAA6BD,SACxCtC,EAAE,kBAELwC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iDAAgDD,SACtC,IAAtB7I,EAAW6C,QACVkG,EAAAA,EAAAA,KAAA,SAEA/I,EAAWoC,KAAI,CAAC6G,EAAMC,KAEpB,MAAMC,EAAgBxF,EAAYsF,EAAKG,MACvC,OACET,EAAAA,EAAAA,MAAA,OACEG,UAAU,yDAAwDD,SAAA,EAGlEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,+DAA8DD,SAAA,EAC3EE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC1BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kCAAiCD,SAAA,EAC9CE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeD,UAC5BE,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACHC,GAAI,WAAWL,EAAKtH,UACpB4H,OAAO,SACPT,UAAU,kCAAiCD,UAE3CE,EAAAA,EAAAA,KAAA,OAAKS,MAAM,gBAAeX,UACxBE,EAAAA,EAAAA,KAAA,OAAKS,MAAM,4CAA2CX,SACzB,IAA1BI,EAAKQ,kBACJV,EAAAA,EAAAA,KAAA,OACED,UAAU,cACVY,IAAKC,EAAQ,MACbC,IAAI,aAGNb,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CAACC,IAAKb,EAAKc,kBAMnCpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EAE1BE,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACHC,GAAI,WAAWL,EAAKtH,UACpB4H,OAAO,SACPT,UAAU,kCAAiCD,UAE3CE,EAAAA,EAAAA,KAAA,MAAAF,SAAKI,EAAKe,cAEZjB,EAAAA,EAAAA,KAAA,MAAAF,SAAKM,aAIXJ,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sBAMjBC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACHY,QAASA,IAAMjC,EAAiBiB,EAAKxH,IACrC6H,GAAG,qBACHR,UAAU,+CAA8CD,UAExDE,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CACZC,IAAKb,EAAKiB,MACVpB,UAAU,oBApDTI,EAuDD,YAOlBH,EAAAA,EAAAA,KAAA,OAAKD,UAAU,WAAUD,UACvBF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2BAA0BD,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2BAA0BD,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,wFAAuFD,SAAA,EACpGE,EAAAA,EAAAA,KAAA,MAAID,UAAU,GAAED,SAAEtC,EAAE,oBACpBwC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,aAAaR,UAAU,uBAAsBD,SACnDtC,EAAE,iBAGPwC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,6EAA4ED,SACnE,IAArBpI,EAAUoC,QACTkG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qBAAoBD,UACjCE,EAAAA,EAAAA,KAAA,MAAAF,SAAKtC,EAAE,uBAGT9F,EAAU2B,KAAI,CAAC+H,EAAOjB,KACpBP,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CACHC,GAAI,gBAAgBa,EAAMC,OAC1BtB,UAAU,kCAAiCD,SAAA,EAE3CE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CACZC,IAAKK,EAAMD,MACXpB,UAAU,oCAGdH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,8CAA6CD,SAAA,EAC1DE,EAAAA,EAAAA,KAAA,KAAAF,SAAIlD,EAAewE,EAAME,eACzB1B,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKsB,EAAMG,KAAK,QAChBvB,EAAAA,EAAAA,KAAA,KAAAF,UACEE,EAAAA,EAAAA,KAAA,QAAAF,SAAOsB,EAAMI,8BAQ3B5B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2BAA0BD,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yFAAwFD,SAAA,EACrGE,EAAAA,EAAAA,KAAA,MAAAF,SAAKtC,EAAE,iBACPwC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,aAAaR,UAAU,uBAAsBD,SACnDtC,EAAE,iBAGPwC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,6EAA4ED,SACpE,IAApBxI,EAASwC,QACRkG,EAAAA,EAAAA,KAAA,MAAAF,SAAKtC,EAAE,qBAEPlG,EAAS+B,KAAI,CAAC6G,EAAMC,KAEIvF,EAAYsF,EAAKG,MACvC,OACET,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CACHC,GAAI,iBAAiBL,EAAKmB,OAC1BtB,UAAU,iCAAgCD,SAAA,EAE1CE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAiBD,SAC7BI,EAAKiB,OACJnB,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CAACC,IAAKb,EAAKiB,SAEzBnB,EAAAA,EAAAA,KAAA,OACED,UAAU,+BACVY,IAAKC,EAAQ,MACbC,IAAI,eAIVjB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,8CAA6CD,SAAA,EAC1DE,EAAAA,EAAAA,KAAA,KAAAF,SAAIlD,EAAesD,EAAKG,SACxBL,EAAAA,EAAAA,KAAA,MAAAF,SAAKI,EAAKsB,mBAEP,UAMjB5B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,2BAA0BD,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yFAAwFD,SAAA,EACrGE,EAAAA,EAAAA,KAAA,MAAAF,SAAKtC,EAAE,uBACPwC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAG,YAAYR,UAAU,sBAAqBD,SACjDtC,EAAE,iBAGPwC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,6EAA4ED,SACnE,IAArBtI,EAAUsC,QACTkG,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qBAAoBD,UACjCE,EAAAA,EAAAA,KAAA,MAAAF,SAAKtC,EAAE,8BAGThG,EAAU6B,KAAI,CAAC+H,EAAOjB,KACpBP,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CACHC,GAAI,UAAUa,EAAMC,OACpBtB,UAAU,kCAAiCD,SAAA,EAE3CE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,KAACc,EAAAA,EAAa,CACZC,IAAKK,EAAMD,MACXpB,UAAU,oCAGdH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,8CAA6CD,SAAA,EAC1DE,EAAAA,EAAAA,KAAA,KAAAF,SAAIlD,EAAewE,EAAME,eACzB1B,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKsB,EAAMG,KAAK,QAChBvB,EAAAA,EAAAA,KAAA,KAAAF,UACEE,EAAAA,EAAAA,KAAA,QAAAF,SAAOsB,EAAMI,6CAcvCxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAuB,CACtBC,QAAS5D,EACT6D,SAlWcC,KAClB7D,GAAgB,GAChBsB,SAASC,KAAKC,MAAMC,UAAY,MAAM,EAiWlCxB,sBAAuBA,EACvBE,WAAYA,EACZQ,UAAWA,EACXmD,WA7Pa1J,UACjB8G,EAAiBX,EAAmB,EA6PhCF,eAAgBA,EAChB0D,eA5PiB3J,UACrB8G,EAAiBX,EAAmB,EA4PhCA,mBAAoBA,EACpBM,WAAYA,EACZJ,OAAQA,EACRuD,qBA7PuBA,KAC3B9C,EAAiBT,EAAO,EA6PpBwD,qBA3PuBA,KAC3B/C,EAAiBL,EAAW,MA8PhC,C","sources":["pages/LatestNews.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Headertwo from \"../components/Headertwo\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../i18n\";\r\nimport axios from \"axios\";\r\nimport isEqual from \"lodash/isEqual\";\r\nimport MediaRenderer from \"../components/MediaRenderer\";\r\nimport { Usergallerynotification } from \"../components/Usergallerynotification\";\r\nimport { DateTime } from \"luxon\";\r\nfunction LatestNews() {\r\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\r\n  const [postdetail, setPostdetail] = useState([]);\r\n  const [AllfriendId, setAllfriendId] = useState([]);\r\n  const [allforum, setallforum] = useState([]);\r\n  const [groupData, setgroupData] = useState([]);\r\n  const [eventData, seteventData] = useState([]);\r\n  const [loading, setLoading] = useState(false); // Use state for loading\r\n  const [error, setError] = useState(null);\r\n  const openPopup1 = () => {\r\n    setIsPopupOpen1(true);\r\n    document.body.style.overflowY = \"hidden\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Running useEffect: getAllfriendss\");\r\n    const getAllfriendss = async () => {\r\n      if (loading) return; // Prevent multiple simultaneous calls\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const storedUsername = localStorage.getItem(\"userLogin\");\r\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n      if (!userLogin?.id) {\r\n        console.error(\"User ID not found\");\r\n        setError(\"User not logged in\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      let formData = {\r\n        user_id: userLogin.id,\r\n      };\r\n      console.log(\"FormData:\", formData);\r\n\r\n      try {\r\n        const res = await axios.post(apiUrl + \"getAllfriends\", formData, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const respo = res.data.results;\r\n        const friendUserIds = respo.map((friend) => friend.id);\r\n        setAllfriendId((prevIds) => {\r\n          if (!isEqual(prevIds, friendUserIds)) {\r\n            console.log(\"Updating AllfriendId:\", friendUserIds);\r\n            return friendUserIds;\r\n          }\r\n          console.log(\"No change in AllfriendId, skipping update\");\r\n          return prevIds;\r\n        });\r\n      } catch (err) {\r\n        // Enhanced error handling\r\n        if (err.response) {\r\n          console.error(\"Server responded with error:\", err.response.data);\r\n          setError(\"Failed to fetch friends\");\r\n        } else if (err.request) {\r\n          console.error(\"No response received:\", err.request);\r\n          setError(\"No response from server\");\r\n        } else {\r\n          console.error(\"Error setting up request:\", err.message);\r\n          setError(\"An error occurred\");\r\n        }\r\n      } finally {\r\n        setLoading(false); // Reset loading state\r\n      }\r\n    };\r\n\r\n    getAllfriendss();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (AllfriendId.length > 0) {\r\n        console.log(\"Fetching gallery for AllfriendId:\", AllfriendId);\r\n        getAllgallery();\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [AllfriendId]);\r\n\r\n  const getAllgallery = async () => {\r\n    if (loading) return; // Prevent multiple simultaneous calls\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n    if (!userLogin?.id) {\r\n      console.error(\"User ID not found\");\r\n      setLoading(false);\r\n      setError(\"User not logged in\");\r\n      return;\r\n    }\r\n\r\n    const userIdsWithSelf = [...AllfriendId, userLogin.id]; // e.g., [3, 1, 5]\r\n    const userIdsString = userIdsWithSelf.join(\", \");\r\n    let formData = {\r\n      user_ids: userIdsString,\r\n      user_id: userLogin.id,\r\n    };\r\n\r\n    console.log(\"FormData:\", formData);\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getlastestpost\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      console.log(res.data.results);\r\n      const respo = res.data.results;\r\n      setPostdetail(respo);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error(\"Server responded with error:\", err.response.data);\r\n        setError(\"Failed to fetch posts\");\r\n      } else if (err.request) {\r\n        console.error(\"No response received:\", err.request);\r\n        setError(\"No response from server\");\r\n      } else {\r\n        console.error(\"Error setting up request:\", err.message);\r\n        setError(\"An error occurred\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getAllforum();\r\n    }, 2000); // 1.5 seconds\r\n\r\n    return () => clearInterval(interval); // Cleanup when component unmounts\r\n  }, [AllfriendId]);\r\n\r\n  const getAllforum = async () => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n\r\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\r\n\r\n    let formData = {\r\n      user_id: userLogin.id,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getAllforumLatest\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      var respo = res.data;\r\n      setallforum(respo.results);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getAllgroups();\r\n    }, 2000); // 1.5 seconds\r\n\r\n    return () => clearInterval(interval); // Cleanup when component unmounts\r\n  }, [AllfriendId]);\r\n\r\n  const getAllgroups = async () => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n\r\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\r\n    let formData = { user_id: userLogin.id };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getAllgrouplatest\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      setgroupData(res.data.results);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n        console.error(\"Response data:\", err.response.data);\r\n        console.error(\"Response status:\", err.response.status);\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getAlleventsLatest();\r\n    }, 1500); // Runs every 2 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [AllfriendId]);\r\n  const getAlleventsLatest = async () => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n\r\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\r\n    let formData = {\r\n      user_ids: userIdsWithSelf,\r\n      user_id: userLogin.id,\r\n      search: \"\",\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getAlleventsLatest\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      seteventData(res.data.results);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n        console.error(\"Response data:\", err.response.data);\r\n        console.error(\"Response status:\", err.response.status);\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const formateTime = (dateString) => {\r\n    if (!dateString) return null;\r\n\r\n    // Treat input as a Europe/Oslo time (even though it has 'Z')\r\n    // Remove the 'Z' if it exists\r\n    const cleanDateString = dateString.replace(/Z$/, \"\");\r\n\r\n    // Parse it as if it's Oslo local time (not UTC)\r\n    const osloTime = DateTime.fromISO(cleanDateString, { zone: \"Europe/Oslo\" });\r\n\r\n    if (!osloTime.isValid) {\r\n      console.error(\"Invalid Oslo Time:\", osloTime.invalidExplanation);\r\n      return \"Invalid Date\";\r\n    }\r\n\r\n    // Convert to current system's local timezone\r\n    const localTime = osloTime.setZone(\r\n      Intl.DateTimeFormat().resolvedOptions().timeZone\r\n    );\r\n\r\n    const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\n    console.log(osloTime);\r\n    const now = DateTime.now().setZone(userTimeZone);\r\n    const localPostTime = localTime.toFormat(\"HH:mm\");\r\n\r\n    const diffInMinutes = now.diff(localTime, \"minutes\").minutes;\r\n    const diffInHours = now.diff(localTime, \"hours\").hours;\r\n    const diffInDays = now.diff(localTime, \"days\").days;\r\n    const diffInWeeks = Math.floor(diffInDays / 7);\r\n    const diffInMonths = Math.floor(diffInDays / 30);\r\n    const diffInYears = Math.floor(diffInDays / 365);\r\n\r\n    if (diffInMinutes < 60) return `${localPostTime}`;\r\n    if (diffInHours < 24) return `${localPostTime}`;\r\n    if (Math.floor(diffInDays) === 1) return `Yesterday at ${localPostTime}`;\r\n    if (diffInDays < 7) return `${Math.floor(diffInDays)}d ${localPostTime}`;\r\n    if (diffInWeeks < 4) return `${diffInWeeks}w ${localPostTime}`;\r\n    if (diffInMonths < 12) return `${diffInMonths}m ${localPostTime}`;\r\n    return `${diffInYears}y ${localPostTime}`;\r\n  };\r\n  const formatDateTime = (dateString) => {\r\n    if (!dateString) return null;\r\n\r\n    const postDate = new Date(dateString);\r\n    const options = { timeZone: \"Europe/Oslo\" };\r\n\r\n    // Format date as DD-MM-YYYY (manually replace / with -)\r\n    const formattedDate = postDate\r\n      .toLocaleDateString(\"en-GB\", {\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\",\r\n        ...options,\r\n      })\r\n      .replace(/\\//g, \"-\");\r\n\r\n    // Format time as hh:mm AM/PM\r\n    const formattedTime = postDate.toLocaleTimeString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n      ...options,\r\n    });\r\n\r\n    return `${formattedDate} ${formattedTime}`;\r\n  };\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\r\n\r\n    // Change the language if it's not already the current language\r\n    if (i18n.language !== savedLanguage) {\r\n      i18n.changeLanguage(savedLanguage);\r\n    }\r\n  }, [i18n, t]);\r\n  //Gallery popup\r\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\r\n  const [seperateGallerydetail, setseperateGallerydetail] = useState(\"\");\r\n  const [UserDetail, setUserDetail] = useState(\"\");\r\n  const [GalleryCommets, setGalleryCommets] = useState([]);\r\n  const [GalleryIdDetailGet, setGalleryIdDetailGet] = useState(\"\");\r\n  const [nextId, setnextId] = useState(\"\");\r\n  const [LoginData, setLoginData] = useState(\"\");\r\n  const [previousId, setpreviousId] = useState(\"\");\r\n  const closePopup1 = () => {\r\n    setIsPopupOpen1(false);\r\n    document.body.style.overflowY = \"auto\";\r\n  };\r\n  var apiUrlMember = \"https://backend.amourette.no/api/members/\";\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n    setLoginData(userLogin);\r\n    getUserDetail();\r\n  }, []);\r\n  const getUserDetail = async () => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\r\n    let formData = {\r\n      user_id: userLogin.id,\r\n    };\r\n    try {\r\n      const res = await axios.post(apiUrlMember + \"getUserDetail\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      if (res.data.row.length > 0) {\r\n        var respo = res.data.row[0];\r\n        setUserDetail(respo);\r\n      }\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const getGalleryDetail = async (galleryId) => {\r\n    setGalleryIdDetailGet(galleryId);\r\n    getGalleryComments(galleryId);\r\n    getGalleryDetailnextprevious(galleryId);\r\n    let formData = {\r\n      id: galleryId,\r\n      user_id: LoginData.id,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlMember + \"getGalleryDetail\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n      if (res.data.row.length > 0) {\r\n        var respo = res.data.row[0];\r\n        openPopup1();\r\n        setseperateGallerydetail(respo);\r\n      }\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const getGalleryDetailnextprevious = async (galleryId) => {\r\n    let formData = {\r\n      id: galleryId,\r\n      user_id: LoginData.id,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlMember + \"getGalleryDetailnextprevious\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.data.next_gallery_id !== null) {\r\n        setpreviousId(res.data.next_gallery_id);\r\n      }\r\n      if (res.data.previous_gallery_id !== null) {\r\n        setnextId(res.data.previous_gallery_id);\r\n      }\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const getUserfav = async () => {\r\n    getGalleryDetail(GalleryIdDetailGet);\r\n  };\r\n  const getCommentPost = async () => {\r\n    getGalleryDetail(GalleryIdDetailGet);\r\n  };\r\n  const getgallerydetialnext = () => {\r\n    getGalleryDetail(nextId);\r\n  };\r\n  const getgallerydetialprev = () => {\r\n    getGalleryDetail(previousId);\r\n  };\r\n  const getGalleryComments = async (g_id) => {\r\n    let formData = {\r\n      id: g_id,\r\n      user_id: LoginData.id,\r\n    };\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getGalleryComments\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n\r\n      var respo = res.data.results;\r\n\r\n      setGalleryCommets(respo);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  //Gallery popup\r\n  return (\r\n    <>\r\n      <div className=\"news_main\">\r\n        <Headertwo />\r\n        <section className=\"latest d-block py-5\">\r\n          <div className=\"container-lg\">\r\n            <div className=\"row gy-4\">\r\n              <div className=\"col-12\">\r\n                <h1>{t(\"Latestnew\")}</h1>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"d-flex flex-column gap-3\">\r\n                  <h3 className=\" overflow-hidden  rounded-3\">\r\n                    {t(\"ACTIVITYLOG\")}\r\n                  </h3>\r\n                  <div className=\"d-flex flex-column gap-3 news_back  rounded-3 \">\r\n                    {postdetail.length === 0 ? (\r\n                      <h2></h2>\r\n                    ) : (\r\n                      postdetail.map((item, index) => {\r\n                        // Start from index 1\r\n                        const formattedTime = formateTime(item.date); // Get the formatted time\r\n                        return (\r\n                          <div\r\n                            className=\"postblock d-flex flex-column rounded-3 overflow-hidden\"\r\n                            key={index}\r\n                          >\r\n                            <div className=\"d-flex justify-content-between align-items-center  px-3 py-1\">\r\n                              <div className=\"flex-grow-1\">\r\n                                <div className=\"d-flex gap-2 align-items-center\">\r\n                                  <div className=\"flex-shrink-0\">\r\n                                    <Link\r\n                                      to={`/friend/${item.user_id}`}\r\n                                      target=\"_blank\"\r\n                                      className=\"d-flex gap-2 align-items-center\"\r\n                                    >\r\n                                      <div class=\"flex-shrink-0\">\r\n                                        <div class=\"urpic ofit rounded-circle overflow-hidden\">\r\n                                          {item.makeImagePrivate === 1 ? (\r\n                                            <img\r\n                                              className=\"w-100 h-100\"\r\n                                              src={require(\"../assets/images/thumb.jpg\")} // Default image when image is private\r\n                                              alt=\"userpic\"\r\n                                            />\r\n                                          ) : (\r\n                                            <MediaRenderer url={item.uimage} />\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                    </Link>\r\n                                  </div>\r\n                                  <div className=\"flex-grow-1\">\r\n                                    {/* Conditionally render the text based on formattedTime */}\r\n                                    <Link\r\n                                      to={`/friend/${item.user_id}`}\r\n                                      target=\"_blank\"\r\n                                      className=\"d-flex gap-2 align-items-center\"\r\n                                    >\r\n                                      <h4>{item.username}</h4>\r\n                                    </Link>\r\n                                    <h5>{formattedTime}</h5>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"flex-shrink-0\">\r\n                                {/* <button type=\"button\" className=\"btnoption\">\r\n                                <SlOptions />\r\n                              </button> */}\r\n                              </div>\r\n                            </div>\r\n                            <Link\r\n                              onClick={() => getGalleryDetail(item.id)}\r\n                              to=\"javascript:void(0)\"\r\n                              className=\"imgblock ofit rounded-3 overflow-hidden mt-2\"\r\n                            >\r\n                              <MediaRenderer\r\n                                url={item.image}\r\n                                className=\"w-100 h-100\"\r\n                              />\r\n                            </Link>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"d-flex flex-column gap-4\">\r\n                  <div className=\"d-flex flex-column gap-3\">\r\n                    <div className=\"d-flex align-items-center justify-content-between main_sub  rounded-3 overflow-hidden\">\r\n                      <h3 className=\"\">{t(\"UpcomingEvent\")}</h3>\r\n                      <Link to=\"/allevents\" className=\"view_all   rounded-3\">\r\n                        {t(\"ViewAll\")}\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column gap-3 news_back  news_right_event scroll_bar  rounded-3\">\r\n                      {eventData.length === 0 ? (\r\n                        <div className=\"col-12 text-center\">\r\n                          <h5>{t(\"No_result_found\")}</h5>\r\n                        </div>\r\n                      ) : (\r\n                        eventData.map((group, index) => (\r\n                          <Link\r\n                            to={`/singleevent/${group.slug}`}\r\n                            className=\"d-flex align-items-center gap-3\"\r\n                          >\r\n                            <div className=\"d-block profile\">\r\n                              <MediaRenderer\r\n                                url={group.image}\r\n                                className=\"w-100 h-100 object-fit-cover\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex flex-column align-items-start gap-0 \">\r\n                              <p>{formatDateTime(group.created_at)}</p>\r\n                              <h5>{group.name} </h5>\r\n                              <p>\r\n                                <span>{group.description}</span>\r\n                              </p>\r\n                            </div>\r\n                          </Link>\r\n                        ))\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column gap-3\">\r\n                    <div className=\"d-flex align-items-center justify-content-between main_sub  rounded-3  overflow-hidden\">\r\n                      <h3>{t(\"ForumPosts\")}</h3>\r\n                      <Link to=\"/allforums\" className=\"view_all   rounded-3\">\r\n                        {t(\"ViewAll\")}\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column gap-3 news_back  news_right_event scroll_bar  rounded-3\">\r\n                      {allforum.length === 0 ? (\r\n                        <h5>{t(\"No_result_found\")}</h5>\r\n                      ) : (\r\n                        allforum.map((item, index) => {\r\n                          // Start from index 1\r\n                          const formattedTime = formateTime(item.date); // Get the formatted time\r\n                          return (\r\n                            <Link\r\n                              to={`/singleforums/${item.slug}`}\r\n                              className=\"d-flex align-items-start gap-3\"\r\n                            >\r\n                              <div className=\"d-block profile\">\r\n                                {item.image ? ( // Check if profile_image is available\r\n                                  <MediaRenderer url={item.image} />\r\n                                ) : (\r\n                                  <img\r\n                                    className=\"w-100 h-100 object-fit-cover\"\r\n                                    src={require(\"../assets/images/thumb.jpg\")} // Default image when there's no profile image\r\n                                    alt=\"userpic\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                              <div className=\"d-flex flex-column align-items-start gap-0 \">\r\n                                <p>{formatDateTime(item.date)}</p>\r\n                                <h5>{item.description}</h5>\r\n                              </div>\r\n                            </Link>\r\n                          );\r\n                        })\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-column gap-3\">\r\n                    <div className=\"d-flex align-items-center justify-content-between main_sub  rounded-3  overflow-hidden\">\r\n                      <h3>{t(\"RightMenu_Groups\")}</h3>\r\n                      <Link to=\"/allgroup\" className=\"view_all  rounded-3\">\r\n                        {t(\"ViewAll\")}\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column gap-3 news_back  news_right_event scroll_bar  rounded-3\">\r\n                      {groupData.length === 0 ? (\r\n                        <div className=\"col-12 text-center\">\r\n                          <h5>{t(\"LeftMenu_Nogroupfounds\")}</h5>\r\n                        </div>\r\n                      ) : (\r\n                        groupData.map((group, index) => (\r\n                          <Link\r\n                            to={`/group/${group.slug}`}\r\n                            className=\"d-flex align-items-center gap-3\"\r\n                          >\r\n                            <div className=\"d-block profile\">\r\n                              <MediaRenderer\r\n                                url={group.image}\r\n                                className=\"w-100 h-100 object-fit-cover\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex flex-column align-items-start gap-0 \">\r\n                              <p>{formatDateTime(group.created_at)}</p>\r\n                              <h5>{group.name} </h5>\r\n                              <p>\r\n                                <span>{group.description}</span>\r\n                              </p>\r\n                            </div>\r\n                          </Link>\r\n                        ))\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Usergallerynotification\r\n        isOpen1={isPopupOpen1}\r\n        onClose1={closePopup1}\r\n        seperateGallerydetail={seperateGallerydetail}\r\n        UserDetail={UserDetail}\r\n        LoginData={LoginData}\r\n        getUserfav={getUserfav}\r\n        GalleryCommets={GalleryCommets}\r\n        getCommentPost={getCommentPost}\r\n        GalleryIdDetailGet={GalleryIdDetailGet}\r\n        previousId={previousId}\r\n        nextId={nextId}\r\n        getgallerydetialnext={getgallerydetialnext}\r\n        getgallerydetialprev={getgallerydetialprev}\r\n      ></Usergallerynotification>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LatestNews;\r\n"],"names":["apiUrl","postdetail","setPostdetail","useState","AllfriendId","setAllfriendId","allforum","setallforum","groupData","setgroupData","eventData","seteventData","loading","setLoading","error","setError","useEffect","console","log","async","storedUsername","localStorage","getItem","userLogin","JSON","parse","id","formData","user_id","res","axios","post","headers","Accept","friendUserIds","data","results","map","friend","prevIds","isEqual","err","response","request","message","getAllfriendss","length","getAllgallery","fetchData","user_ids","join","respo","interval","setInterval","getAllforum","clearInterval","getAllgroups","status","getAlleventsLatest","search","formateTime","dateString","cleanDateString","replace","osloTime","DateTime","fromISO","zone","isValid","invalidExplanation","localTime","setZone","Intl","DateTimeFormat","resolvedOptions","timeZone","userTimeZone","now","localPostTime","toFormat","diffInMinutes","diff","minutes","diffInHours","hours","diffInDays","days","diffInWeeks","Math","floor","diffInMonths","diffInYears","formatDateTime","postDate","Date","options","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","hour12","t","useTranslation","savedLanguage","i18n","language","changeLanguage","isPopupOpen1","setIsPopupOpen1","seperateGallerydetail","setseperateGallerydetail","UserDetail","setUserDetail","GalleryCommets","setGalleryCommets","GalleryIdDetailGet","setGalleryIdDetailGet","nextId","setnextId","LoginData","setLoginData","previousId","setpreviousId","apiUrlMember","getUserDetail","row","getGalleryDetail","galleryId","getGalleryComments","getGalleryDetailnextprevious","document","body","style","overflowY","next_gallery_id","previous_gallery_id","g_id","_jsxs","_Fragment","children","className","_jsx","Headertwo","item","index","formattedTime","date","Link","to","target","class","makeImagePrivate","src","require","alt","MediaRenderer","url","uimage","username","onClick","image","group","slug","created_at","name","description","Usergallerynotification","isOpen1","onClose1","closePopup1","getUserfav","getCommentPost","getgallerydetialnext","getgallerydetialprev"],"sourceRoot":""}
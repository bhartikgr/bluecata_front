{"version":3,"file":"static/js/6174.4244a051.chunk.js","mappings":"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","sources":["components/ChatBox.jsx","components/MediaRendererFile.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { Link } from \"react-router-dom\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport { IoMdCloseCircle } from \"react-icons/io\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport MediaRendererFile from \"../components/MediaRendererFile\";\nimport fileIcon from \"../assets/images/documents.png\";\nimport { DateTime } from \"luxon\";\nexport const ChatBox = ({\n  isOpen,\n  onClose,\n  children,\n  userdetail,\n  userChatDetail,\n  LoginData,\n  to_id,\n  getChatAfterSave,\n  refreshchat,\n}) => {\n  const ignoreInitialScroll = useRef(true);\n\n  const chatEndRef = useRef(null); // Ref to the chat container\n  const [Totalcountmessage, setTotalcountmessage] = useState(\"\");\n  const [userblock, setuserblock] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [errormessage, seterrormessage] = useState(\"\");\n  const [chooseallId_left, setchooseallId_left] = useState([]);\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [Isfile, setFiles] = useState([]);\n  const [IdArray, setIdArray] = useState([]);\n  const [istoid, settoid] = useState(\"\");\n  const [forenter, setforenter] = useState(false);\n  const [LoginDataUser, setLoginData] = useState(LoginData);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const apiUrl = \"https://backend.amourette.no/api/members/\";\n  //const [files, setFiles] = useState([]);\n  const [seenn, setSeen] = useState(false); // Track if the function has been called\n  const [arrow, setarrow] = useState(false); // Track if the function has been called\n  const [error, seterror] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [restr_message, setrestr_message] = useState(false);\n  const { t } = useTranslation();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [searchText, setSearchText] = useState(\"\"); // Search query\n  const [filteredMessages, setFilteredMessages] = useState([]);\n  const [messages, setMessages] = useState(userChatDetail);\n  const inputRef = useRef(null);\n  const chatBoxRef = useRef(null);\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [isManualEnter, setIsManualEnter] = useState(false); // Track Enter press\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  useEffect(() => {\n    setFilteredMessages(userChatDetail);\n  }, [userChatDetail]);\n\n  useEffect(() => {\n    // fetchMessagestotalrecord();\n  }, []);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handleKeyDownn = (e) => {\n    if (e.key === \"Escape\" && selectedImage === null) {\n      onClose(); // Close the popup only if no image is selected\n    }\n  };\n\n  // Add event listener when the component mounts\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDownn);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDownn);\n    };\n  }, [selectedImage]);\n\n  useEffect(() => {\n    const handleKeyDownr = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDownr);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDownr);\n    };\n  }, [setSelectedImage]);\n\n  const [showMenu, setShowMenu] = useState(false);\n  const handleCloseDeletePopup = () => {\n    setShowMenu(false);\n    setShowMenu_Left(false);\n  };\n  const toggleMenu = (index) => {\n    setShowMenu(showMenu === index ? null : index);\n  };\n  const [showPicker, setShowPicker] = useState(false);\n  const pickerRef = useRef(null); // hold refs for each index\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n        setShowPicker(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const handleEmojiClick = (emojiObject) => {\n    setMessage((prevMessage) => prevMessage + emojiObject.emoji);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    setIsManualEnter(true);\n    setShowPicker(false); // Hide picker after selecting an emoji\n  };\n  // Runs when Isfile updates\n\n  useEffect(() => {\n    setLoginData(LoginData);\n    settoid(to_id);\n\n    if (isOpen) {\n      // When the chat box opens, initialize messages with userChatDetail\n      setMessages(userChatDetail);\n      setTimeout(() => {\n        const chatContainer = chatBoxRef.current;\n        if (chatContainer) {\n          chatContainer.scrollTop = chatContainer.scrollHeight;\n        }\n        setarrow(false);\n        hanldeseenmessagenew();\n      }, 100);\n    }\n  }, [isOpen, userChatDetail, LoginData]);\n  // const handleKeyDown = useCallback(\n  //   (e) => {\n  //     if (e.key === \"Enter\" && !e.shiftKey) {\n  //       e.preventDefault();\n\n  //       const isMessageNotEmpty = message.trim() !== \"\";\n  //       const isFileNotEmpty = Isfile.length > 0;\n\n  //       if (isMessageNotEmpty || isFileNotEmpty) {\n  //         handleSend();\n  //         setforenter(false); // Reset file trigger\n  //       }\n  //     }\n  //   },\n  //   [message, Isfile] // Dependencies to get the latest values\n  // );\n\n  // useEffect(() => {\n  //   window.addEventListener(\"keydown\", handleKeyDown);\n  //   return () => {\n  //     window.removeEventListener(\"keydown\", handleKeyDown);\n  //   };\n  // }, [handleKeyDown]);\n  useEffect(() => {\n    const handleKeyDownnn = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDownnn);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDownnn);\n    };\n  }, [setSelectedImage]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    var st = userLogin.id;\n    if (userLogin && to_id) {\n      var t = Number(to_id);\n      // Ensure `to_id` is not empty before updating\n      setIdArray([userLogin.id, t]);\n    }\n  }, [to_id]);\n  useEffect(() => {\n    if (to_id !== \"\") {\n      getmessageCount();\n    }\n    console.log(to_id);\n  }, [to_id]);\n  const getmessageCount = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      to_id: to_id,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getmessageCount\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n      console.log(\"dd\", res.data);\n      var alldata = res.data.results;\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      const unreadCount = alldata.filter((item) => item.read === \"No\").length;\n      console.log(unreadCount);\n      setTotalcountmessage(unreadCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (!receivedMessage) {\n          console.error(\"Received invalid JSON:\", event.data);\n          return;\n        }\n        console.log(receivedMessage);\n        const senderId = Number(receivedMessage.user_id); // Sender's ID (e.g. 5)\n        const receiverId = Number(receivedMessage.to_id); // Receiver's ID (e.g. 1)\n        const loggedInUserId = Number(LoginData.id); // Currently logged-in user's ID (e.g. 1 or 5)\n\n        var ttt = Number(to_id);\n        if (receivedMessage.event === \"DeleteChatMessage\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageFormessage(receivedMessage.id);\n            refreshchat();\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessage_other\") {\n          if (loggedInUserId === senderId) {\n            setMessageFormessage(receivedMessage.id);\n            refreshchat();\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessage_other_Left\") {\n          if (loggedInUserId === senderId) {\n            //setMessageForultiple_left(receivedMessage.id);\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessageMultiple\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageForultiple(receivedMessage.id);\n            refreshchat();\n          }\n        }\n        if (receivedMessage.event === \"ChatMessage\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            getSEndMessagequick(receivedMessage, senderId, receiverId);\n            //  / hanldeseenmessagenotscroll();\n            // If the logged-in user is the sender, auto-scroll\n\n            if (loggedInUserId === senderId) {\n              setTimeout(() => {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"nearest\",\n                });\n              }, 350);\n            } else {\n              console.log(\"This is a receiver's message:\", receivedMessage);\n            }\n          }\n        }\n        // Ensure message is only seen by the sender or receiver\n        if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n          if (\n            receivedMessage.event !== \"DeleteChatMessageMultiple\" &&\n            receivedMessage.event !== \"DeleteChatMessage\" &&\n            receivedMessage.event !== \"DeleteChatMessage_other\"\n          ) {\n            //(receivedMessage, senderId, receiverId);\n\n            // If the logged-in user is the sender, auto-scroll\n            if (loggedInUserId === senderId) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            } else {\n              console.log(\"This is a receiver's message:\", receivedMessage);\n            }\n          }\n        } else {\n          // Ignore the message for any other users\n          console.log(\"Message ignored for this user:\", loggedInUserId);\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, to_id, IdArray]);\n  const isScrolledToBottom = (element) => {\n    return element.scrollHeight - element.scrollTop === element.clientHeight;\n  };\n  const fetchMessagestotalrecord = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formdata = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"getuserChatmessageTotalMessage\",\n        formdata,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      const newMessages = res.data.results;\n      //setOffset((prev) => prev + newMessages.length);\n    } catch (error) {\n      console.error(\"Error fetching messages\", error);\n    }\n    //setLoadingMore(false);\n  };\n  const fetchMessages = async (newOffset) => {\n    setLoadingMore(true);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formdata = {\n      user_id: userLogin.id,\n      to_id: to_id,\n      offset: newOffset,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formdata, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      const newMessages = res.data.results;\n      console.log(newMessages);\n      setMessages(newMessages);\n      setFilteredMessages(newMessages);\n      // if (newOffset === 0) {\n      //   const reversed = [...newMessages].reverse(); // show newest last\n      //   setMessages(reversed);\n      //   setFilteredMessages(reversed);\n      // } else {\n      //   setFilteredMessages((prevMessages) => {\n      //     const existingIds = new Set(prevMessages.map((msg) => msg.id));\n      //     const filteredNewMessages = newMessages.filter(\n      //       (msg) => !existingIds.has(msg.id)\n      //     );\n\n      //     return [...filteredNewMessages.reverse(), ...prevMessages]; // prepend older messages\n      //   });\n      // }\n      //setOffset((prev) => prev + newMessages.length);\n    } catch (error) {\n      console.error(\"Error fetching messages\", error);\n    }\n    setLoadingMore(false);\n  };\n  const handleScroll = async () => {\n    const chatBox = chatBoxRef.current;\n    if (!chatBox || ignoreInitialScroll.current) return;\n\n    const isAtTop = chatBox.scrollTop <= 5;\n    const bottomThreshold = 50;\n    const distanceFromBottom =\n      chatBox.scrollHeight - chatBox.scrollTop - chatBox.clientHeight;\n    const isAtBottom = distanceFromBottom <= bottomThreshold;\n\n    console.log(isAtTop);\n\n    if (isAtTop && hasMore && !loadingMore) {\n      const oldScrollHeight = chatBox.scrollHeight;\n\n      await fetchMessages(offset); // fetch next 10 (older) messages\n\n      // setTimeout(() => {\n      //   const newScrollHeight = chatBox.scrollHeight;\n      //   chatBox.scrollTop = newScrollHeight - oldScrollHeight;\n      // }, 100);\n    }\n\n    setarrow(isAtBottom);\n\n    if (isAtBottom) {\n      setarrow(true);\n      hanldeseenmessage();\n\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      if (to_id !== \"\") {\n        let formData = {\n          user_id: userLogin.id,\n          to_id: to_id,\n        };\n\n        try {\n          const res = await axios.post(apiUrl + \"messageseen\", formData, {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          });\n\n          if (res.data.status === \"1\") {\n            chatsectionUser(to_id);\n          }\n          getmessageCount();\n        } catch (err) {\n          if (err.response) {\n            console.error(\"Error response:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request data:\", err.request);\n          } else {\n            console.error(\"Error message:\", err.message);\n          }\n        }\n      }\n    }\n  };\n\n  const chatsectionUser = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    // Ensure LoginData is not null\n    if (!userLogin || !userLogin.id) {\n      console.error(\"Login data is not available\");\n      return; // Exit the function if LoginData is null\n    }\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: idd,\n      offset: 0,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      //  setmessages(respo);\n      //  setmessagesall(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const checkuserblock = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n\n      try {\n        const res = await axios.post(apiUrl + \"checkuserblock\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Correct content type for file uploads\n          },\n        });\n        console.log(\"checkblock\");\n        console.log(res.data);\n        if (res.data.result.length > 0) {\n          setuserblock(true);\n        } else {\n          setuserblock(false);\n        }\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Response error:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request error:\", err.request);\n        } else {\n          console.error(\"General error:\", err.message);\n        }\n      }\n    };\n    checkuserblock();\n  }, []);\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const handleInputChange = (e) => {\n    const inputValue = e.target.value;\n    setMessage(inputValue);\n    if (inputValue.trim() !== \"\") {\n      setforenter(true);\n    } else {\n      setforenter(false);\n    }\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n    setIsManualEnter(true);\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n\n  // Button disabled logic\n  const isButtonDisabled =\n    (!message.trim() && Isfile.length === 0) || restr_message;\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n\n  const MAX_FILE_SIZE_MB = 25; // Maximum file size in MB\n\n  const handleFileChange = async (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    const validFiles = [];\n    const errorFiles = [];\n\n    for (const file of selectedFiles) {\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      // if (!isImage && !isVideo) {\n      //   errorFiles.push(`${file.name} is not a valid image or video.`);\n      //   continue;\n      // }\n\n      if (file.size / 1024 / 1024 > MAX_FILE_SIZE_MB) {\n        errorFiles.push(`${file.name} exceeds ${MAX_FILE_SIZE_MB} MB.`);\n        continue;\n      }\n\n      if (isImage) {\n        const supportedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!supportedTypes.includes(file.type)) {\n          try {\n            const convertedFile = await convertToPng(file);\n            validFiles.push(convertedFile);\n            continue;\n          } catch (err) {\n            console.error(\"Image conversion error:\", err);\n            errorFiles.push(`Failed to convert ${file.name}`);\n            continue;\n          }\n        }\n      }\n\n      validFiles.push(file);\n    }\n\n    if (errorFiles.length > 0) {\n      seterror(`Some files were not added:\\n${errorFiles.join(\"\\n\")}`);\n    } else {\n      seterror(\"\");\n    }\n\n    setIsManualEnter(true);\n    setforenter(true);\n    setFiles((prevFiles) => [...prevFiles, ...validFiles]);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n\n      const event = new KeyboardEvent(\"keydown\", {\n        key: \"Enter\",\n        code: \"Enter\",\n        keyCode: 13,\n        bubbles: true,\n      });\n      inputRef.current.dispatchEvent(event);\n    }\n  };\n\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  {\n                    type: \"image/png\",\n                    lastModified: new Date().getTime(),\n                  }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Failed to convert image.\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = event.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const removeImage = (index) => {\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index)); // Remove image by index\n  };\n  const setMessageFormessage = (recid) => {\n    setFilteredMessages((prevMessages) =>\n      prevMessages.filter((msg) => msg.id !== recid)\n    );\n  };\n  const setMessageForultiple = (recidArray) => {\n    setFilteredMessages(\n      (prevMessages) =>\n        prevMessages.filter((msg) => !recidArray.includes(msg.id)) // Remove all matching IDs\n    );\n  };\n  const setMessageForultiple_left = (recidArray) => {\n    setFilteredMessages(\n      (prevMessages) =>\n        prevMessages.filter((msg) => !recidArray.includes(msg.id)) // Remove all matching IDs\n    );\n  };\n  const getSEndMessagequick = async (form, n, t) => {\n    let formData = {\n      data: form,\n      user_id: n,\n      to_id: t,\n    };\n    console.log(formData, \"que\");\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessagequick\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      console.log(alldata, \"check\");\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n          console.log(unreadCount);\n          getmessageCount();\n          //setTotalcountmessage(unreadCount);\n        }\n      }\n      // Assuming res.data.results is the array of messages you want to append\n      if (res.data && Array.isArray(res.data.results)) {\n        // Update the messages state with new messages appended\n\n        setFilteredMessages((prevMessages) => [\n          ...prevMessages,\n          ...res.data.results,\n        ]);\n        setMessages(res.data.results);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const getSEndMessage = async (form, n, t) => {\n    let formData = {\n      data: form,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n      console.log(\"Response from server:\", res.data);\n      var alldata = res.data.results;\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n          console.log(unreadCount);\n          getmessageCount();\n          //setTotalcountmessage(unreadCount);\n        }\n      }\n      // Assuming res.data.results is the array of messages you want to append\n      if (res.data && Array.isArray(res.data.results)) {\n        // Update the messages state with new messages appended\n        setFilteredMessages((prevMessages) => [\n          ...prevMessages,\n          ...res.data.results,\n        ]);\n        setMessages((prevMessages) => [...prevMessages, ...res.data.results]);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const MAX_WORDS = 2000;\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handleSend = async () => {\n    setShowMenu(false);\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1000);\n    } else {\n      setarrow(true);\n      const formData = new FormData();\n      setspinner(true);\n      var commentText = message?.trim();\n      console.log(commentText);\n\n      if (commentText !== \"\") {\n        const currentWordCount = countWords(commentText);\n        if (currentWordCount < 2000) {\n          formData.append(\"message\", message);\n          formData.append(\"fileType\", \"chats\");\n          formData.append(\"user_id\", LoginData.id);\n          formData.append(\"to_id\", to_id);\n          Isfile.forEach((file) => {\n            formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n          });\n\n          console.log(\"Message:\", message);\n          console.log(\"Files:\", Isfile);\n\n          try {\n            const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n              },\n            });\n\n            setspinner(false);\n            var respo = res.data;\n\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            }\n            //await getChatAfterSave();\n            setTimeout(() => {\n              if (chatEndRef.current) {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"nearest\",\n                });\n              }\n              setTimeout(() => {\n                setarrow(true);\n              }, 50);\n            }, 500);\n          } catch (err) {\n            // Enhanced error handling\n            if (err.response) {\n              console.error(\"Response error:\", err.response);\n            } else if (err.request) {\n              console.error(\"Request error:\", err.request);\n            } else {\n              console.error(\"General error:\", err.message);\n            }\n          }\n\n          // Reset message and files after sending\n          setMessage(\"\");\n          setFiles([]);\n        } else {\n          setspinner(false);\n          setShowPopError(true);\n          setPoperrorMessage(\n            `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n          );\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n          }, 1000);\n        }\n      } else {\n        formData.append(\"message\", message);\n        formData.append(\"fileType\", \"chats\");\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"to_id\", to_id);\n        Isfile.forEach((file) => {\n          formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n        });\n\n        console.log(\"Message:\", message);\n        console.log(\"Files:\", Isfile);\n\n        try {\n          const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n            },\n          });\n          setspinner(false);\n          var respo = res.data;\n          //setMessages((prevMessages) => [...prevMessages, res.data]); // Update messages state\n\n          // Scroll to the bottom of the chat\n          if (chatEndRef.current) {\n            chatEndRef.current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"nearest\",\n            });\n          }\n          //await getChatAfterSave();\n          setTimeout(() => {\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            }\n          }, 500);\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Response error:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request error:\", err.request);\n          } else {\n            console.error(\"General error:\", err.message);\n          }\n        }\n\n        // Reset message and files after sending\n        setMessage(\"\");\n        setFiles([]);\n      }\n    }\n  };\n  const handlesearchmessage = (e) => {\n    const searchValue = e.target.value.toLowerCase();\n    setSearchText(searchValue);\n\n    if (!searchValue) {\n      setFilteredMessages(userChatDetail); // Reset to all messages when search is empty\n      return;\n    }\n\n    const filtered = userChatDetail.filter(\n      (chat) =>\n        chat && chat.message && chat.message.toLowerCase().includes(searchValue)\n    );\n\n    setFilteredMessages(filtered);\n  };\n  const formatTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Treat input as a Europe/Oslo time (even though it has 'Z')\n    // Remove the 'Z' if it exists\n    const cleanDateString = dateString.replace(/Z$/, \"\");\n\n    // Parse it as if it's Oslo local time (not UTC)\n    const osloTime = DateTime.fromISO(cleanDateString, { zone: \"Europe/Oslo\" });\n\n    if (!osloTime.isValid) {\n      console.error(\"Invalid Oslo Time:\", osloTime.invalidExplanation);\n      return \"Invalid Date\";\n    }\n\n    // Convert to current system's local timezone\n    const localTime = osloTime.setZone(\n      Intl.DateTimeFormat().resolvedOptions().timeZone\n    );\n\n    return localTime.toFormat(\"LLL dd, yyyy, hh:mm a\");\n  };\n\n  const handledeletemainpopup = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletemessagechat\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowMenu(false);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [chooseallId, setchooseallId] = useState([]);\n  const [showdeletebutton, setshowdeletebutton] = useState(false);\n  const [selectall, setselectall] = useState(false);\n  const handlealldelete = async () => {\n    let deleteev = {\n      id: chooseallId,\n      user_id: LoginData.id,\n      to_id: to_id,\n      other_id: chooseallId_left,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemultiplemessagechat\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setchooseallId([]);\n      setshowdeletebutton(false);\n      setselectall(false);\n      setchooseallId_left([]);\n      setshowdeletebutton(false);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n    //handledeleteOther_Left();\n  };\n  const handledeleteOther_Left = async () => {\n    let deleteev = {\n      id: chooseallId_left,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemultiplemessagechat_left\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setTimeout(() => {\n        setchooseallId([]);\n        setshowdeletebutton(false);\n        setselectall(false);\n        setchooseallId_left([]);\n        setshowdeletebutton(false);\n      }, 500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleallselect = () => {\n    setselectall(!selectall);\n  };\n  const handlechooseAll = (id) => {\n    setchooseallId(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n  const getFileSrc = (fileUrl) => {\n    const allowedExtensions = [\".png\", \".jpg\", \".jpeg\", \".gif\"];\n    return allowedExtensions.some((ext) => fileUrl.endsWith(ext))\n      ? fileUrl\n      : null; // Return null if not an image\n  };\n\n  useEffect(() => {\n    if (chooseallId_left.length > 0 || chooseallId.length > 0) {\n      setshowdeletebutton(true);\n    } else {\n      setshowdeletebutton(false);\n    }\n  }, [chooseallId_left, chooseallId]);\n\n  const [showMenu_Left, setShowMenu_Left] = useState(false);\n  const handlechooseAll_left = (id) => {\n    setchooseallId_left(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n\n  const toggleMenu_Left = (index) => {\n    setShowMenu_Left(showMenu_Left === index ? null : index);\n  };\n  const handledeletemainpopup_Left = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemessagechat_Left\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const hanldeseenmessage = async () => {\n    console.log(to_id);\n    if (!to_id || arrow) return;\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"Seen API response received\");\n\n      // Safe scroll\n      setTimeout(() => {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n        }\n      }, 350);\n\n      getmessageCount();\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessagenew = async () => {\n    if (!to_id || arrow) return;\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"Seen API response received\");\n\n      // Safe scroll\n\n      getmessageCount();\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const hanldeseenmessageAll = async () => {\n    console.log(to_id);\n    if (!to_id) return;\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"ll\");\n      setTimeout(() => {\n        const chatContainer = chatBoxRef.current;\n        if (chatContainer) {\n          chatContainer.scrollTop = chatContainer.scrollHeight;\n        }\n        setTimeout(() => {\n          setarrow(true);\n        }, 350);\n      }, 30);\n\n      getmessageCount();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessagenotscroll = async () => {\n    if (to_id !== \"\") {\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        console.log(\"ll\");\n\n        getmessageCount();\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    if (!isOpen) return; // Don't attach if popup is closed\n\n    const chatBox = chatBoxRef.current;\n    if (!chatBox) return;\n\n    const handle = () => handleScroll(); // for cleanup consistency\n\n    // Prevent scroll conflict on popup open\n    ignoreInitialScroll.current = true;\n    const timer = setTimeout(() => {\n      ignoreInitialScroll.current = false;\n    }, 300); // Delay to ignore initial scroll\n\n    chatBox.addEventListener(\"scroll\", handle);\n\n    return () => {\n      clearTimeout(timer);\n      chatBox.removeEventListener(\"scroll\", handle);\n    };\n  }, [isOpen, arrow, offset, hasMore, loadingMore]);\n\n  // Scroll to the bottom when new messages arrive\n\n  const hanldeseenmessages = async () => {\n    if (to_id !== \"\") {\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        console.log(\"ll\");\n\n        getmessageCount();\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  // Early return if the chat box is not open\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"popup-overlay checkbox\" onClick={handleOverlayClick}>\n        {showPopError && <ErrorPop message={errorPopMessage} />}\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-4\">\n          <div className=\"d-flex flex-column gap-0 chat_box\">\n            <div className=\"d-flex align-items-center gap-3 mess_head \">\n              <Link\n                target=\"_blank\"\n                to={`/friend/${userdetail.id}`}\n                className=\"d-block chat_profile\"\n              >\n                {userdetail.profile_image &&\n                userdetail.makeImagePrivate === 0 ? ( // Display the image URL if available\n                  <img\n                    className=\"w-100 h-100\"\n                    src={userdetail.profile_image} // Use the URL from the member object\n                    alt=\"userpic\"\n                  />\n                ) : (\n                  <img\n                    className=\"w-100 h-100\"\n                    src={require(\"../assets/images/thumb.jpg\")} // Default image if profile image is not available\n                    alt=\"userpic\"\n                  />\n                )}\n              </Link>\n              <div className=\"d-flex flex-md-row flex-column align-items-md-center justify-content-between w-100 gap-2 chat_name pt-3\">\n                <div className=\"d-flex flex-column gap-3\">\n                  <div className=\"d-flex flex-column gap-1\">\n                    <div className=\"d-flex align-items-md-center gap-2\">\n                      <div className=\"newclass\">\n                        <Link\n                          target=\"_blank\"\n                          className=\"unamecolor\"\n                          to={`/friend/${userdetail.id}`}\n                        >\n                          {userdetail.username}\n                        </Link>\n                      </div>\n                      ,\n                      <p>\n                        {userdetail.gender === \"Couple\"\n                          ? `${calculateAge(\n                              userdetail.birthday_date\n                            )} & ${calculateAge(userdetail.birthday_date_her)}`\n                          : userdetail.birthday_date\n                          ? `${calculateAge(userdetail.birthday_date)}`\n                          : \"\"}\n                      </p>\n                    </div>\n                    <h5>{userdetail.location}</h5>\n                  </div>\n                </div>\n                <div className=\"d-flex flex-column justify-content-end align-items-end gap-2\">\n                  <div className=\"search-box\">\n                    <i className=\"fas fa-search\"></i>\n                    <input\n                      type=\"search\"\n                      placeholder={t(\"searchaaa\")}\n                      onInput={(e) => handlesearchmessage(e)}\n                    />\n                  </div>\n                  <div className=\"d-flex align-items-center gap-2 message_s-btn\">\n                    {showdeletebutton && (\n                      <button\n                        className=\"deltebtn\"\n                        type=\"button\"\n                        onClick={handlealldelete}\n                      >\n                        {t(\"delete\")}\n                      </button>\n                    )}\n                    <button\n                      className={`select_btn ${selectall ? \"active\" : \"\"}`}\n                      type=\"button\"\n                      onClick={handleallselect}\n                    >\n                      {t(\"Select\")}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"mess_box_main\"\n              ref={chatBoxRef}\n              style={{\n                maxHeight: \"56vh\",\n                overflow: \"auto\",\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"end\",\n              }}\n            >\n              <div className=\"mess_box d-flex flex-column gap-3 justify-content-end w-100\">\n                {loadingMore && (\n                  <div className=\"text-center w-100 py-2\">\n                    <span\n                      className=\"spinner-border text-success spinner-border-sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    ></span>\n                  </div>\n                )}\n                {filteredMessages.length === 0 ? (\n                  <div className=\"empty-chat-message\">\n                    <p>{t(\"No_messages_to_display\")}</p>\n                  </div>\n                ) : (\n                  filteredMessages.map((chat, index) => (\n                    <div\n                      key={index}\n                      ref={\n                        index === filteredMessages.length - 1\n                          ? chatEndRef\n                          : null\n                      }\n                    >\n                      {chat.user_id === LoginData.id ? (\n                        // Right-aligned messages (sent by the logged-in user)\n                        <>\n                          <div className=\"main_mess right_mess d-flex align-items-end gap-2 flex-column\">\n                            {/* Render the profile image only if there are files */}\n                            {Array.isArray(JSON.parse(chat.file)) &&\n                              JSON.parse(chat.file).length > 0 && (\n                                <>\n                                  {/* Show profile image only for the first file */}\n                                  {index === 0 && (\n                                    <Link\n                                      target=\"_blank\"\n                                      to={`/friend/${chat.user1_id}`}\n                                      className=\"d-block mess_profile\"\n                                    >\n                                      <img\n                                        className=\"w-100 h-100 pr\"\n                                        src={\n                                          chat.user1_makeImagePrivate === 1\n                                            ? require(\"../assets/images/thumb.jpg\")\n                                            : chat.user1_profile\n                                        }\n                                        alt=\"profile\"\n                                      />\n                                    </Link>\n                                  )}\n\n                                  {JSON.parse(chat.file).map((f, fileIndex) => {\n                                    const fileSrc = getFileSrc(f);\n\n                                    return (\n                                      <div\n                                        className=\"message d-block send_image\"\n                                        key={fileIndex}\n                                      >\n                                        {fileSrc ? (\n                                          // If it's an image, display it\n\n                                          <>\n                                            <div className=\"d-flex align-items-start gap-1 h-100\">\n                                              <div\n                                                style={{\n                                                  position: \"relative\",\n                                                  display: \"inline-block\",\n                                                }}\n                                              >\n                                                <button\n                                                  className=\"remove_mess\"\n                                                  onClick={() =>\n                                                    toggleMenu(index)\n                                                  }\n                                                >\n                                                  <HiDotsVertical />\n                                                </button>\n\n                                                {showMenu === index && (\n                                                  <ul className=\"popup-menu\">\n                                                    <li\n                                                      onClick={() =>\n                                                        handledeletemainpopup(\n                                                          chat.id\n                                                        )\n                                                      }\n                                                    >\n                                                      {t(\"Remove\")}\n                                                    </li>\n                                                    <li\n                                                      onClick={\n                                                        handleCloseDeletePopup\n                                                      }\n                                                    >\n                                                      {t(\"Cancel\")}\n                                                    </li>\n                                                  </ul>\n                                                )}\n                                              </div>\n                                              <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                <div className=\"d-flex align-items-start gap-1 5\">\n                                                  <img\n                                                    className=\"w-100 h-100 d\"\n                                                    src={fileSrc}\n                                                    alt={`file-${fileIndex}`}\n                                                    onClick={() =>\n                                                      setSelectedImage(fileSrc)\n                                                    }\n                                                    style={{\n                                                      cursor: \"pointer\",\n                                                    }}\n                                                  />\n                                                  {selectall && (\n                                                    <input\n                                                      type=\"checkbox\"\n                                                      checked={chooseallId.includes(\n                                                        chat.id\n                                                      )}\n                                                      onChange={() =>\n                                                        handlechooseAll(chat.id)\n                                                      }\n                                                    />\n                                                  )}\n                                                </div>\n                                                <span>\n                                                  {formatTime(chat.date)}\n                                                </span>\n                                              </div>\n                                            </div>\n                                          </>\n                                        ) : (\n                                          <>\n                                            <div className=\"d-flex align-items-start gap-1 h-100\">\n                                              <div\n                                                style={{\n                                                  position: \"relative\",\n                                                  display: \"inline-block\",\n                                                }}\n                                              >\n                                                <button\n                                                  className=\"remove_mess\"\n                                                  onClick={() =>\n                                                    toggleMenu(index)\n                                                  }\n                                                >\n                                                  <HiDotsVertical />\n                                                </button>\n\n                                                {showMenu === index && (\n                                                  <ul className=\"popup-menu\">\n                                                    <li\n                                                      onClick={() =>\n                                                        handledeletemainpopup(\n                                                          chat.id\n                                                        )\n                                                      }\n                                                    >\n                                                      {t(\"Remove\")}\n                                                    </li>\n                                                    <li\n                                                      onClick={\n                                                        handleCloseDeletePopup\n                                                      }\n                                                    >\n                                                      {t(\"Cancel\")}\n                                                    </li>\n                                                  </ul>\n                                                )}\n                                              </div>\n                                              <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                <div className=\"d-flex align-items-start gap-1 6\">\n                                                  <MediaRendererFile\n                                                    url={f}\n                                                    onClick={() =>\n                                                      setSelectedImage(f)\n                                                    }\n                                                  />\n                                                  {/* <Link\n                                                    to={f}\n                                                    download\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className=\"h-100\"\n                                                  >\n                                                    <img\n                                                      src={require(\"../assets/images/images.png\")}\n                                                      alt=\"File\"\n                                                    />\n                                                  </Link> */}\n                                                  {selectall && (\n                                                    <input\n                                                      type=\"checkbox\"\n                                                      checked={chooseallId.includes(\n                                                        chat.id\n                                                      )}\n                                                      onChange={() =>\n                                                        handlechooseAll(chat.id)\n                                                      }\n                                                    />\n                                                  )}\n                                                </div>\n                                                <span>\n                                                  {formatTime(chat.date)}\n                                                </span>\n                                              </div>\n                                            </div>\n                                          </>\n                                        )}\n                                      </div>\n                                    );\n                                  })}\n                                </>\n                              )}\n                          </div>\n\n                          {chat.message && chat.message !== \"null\" && (\n                            <div className=\"main_mess right_mess d-flex align-items-center gap-2\">\n                              <Link\n                                target=\"_blank\"\n                                to={`/friend/${chat.user1_id}`}\n                                className=\"d-block mess_profile ri\"\n                              >\n                                <img\n                                  className=\"w-100 h-100 ri\"\n                                  src={\n                                    chat.user1_makeImagePrivate === 1\n                                      ? require(\"../assets/images/thumb.jpg\")\n                                      : chat.user1_profile\n                                  }\n                                  alt=\"profile\"\n                                />\n                              </Link>\n                              <div className=\" d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                <div className=\"d-flex align-items-start gap-0\">\n                                  <div\n                                    style={{\n                                      position: \"relative\",\n                                      display: \"inline-block\",\n                                    }}\n                                  >\n                                    <button\n                                      className=\"remove_mess\"\n                                      onClick={() => toggleMenu(index)}\n                                    >\n                                      <HiDotsVertical />\n                                    </button>\n\n                                    {showMenu === index && (\n                                      <ul className=\"popup-menu\">\n                                        <li\n                                          onClick={() =>\n                                            handledeletemainpopup(chat.id)\n                                          }\n                                        >\n                                          {t(\"Remove\")}\n                                        </li>\n                                        <li onClick={handleCloseDeletePopup}>\n                                          {t(\"Cancel\")}\n                                        </li>\n                                      </ul>\n                                    )}\n                                  </div>\n                                  <div className=\"d-flex align-items-start gap-1 1\">\n                                    <p className=\"message\">{chat.message}</p>\n                                    {selectall && (\n                                      <input\n                                        type=\"checkbox\"\n                                        checked={chooseallId.includes(chat.id)}\n                                        onChange={() =>\n                                          handlechooseAll(chat.id)\n                                        }\n                                      />\n                                    )}\n                                  </div>\n                                </div>\n\n                                <span>{formatTime(chat.date)}</span>\n                              </div>\n                            </div>\n                          )}\n                        </>\n                      ) : (\n                        // Left-aligned messages (received from other users)\n                        <>\n                          <div className=\"main_mess left_mess d-flex align-items-start gap-2 flex-column \">\n                            {/* Check if chat.file is valid and has files */}\n                            {Array.isArray(JSON.parse(chat.file)) &&\n                              JSON.parse(chat.file).length > 0 && (\n                                <>\n                                  {/* Show profile image only for the first file */}\n                                  {index === 0 && (\n                                    <Link\n                                      target=\"_blank\"\n                                      to={`/friend/${chat.user1_id}`}\n                                      className=\"d-block mess_profile le flex-shrink-0\"\n                                    >\n                                      <img\n                                        className=\"w-100 h-100 d\"\n                                        src={\n                                          chat.user1_makeImagePrivate === 1\n                                            ? require(\"../assets/images/thumb.jpg\")\n                                            : chat.user1_profile\n                                        }\n                                        alt=\"profile\"\n                                      />\n                                    </Link>\n                                  )}\n\n                                  {JSON.parse(chat.file).map((f, fileIndex) => {\n                                    const fileSrc = getFileSrc(f);\n\n                                    return (\n                                      <div\n                                        className=\"message d-block send_image\"\n                                        key={fileIndex}\n                                      >\n                                        {fileSrc ? (\n                                          <>\n                                            <div className=\"d-flex align-items-start gap-1 h-100\">\n                                              <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                <div className=\"d-flex align-items-start gap-1 2\">\n                                                  <img\n                                                    className=\"w-100 h-100 d\"\n                                                    src={fileSrc}\n                                                    alt={`file-${fileIndex}`}\n                                                    onClick={() =>\n                                                      setSelectedImage(fileSrc)\n                                                    }\n                                                    style={{\n                                                      cursor: \"pointer\",\n                                                    }}\n                                                  />\n                                                </div>\n                                                <span>\n                                                  {formatTime(chat.date)}\n                                                </span>\n                                              </div>\n                                            </div>\n                                          </>\n                                        ) : (\n                                          <>\n                                            <div className=\"d-flex align-items-start gap-1 h-100\">\n                                              <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                <div className=\"d-flex align-items-start gap-1 3\">\n                                                  <MediaRendererFile\n                                                    url={f}\n                                                    onClick={() =>\n                                                      setSelectedImage(f)\n                                                    }\n                                                  />\n                                                </div>\n                                                <span>\n                                                  {formatTime(chat.date)}\n                                                </span>\n                                              </div>\n                                            </div>\n                                          </>\n                                        )}\n                                      </div>\n                                    );\n                                  })}\n                                </>\n                              )}\n                          </div>\n\n                          {chat.message && chat.message !== \"null\" && (\n                            <div className=\"main_mess left_mess d-flex align-items-center gap-2\">\n                              <Link\n                                target=\"_blank\"\n                                to={`/friend/${chat.user1_id}`}\n                                className=\"d-block mess_profile le  flex-shrink-0\"\n                              >\n                                <img\n                                  className=\"w-100 h-100 pr\"\n                                  src={\n                                    chat.user1_makeImagePrivate === 1\n                                      ? require(\"../assets/images/thumb.jpg\")\n                                      : chat.user1_profile\n                                  }\n                                  alt=\"profile\"\n                                />\n                              </Link>\n                              <div className=\" d-flex flex-column gap-1 justify-content-start align-items-start\">\n                                {/* <div className=\"d-flex align-items-start gap-0\">\n                                                                                                 <p className=\"message\">{chat.message}</p>\n                                                                                               </div> */}\n                                <div className=\"d-flex align-items-start gap-0\">\n                                  <div className=\"d-flex align-items-start gap-1 4\">\n                                    <p className=\"message\">{chat.message}</p>\n                                  </div>\n                                </div>\n\n                                <span>{formatTime(chat.date)}</span>\n                              </div>\n                            </div>\n                          )}\n                        </>\n                      )}\n                    </div>\n                  ))\n                )}\n              </div>\n              {filteredMessages.length > 4 && !arrow && (\n                <button\n                  className=\"newmessagearrow\"\n                  type=\"button\"\n                  onClick={hanldeseenmessageAll}\n                >\n                  <FaAngleDown />\n                  {Totalcountmessage > 0 && <span>{Totalcountmessage}</span>}\n                </button>\n              )}\n            </div>\n            {selectedImage && (\n              <div\n                className=\"p-5\"\n                style={{\n                  position: \"fixed\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\",\n                  backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  zIndex: 989898,\n                }}\n                onClick={() => setSelectedImage(null)} // Close when clicked outside\n              >\n                <div className=\"rel d-block h-100\">\n                  <button type=\"button\" className=\"closebtnpic\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"\n                    >\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                      <path d=\"M18 6l-12 12\" />\n                      <path d=\"M6 6l12 12\" />\n                    </svg>\n                  </button>\n                  <MediaRenderer\n                    className=\"w-100 h-100 object-fit-cover\"\n                    url={selectedImage}\n                    style={{\n                      maxWidth: \"100%\",\n                      maxHeight: \"100%\",\n                      borderRadius: \"10px\",\n                      height: \"85vh\",\n                      objectFit: \"contain\",\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n\n            <span className=\"text-danger\">{error}</span>\n            {restr_message && (\n              <span className=\"text-danger\">{t(\"Your_message_contain\")}</span>\n            )}\n            <form\n              onSubmit={(e) => {\n                e.preventDefault(); // Prevent page reload\n                if (message.trim() !== \"\" || Isfile.length > 0) {\n                  handleSend();\n                }\n              }}\n              className=\"message_type d-flex align-items-center gap-2\"\n            >\n              {/* File Upload */}\n              <div className=\"d-block image_img\">\n                <input type=\"file\" onChange={handleFileChange} multiple />\n                <img\n                  className=\"w-100 h-100\"\n                  src={require(\"../assets/images/serach2.png\")}\n                  alt=\"Upload\"\n                />\n              </div>\n\n              {/* Emoji Picker */}\n              <div className=\"emoji-container emchatbox\" ref={pickerRef}>\n                <button\n                  type=\"button\"\n                  className=\"emoji-button\"\n                  onClick={() => setShowPicker(!showPicker)}\n                >\n                  😀\n                </button>\n                {showPicker && <EmojiPicker onEmojiClick={handleEmojiClick} />}\n              </div>\n\n              {/* Message Input */}\n              <input\n                type=\"text\"\n                ref={inputRef}\n                value={message}\n                onChange={handleInputChange}\n                placeholder=\"Write a message...\"\n              />\n\n              {/* Send Button */}\n              <button\n                className=\"d-block image_img\"\n                type=\"submit\" // Change to \"submit\" so Enter key works\n                disabled={!message.trim() && Isfile.length === 0} // Prevent empty messages\n              >\n                <img\n                  className=\"w-50 h-50\"\n                  src={require(\"../assets/images/send.png\")}\n                  alt=\"Send\"\n                />\n              </button>\n\n              {/* Loading Spinner */}\n              {spinner && (\n                <div\n                  className=\"spinner-border text-success send_load\"\n                  role=\"status\"\n                >\n                  <span className=\"visually-hidden\"></span>\n                </div>\n              )}\n\n              {/* Display Selected Images */}\n              {Isfile.length > 0 && (\n                <div className=\"muti_images\">\n                  <div className=\"muti_main overflow-auto d-flex gap-2 mx-auto w-96\">\n                    {Isfile.map((file, index) => {\n                      const isImage = file.type.startsWith(\"image/\");\n                      const isVideo = file.type.startsWith(\"video/\");\n\n                      return (\n                        <div key={index} className=\"d-block muti_image\">\n                          {isImage && (\n                            <img\n                              className=\"w-100 h-100\"\n                              src={URL.createObjectURL(file)}\n                              alt=\"Preview\"\n                            />\n                          )}\n\n                          {isVideo && (\n                            <video\n                              className=\"w-100 h-100\"\n                              controls\n                              src={URL.createObjectURL(file)}\n                            />\n                          )}\n\n                          {!isImage && !isVideo && (\n                            <div className=\"file-placeholder\">\n                              <img\n                                src={fileIcon}\n                                alt=\"File\"\n                                className=\"w-100 h-100\"\n                              />\n                              <p className=\"sendf\">{file.name}</p>\n                            </div>\n                          )}\n\n                          <button\n                            className=\"delete_img\"\n                            onClick={() => removeImage(index)}\n                          >\n                            ×\n                          </button>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ChatBox;\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport fileIcon from \"../assets/images/documents.png\"; // Your default icon\r\n\r\nconst MediaRendererFile = ({ url, onClick, className }) => {\r\n  const [mediaType, setMediaType] = useState(null); // \"image\", \"video\", or \"file\"\r\n  const [isIphone, setIsIphone] = useState(false);\r\n  const [base64Image, setBase64Image] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userAgent = navigator.userAgent || \"\";\r\n    if (/iPhone|iPad|iPod/i.test(userAgent)) {\r\n      setIsIphone(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!url) return;\r\n\r\n    const extension = url.split(\".\").pop().toLowerCase();\r\n    const isAvif = extension === \"avif\";\r\n    const imageTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\", \"avif\"];\r\n    const videoTypes = [\"mp4\", \"webm\", \"ogg\", \"mov\"];\r\n\r\n    if (isIphone && isAvif) {\r\n      fetch(url)\r\n        .then((res) => res.blob())\r\n        .then((blob) => {\r\n          const reader = new FileReader();\r\n          reader.onloadend = () => {\r\n            setBase64Image(reader.result);\r\n            setMediaType(\"image\");\r\n          };\r\n          reader.onerror = () => setMediaType(\"file\");\r\n          reader.readAsDataURL(blob);\r\n        })\r\n        .catch(() => setMediaType(\"file\"));\r\n    } else if (imageTypes.includes(extension)) {\r\n      setMediaType(\"image\");\r\n    } else if (videoTypes.includes(extension)) {\r\n      setMediaType(\"video\");\r\n    } else {\r\n      setMediaType(\"file\");\r\n    }\r\n  }, [url, isIphone]);\r\n\r\n  if (!mediaType) return <></>;\r\n\r\n  return (\r\n    <>\r\n      {mediaType === \"image\" ? (\r\n        isIphone && url.endsWith(\".avif\") ? (\r\n          <img\r\n            src={base64Image || \"\"}\r\n            alt=\"media\"\r\n            className={className}\r\n            style={{ maxWidth: \"100%\" }}\r\n            onClick={onClick}\r\n          />\r\n        ) : (\r\n          <picture>\r\n            {url.endsWith(\".avif\") && <source srcSet={url} type=\"image/avif\" />}\r\n            <img\r\n              src={url.endsWith(\".avif\") ? url.replace(\".avif\", \".jpg\") : url}\r\n              alt=\"media\"\r\n              className={className}\r\n              style={{ maxWidth: \"100%\" }}\r\n              onClick={onClick}\r\n            />\r\n          </picture>\r\n        )\r\n      ) : mediaType === \"video\" ? (\r\n        <video\r\n          controls\r\n          style={{ maxWidth: \"100%\", cursor: \"pointer\" }}\r\n          className={className}\r\n          onClick={onClick}\r\n        >\r\n          <source src={url} />\r\n        </video>\r\n      ) : (\r\n        <Link\r\n          to={url}\r\n          download\r\n          target=\"_blank\"\r\n          title=\"File\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"h-100 d-inline-block chatfiles\"\r\n        >\r\n          <img src={fileIcon} alt=\"File\" style={{ maxWidth: \"100%\" }} />\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaRendererFile;\r\n"],"names":["_ref","isOpen","onClose","children","userdetail","userChatDetail","LoginData","to_id","getChatAfterSave","refreshchat","ignoreInitialScroll","useRef","chatEndRef","Totalcountmessage","setTotalcountmessage","useState","userblock","setuserblock","message","setMessage","errormessage","seterrormessage","chooseallId_left","setchooseallId_left","showPopError","setShowPopError","errorPopMessage","setPoperrorMessage","Isfile","setFiles","IdArray","setIdArray","istoid","settoid","forenter","setforenter","LoginDataUser","setLoginData","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","apiUrl","seenn","setSeen","arrow","setarrow","error","seterror","spinner","setspinner","restr_message","setrestr_message","t","useTranslation","selectedImage","setSelectedImage","searchText","setSearchText","filteredMessages","setFilteredMessages","messages","setMessages","inputRef","chatBoxRef","storedUsername","localStorage","getItem","isManualEnter","setIsManualEnter","JSON","parse","offset","setOffset","hasMore","setHasMore","loadingMore","setLoadingMore","useEffect","savedLanguage","i18n","language","changeLanguage","handleKeyDownn","e","key","document","addEventListener","removeEventListener","handleKeyDownr","event","window","showMenu","setShowMenu","handleCloseDeletePopup","setShowMenu_Left","toggleMenu","index","showPicker","setShowPicker","pickerRef","handleClickOutside","current","contains","target","setTimeout","chatContainer","scrollTop","scrollHeight","hanldeseenmessagenew","handleKeyDownnn","userLogin","id","Number","getmessageCount","console","log","async","formData","user_id","res","axios","post","headers","Accept","data","alldata","results","unreadCount","filter","item","read","length","err","response","request","ws","WebSocket","onmessage","receivedMessage","senderId","receiverId","loggedInUserId","includes","setMessageFormessage","setMessageForultiple","getSEndMessagequick","scrollIntoView","behavior","block","close","handleScroll","chatBox","isAtTop","isAtBottom","clientHeight","formdata","newOffset","newMessages","fetchMessages","hanldeseenmessage","status","chatsectionUser","idd","result","checkuserblock","calculateAge","birthday","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","restrictedWords","trim","convertToPng","file","Promise","resolve","reject","reader","FileReader","onload","img","Image","canvas","createElement","width","height","getContext","drawImage","toBlob","blob","pngFile","File","name","replace","type","lastModified","getTime","Error","onerror","src","readAsDataURL","recid","prevMessages","msg","recidArray","form","n","Array","isArray","formatTime","dateString","cleanDateString","osloTime","DateTime","fromISO","zone","isValid","invalidExplanation","setZone","Intl","DateTimeFormat","resolvedOptions","timeZone","toFormat","handledeletemainpopup","deleteev","chooseallId","setchooseallId","showdeletebutton","setshowdeletebutton","selectall","setselectall","handlechooseAll","prev","getFileSrc","fileUrl","some","ext","endsWith","showMenu_Left","handle","timer","clearTimeout","_jsx","_Fragment","_jsxs","className","onClick","classList","ErrorPop","SuccessPop","Link","to","profile_image","makeImagePrivate","alt","require","username","gender","birthday_date","birthday_date_her","location","placeholder","onInput","searchValue","value","toLowerCase","filtered","chat","handlesearchmessage","other_id","handleallselect","ref","style","maxHeight","overflow","display","flexWrap","justifyContent","role","map","user1_id","user1_makeImagePrivate","user1_profile","f","fileIndex","fileSrc","position","HiDotsVertical","cursor","checked","onChange","date","MediaRendererFile","url","FaAngleDown","top","left","backgroundColor","alignItems","zIndex","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","maxWidth","borderRadius","objectFit","onSubmit","preventDefault","FormData","commentText","currentWordCount","text","split","append","forEach","handleSend","selectedFiles","from","files","validFiles","errorFiles","isImage","startsWith","size","push","convertedFile","join","prevFiles","focus","KeyboardEvent","code","keyCode","bubbles","dispatchEvent","multiple","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","inputValue","hasRestrictedWord","word","disabled","isVideo","URL","createObjectURL","controls","fileIcon","_","i","removeImage","mediaType","setMediaType","isIphone","setIsIphone","base64Image","setBase64Image","userAgent","navigator","test","extension","pop","fetch","then","onloadend","catch","srcSet","download","title","rel"],"sourceRoot":""}
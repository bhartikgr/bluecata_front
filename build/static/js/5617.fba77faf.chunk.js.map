{"version":3,"file":"static/js/5617.fba77faf.chunk.js","mappings":"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","sources":["components/Footer.jsx","pages/GalleryMedia.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport GDPRPopup from \"./GDPRPopup\";\n\nexport const Footer = () => {\n  const { t } = useTranslation();\n  const [signedup, setsignedup] = useState(false);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const currentYear = new Date().getFullYear();\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin !== null) {\n      setsignedup(true);\n    }\n  }, []);\n  return (\n    <>\n      <footer className=\"d-block\">\n        <div className=\"ftblocks py-5\">\n          <div className=\"container-lg\">\n            <div className=\"row gy-4\">\n              <div className=\"col-md-6\">\n                <div className=\"d-flex flex-column gap-3 ftlogoblock\">\n                  <h4>{t(\"WELCOMETOAMOURETTE\")}</h4>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <h6>{t(\"Yourenow\")}</h6>\n                    <Link to=\"/helpsupport\" className=\"needsign\">\n                      <span\n                        dangerouslySetInnerHTML={{ __html: t(\"Needhelp\") }}\n                      />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"d-flex flex-column gap-3 ftblock ps-md-5\">\n                  <h3>{t(\"About\")}</h3>\n                  <div className=\"d-flex flex-column gap-2 ftlink\">\n                    <Link to=\"/setting\">{t(\"Membership\")}</Link>\n                    <Link to=\"/helpsupport\">{t(\"Help_and_support\")}</Link>\n                    <Link to=\"/setting\">{t(\"Contact_us\")}</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"d-flex flex-column gap-3 ftblock ps-md-5\">\n                  <h3>{t(\"Resources\")}</h3>\n                  <div className=\"d-flex flex-column gap-2 ftlink\">\n                    <Link to=\"/securitypage\">{t(\"Security\")}</Link>\n                    <Link to=\"/setting\">{t(\"privacy\")}</Link>\n                    <Link to=\"/helpsupport\">{t(\"Terms_and_conditions\")}</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12\">\n                <div className=\"d-block ftlogoblock\">\n                  <p className=\"copyrighttext\">\n                    &copy; {t(\"Copyright_2024_all_rights_reserved\")}{\" \"}\n                    {currentYear}, {t(\"all_rights_reserved\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <GDPRPopup />\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Headertwo from \"../components/Headertwo\";\r\nimport { Footer } from \"../components/Footer\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nimport image1 from \"../assets/images/image1.jfif\";\r\nimport image2 from \"../assets/images/image2.jfif\";\r\nimport image3 from \"../assets/images/image4.jfif\";\r\nimport image4 from \"../assets/images/image5.jfif\";\r\nimport image5 from \"../assets/images/angular.jpg\";\r\nimport image6 from \"../assets/images/image3.png\";\r\nimport axios from \"axios\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../i18n\";\r\nexport default function GalleryMedia() {\r\n  const navigate = useNavigate();\r\n  const [viewalbum, setviewalbum] = useState(false);\r\n  const [isallmedia, setallmedia] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\r\n  const [isGrouppost, setIsGrouppost] = useState([]);\r\n  const [albumimages, setAlbumimages] = useState([]);\r\n  const [groupId, setgroupId] = useState(\"\");\r\n  const [isGrouppostvideo, setGrouppostvideo] = useState([]);\r\n  const [mediaImages, setmediaImages] = useState([]);\r\n  const [mediaVideos, setmediaVideos] = useState([]);\r\n  const [LoginData, setLoginData] = useState(null);\r\n  const [Isslug, setSlug] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  const [groupdetail, setgroupdetail] = useState(\"\");\r\n  const images = [\r\n    {\r\n      src: image1,\r\n      wideSrc: image1,\r\n      alt: \"Nature\",\r\n    },\r\n    {\r\n      src: image2,\r\n      wideSrc: image3,\r\n      alt: \"Snow\",\r\n    },\r\n    {\r\n      src: image4,\r\n      wideSrc: image5,\r\n      alt: \"Mountains\",\r\n    },\r\n    {\r\n      src: image6,\r\n      wideSrc: image6,\r\n      alt: \"Lights\",\r\n    },\r\n    {\r\n      src: image1,\r\n      wideSrc: image1,\r\n      alt: \"Nature\",\r\n    },\r\n    {\r\n      src: image2,\r\n      wideSrc: image3,\r\n      alt: \"Snow\",\r\n    },\r\n    {\r\n      src: image4,\r\n      wideSrc: image5,\r\n      alt: \"Mountains\",\r\n    },\r\n    {\r\n      src: image6,\r\n      wideSrc: image6,\r\n      alt: \"Lights\",\r\n    },\r\n  ];\r\n\r\n  //const [modalOpen, setModalOpen] = useState(false);\r\n  const closeModal = () => setModalOpen(false);\r\n\r\n  const showSlide = (n) => {\r\n    if (n > images.length) setCurrentSlideIndex(1);\r\n    else if (n < 1) setCurrentSlideIndex(images.length);\r\n    else setCurrentSlideIndex(n);\r\n  };\r\n  useEffect(() => {\r\n    if (modalOpen) {\r\n      // Disable scrolling when modal is open\r\n      document.body.style.overflowY = \"hidden\";\r\n    } else {\r\n      // Enable scrolling when modal is closed\r\n      document.body.style.overflowY = \"auto\";\r\n    }\r\n\r\n    // Cleanup to restore the overflow style when the component unmounts\r\n    return () => {\r\n      document.body.style.overflowY = \"auto\";\r\n    };\r\n  }, [modalOpen]);\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === \"Escape\") {\r\n        setModalOpen(false);\r\n      }\r\n    };\r\n\r\n    // Add event listener\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    // Cleanup event listener on unmount\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem(\"userLogin\");\r\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\r\n    setLoginData(userLogin);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (LoginData && id) {\r\n      getUserDetails(id);\r\n    }\r\n  }, [LoginData, id]);\r\n  const getUserDetails = async (id) => {\r\n    let formData = {\r\n      user_id: id,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getUserDetail\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      var respo = res.data;\r\n      console.log(respo.row.length);\r\n      if (respo.row.length === 0) {\r\n        navigate(\"/friendsearch\");\r\n      } else {\r\n      }\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        //console.error(\"Request data:\", err.request);\r\n      } else {\r\n        // console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (id) {\r\n      getUserMediaDetails(id);\r\n    }\r\n  }, [id]);\r\n  const getUserMediaDetails = async (id) => {\r\n    let formData = {\r\n      user_id: id,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getUserMediaDetails\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n\r\n      var respo = res.data;\r\n      console.log(\"Original Data:\", respo.results);\r\n\r\n      let images = [];\r\n      let videos = [];\r\n\r\n      respo.results.forEach((item) => {\r\n        const mediaArray = JSON.parse(item.images); // Parse the JSON string\r\n\r\n        mediaArray.forEach((media) => {\r\n          if (media.match(/\\.(jpeg|jpg|png|gif|webp)$/i)) {\r\n            images.push(media);\r\n          } else if (\r\n            media.match(/\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp|mkv|webm)$/i)\r\n          ) {\r\n            videos.push(media);\r\n          }\r\n        });\r\n      });\r\n      setmediaImages(images);\r\n      setmediaVideos(videos);\r\n      console.log(\"Images:\", images);\r\n      console.log(\"Videos:\", videos);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error(\"Server Response Error:\", err.response.data);\r\n      } else if (err.request) {\r\n        console.error(\"No Response Received:\", err.request);\r\n      } else {\r\n        console.error(\"Request Error:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (id) {\r\n      getUserMediaAlbumDetails(id);\r\n    }\r\n  }, [id]);\r\n  const getUserMediaAlbumDetails = async (id) => {\r\n    let formData = {\r\n      user_id: id,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrl + \"getUserMediaAlbumDetails\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n\r\n      var redata = res.data.results;\r\n      console.log(redata);\r\n\r\n      const updatedAlbumImages = redata.map((album) => {\r\n        let mediaArray = [];\r\n\r\n        // Check if album.img is valid before parsing\r\n        if (album.img && album.img !== \"undefined\" && album.img !== \"\") {\r\n          try {\r\n            mediaArray = JSON.parse(album.img); // Parse JSON array\r\n          } catch (e) {\r\n            console.error(\r\n              \"Error parsing images for album:\",\r\n              album.album_name,\r\n              e\r\n            );\r\n            mediaArray = []; // In case of error, use an empty array\r\n          }\r\n        }\r\n\r\n        // Collect all images or videos\r\n        const mediaItems = mediaArray.filter(\r\n          (media) =>\r\n            media.match(/\\.(jpeg|jpg|png|gif|webp)$/i) || // Check for images\r\n            media.match(/\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp|mkv|webm)$/i) // Check for videos\r\n        );\r\n\r\n        return {\r\n          album_name: album.album_name,\r\n          media_count: album.media_count, // Total count of media items (images + videos)\r\n          mediaItems: mediaItems, // Store all valid media URLs\r\n          img: mediaItems.length > 0 ? mediaItems[0] : \"\", // Store the first media item if available\r\n          album_id: album.album_id,\r\n        };\r\n      });\r\n\r\n      // Set the state\r\n      setAlbumimages(updatedAlbumImages);\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error(\"Server Response Error:\", err.response.data);\r\n      } else if (err.request) {\r\n        console.error(\"No Response Received:\", err.request);\r\n      } else {\r\n        console.error(\"Request Error:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const getallmedia = async (album_id) => {\r\n    let formData = {\r\n      album_id: album_id,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(apiUrl + \"getallmediaa\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n\r\n      if (res && res.data && res.data.results) {\r\n        const redata = res.data.results;\r\n\r\n        // Parsing the images array and updating state\r\n        const updatedMedia = redata.map((item) => {\r\n          let mediaArray = [];\r\n\r\n          // Check if the 'images' field exists and is a valid string\r\n          if (\r\n            item.images &&\r\n            item.images !== \"undefined\" &&\r\n            item.images !== \"\"\r\n          ) {\r\n            try {\r\n              mediaArray = JSON.parse(item.images); // Parse the string into an array\r\n            } catch (e) {\r\n              console.error(\"Error parsing images for item:\", item.id, e);\r\n              mediaArray = []; // In case of an error, use an empty array\r\n            }\r\n          }\r\n\r\n          // Collect media items, separating images and videos\r\n          const mediaItems = mediaArray.filter(\r\n            (media) =>\r\n              media.match(/\\.(jpeg|jpg|png|gif|webp)$/i) || // Check for images\r\n              media.match(/\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp|mkv|webm)$/i) // Check for videos\r\n          );\r\n\r\n          return {\r\n            mediaItems: mediaItems, // Store the parsed media array\r\n          };\r\n        });\r\n        setviewalbum(true);\r\n        console.log(updatedMedia);\r\n        // Set the parsed media data in state\r\n        setallmedia(updatedMedia);\r\n      }\r\n    } catch (err) {\r\n      if (err.response) {\r\n        console.error(\"Server Response Error:\", err.response.data);\r\n      } else if (err.request) {\r\n        console.error(\"No Response Received:\", err.request);\r\n      } else {\r\n        console.error(\"Request Error:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const openModal = (mediaArray, index) => {\r\n    setIsGrouppost(mediaArray); // Set the full list of images or videos\r\n    setCurrentSlideIndex(index); // Set the clicked item's index\r\n    setModalOpen(true);\r\n  };\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\r\n    console.log(\"language\");\r\n    console.log(savedLanguage);\r\n\r\n    // Change the language if it's not already the current language\r\n    if (i18n.language !== savedLanguage) {\r\n      i18n.changeLanguage(savedLanguage);\r\n    }\r\n  }, [i18n, t]);\r\n  return (\r\n    <>\r\n      <Headertwo />\r\n      <section className=\"ggboxes d-block gapy\">\r\n        <div className=\"container-lg\">\r\n          <div className=\"row gy-4 mb-5\">\r\n            <div className=\"col-md-6\">\r\n              <h1 className=\"pagetitle\">{`${t(\"Photos\")}`}</h1>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex justify-content-md-end\">\r\n                {/* <div className=\"d-flex gap-4 align-items-center ggboxbtn\">\r\n                  <Link href=\"#\">\r\n                    {\" \"}\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width={24}\r\n                      height={24}\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth={2}\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      className=\"icon icon-tabler icons-tabler-outline icon-tabler-plus\"\r\n                    >\r\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                      <path d=\"M12 5l0 14\" />\r\n                      <path d=\"M5 12l14 0\" />\r\n                    </svg>{\" \"}\r\n                    Opprett album\r\n                  </Link>\r\n                  <Link href=\"#\">Legg till bilder/video</Link>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <Tabs>\r\n                <TabList>\r\n                  <Tab>{`${t(\"Images\")}`}</Tab>\r\n                  <Tab>{`${t(\"Videos\")}`}</Tab>\r\n                  <Tab>{`${t(\"Album\")}`}</Tab>\r\n                </TabList>\r\n\r\n                <TabPanel>\r\n                  <div className=\"row gy-4\">\r\n                    {mediaImages.length > 0 ? (\r\n                      mediaImages.map((post, index) => (\r\n                        <div className=\"col-md-3\" key={index}>\r\n                          <div className=\"d-flex flex-column gap-2\">\r\n                            <div className=\"ggimagebox ofit overflow-hidden rounded-3 d-block\">\r\n                              <img\r\n                                src={post}\r\n                                alt=\"Media\"\r\n                                onClick={() => openModal(mediaImages, index)} // Pass media array & index\r\n                                className=\"hover-shadow\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                    )}\r\n                  </div>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <div className=\"row gy-4\">\r\n                    {mediaVideos.length > 0 ? (\r\n                      mediaVideos.map((post, index) => (\r\n                        <div className=\"col-md-3\" key={index}>\r\n                          <div className=\"d-flex flex-column gap-2\">\r\n                            <div className=\"ggimagebox ofit\">\r\n                              <video\r\n                                onClick={() => openModal(mediaVideos, index)} // Pass media array & index\r\n                                controls\r\n                                alt=\"video\"\r\n                              >\r\n                                <source src={post} type=\"video/mp4\" />\r\n                                {`${t(\"Your_browser_does\")}`}\r\n                              </video>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                    )}\r\n                  </div>\r\n                </TabPanel>\r\n                <TabPanel>\r\n                  <div className=\"row gy-4\">\r\n                    {\r\n                      !viewalbum && albumimages.length > 0\r\n                        ? albumimages.map((album, index) => (\r\n                            <div className=\"col-md-3\" key={index}>\r\n                              <div className=\"d-flex flex-column gap-2\">\r\n                                <div className=\"ggimagebox ofit\">\r\n                                  <img\r\n                                    src={album.img} // You can choose to show the first image as a sample\r\n                                    alt=\"Media\"\r\n                                    onClick={() =>\r\n                                      getallmedia(album.album_id, index)\r\n                                    } // Pass media array & index\r\n                                    className=\"hover-shadow\"\r\n                                  />\r\n                                  <span>\r\n                                    {album.album_name} ({album.media_count})\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                        : !viewalbum && <p>{`${t(\"No_avalibale_media\")}`}.</p> // Show message when viewalbum is true and no media is available\r\n                    }\r\n\r\n                    {viewalbum &&\r\n                      (isallmedia.length > 0 ? (\r\n                        isallmedia.map((album, albumIndex) =>\r\n                          album.mediaItems.length > 0 ? (\r\n                            album.mediaItems.map((media, mediaIndex) => (\r\n                              <div\r\n                                className=\"col-md-3\"\r\n                                key={`${albumIndex}-${mediaIndex}`}\r\n                              >\r\n                                <div className=\"d-flex flex-column gap-2\">\r\n                                  <div className=\"ggimagebox ofit\">\r\n                                    {media.match(\r\n                                      /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp|mkv|webm)$/i\r\n                                    ) ? (\r\n                                      <video\r\n                                        controls\r\n                                        onClick={\r\n                                          () =>\r\n                                            openModal(\r\n                                              album.mediaItems,\r\n                                              mediaIndex\r\n                                            ) // Pass the media array & index\r\n                                        }\r\n                                        className=\"hover-shadow\"\r\n                                      >\r\n                                        <source src={media} type=\"video/mp4\" />\r\n                                        {`${t(\"Your_browser_does\")}`}\r\n                                      </video>\r\n                                    ) : (\r\n                                      <img\r\n                                        src={media} // Display the image\r\n                                        alt=\"Media\"\r\n                                        onClick={\r\n                                          () =>\r\n                                            openModal(\r\n                                              album.mediaItems,\r\n                                              mediaIndex\r\n                                            ) // Pass the media array & index\r\n                                        }\r\n                                        className=\"hover-shadow\"\r\n                                      />\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                          ) : (\r\n                            <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                          )\r\n                        )\r\n                      ) : (\r\n                        <p>{`${t(\"No_avalibale_media\")}`}.</p>\r\n                      ))}\r\n                  </div>\r\n                </TabPanel>\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* pop up code */}\r\n      {modalOpen && (\r\n        <div id=\"myModal\" className=\"modalgg\">\r\n          <span className=\"close cursor\" onClick={() => setModalOpen(false)}>\r\n            &times;\r\n          </span>\r\n          <div className=\"modal-content\">\r\n            {isGrouppost.length > 0 ? (\r\n              isGrouppost.map((post, index) => (\r\n                <div\r\n                  className=\"mySlides\"\r\n                  style={{\r\n                    display: currentSlideIndex === index ? \"block\" : \"none\",\r\n                  }}\r\n                  key={index}\r\n                >\r\n                  <div className=\"numbertext\">\r\n                    {index + 1} / {isGrouppost.length}\r\n                  </div>\r\n\r\n                  {post.match(/\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i) ? (\r\n                    <img src={post} alt=\"img\" />\r\n                  ) : post.match(/\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i) ? (\r\n                    <video controls>\r\n                      <source src={post} type=\"video/mp4\" />\r\n                      Your browser does not support the video tag.\r\n                    </video>\r\n                  ) : null}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No media available.</p>\r\n            )}\r\n\r\n            {/* Navigation Arrows */}\r\n            <a\r\n              className=\"prev\"\r\n              onClick={() =>\r\n                setCurrentSlideIndex((prev) =>\r\n                  prev === 0 ? isGrouppost.length - 1 : prev - 1\r\n                )\r\n              }\r\n            >\r\n              &#10094;\r\n            </a>\r\n            <a\r\n              className=\"next\"\r\n              onClick={() =>\r\n                setCurrentSlideIndex((prev) =>\r\n                  prev === isGrouppost.length - 1 ? 0 : prev + 1\r\n                )\r\n              }\r\n            >\r\n              &#10095;\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* pop up code */}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"names":["Footer","t","useTranslation","signedup","setsignedup","useState","useEffect","savedLanguage","localStorage","getItem","i18n","language","changeLanguage","currentYear","Date","getFullYear","storedUsername","JSON","parse","_jsx","_Fragment","children","className","_jsxs","Link","to","dangerouslySetInnerHTML","__html","GDPRPopup","GalleryMedia","navigate","useNavigate","viewalbum","setviewalbum","isallmedia","setallmedia","modalOpen","setModalOpen","currentSlideIndex","setCurrentSlideIndex","isGrouppost","setIsGrouppost","albumimages","setAlbumimages","groupId","setgroupId","isGrouppostvideo","setGrouppostvideo","mediaImages","setmediaImages","mediaVideos","setmediaVideos","LoginData","setLoginData","Isslug","setSlug","id","useParams","groupdetail","setgroupdetail","document","body","style","overflowY","handleKeyDown","event","key","window","addEventListener","removeEventListener","apiUrl","userLogin","getUserDetails","async","formData","user_id","respo","axios","post","headers","Accept","data","console","log","row","length","err","response","request","getUserMediaDetails","results","images","videos","forEach","item","media","match","push","error","message","getUserMediaAlbumDetails","redata","updatedAlbumImages","map","album","mediaArray","img","e","album_name","mediaItems","filter","media_count","album_id","openModal","index","Headertwo","Tabs","TabList","Tab","TabPanel","src","alt","onClick","controls","type","res","updatedMedia","getallmedia","albumIndex","mediaIndex","display","prev"],"sourceRoot":""}
{"version":3,"file":"static/js/9904.06625b94.chunk.js","mappings":"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,EAAQ,GADa,GAAGb,IAEf,IAATc,EAAmB,gBAAgBd,IACnCc,EAAO,EAAU,GAAGA,OAAUd,IAC9Be,EAAQ,EAAU,GAAGA,OAAWf,IAChCgB,EAAS,GAAW,GAAGA,OAAYhB,IAChC,GAAGiB,OAAWjB,GAAc,GAErC/C,EAAAA,EAAAA,YAAU,KACR,MAAMiE,EAAiBrD,IACH,eAAdA,EAAMsD,IACRC,GAAUvG,GACa,cAAdgD,EAAMsD,KACfE,GAAUvG,EACZ,EAKF,OAFAwG,OAAOC,iBAAiB,UAAWL,GAE5B,KACLI,OAAOE,oBAAoB,UAAWN,EAAc,CACrD,GACA,CAACrG,EAAYC,IAGhB,MAAM2G,IAAoBrC,GAASsC,QAAUxF,EAmBvCyF,GAAkB,CACtB,OACA,WACA,WACA,MACA,WACA,UACA,UACA,QACA,SACA,WACA,gBACA,SACA,WACA,eACA,mBACA,sBACA,OACA,aACA,OACA,OACA,SACA,OACA,SACA,UACA,OACA,YACA,WACA,WACA,WACA,UACA,OACA,SACA,gBACA,eACA,OACA,SACA,UACA,aACA,YACA,WACA,WACA,UACA,UACA,YACA,YACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,eACA,aACA,sBACA,kBACA,yBACA,aACA,OACA,gBACA,gBACA,eACA,QACA,QACA,YACA,OACA,QACA,QACA,OACA,WACA,QACA,iBACA,aACA,eACA,OACA,iBACA,iBACA,UACA,cACA,OACA,UAEIC,GAAmBC,UACnBC,EAAEC,gBAAgBD,EAAEC,iBAExBxC,IAAW,GAEX,IAAIyC,EAAW,CACbrD,YAAamD,EAAEnD,aAAemD,EAAEG,OAAOtD,YAAYuD,MACnDhE,WAAY4D,EAAE5D,YAAc4D,EAAEG,OAAO/D,WAAWgE,MAChD1D,QAASjE,EAAU6D,IAErB,IACE,MAAM+D,QAAYC,EAAAA,EAAMC,KAAKlD,EAAS,kBAAmB6C,EAAU,CACjEM,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGpBpF,QAAQC,IAAI+E,EAAIpE,MAChBwB,IAAW,GACXF,GAAY,IACZ3E,IACAgB,EAAW8B,QAAQC,eAAe,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","sources":["components/Usergallery.jsx","pages/search/Searchevent.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const Usergallery = ({\n  isOpen1,\n  onClose1,\n  children,\n  seperateGallerydetail,\n  UserDetail,\n  LoginData,\n  getUserfav,\n  GalleryCommets,\n  getCommentPost,\n  GalleryIdDetailGet,\n  galleryData,\n  previousId,\n  nextId,\n  getgallerydetialnext,\n  getgallerydetialprev,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const chatEndRef = useRef(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isparamVl, setparamVl] = useState(seperateGallerydetail);\n  const [isgallid, setgallid] = useState(GalleryIdDetailGet);\n  const [restr_message, setrestr_message] = useState(false);\n  const [GalleryCommetss, setGalleryCommetss] = useState(GalleryCommets);\n  const { t } = useTranslation();\n  const [input, setInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    setGalleryCommetss(GalleryCommets);\n    setparamVl(seperateGallerydetail);\n    setgallid(GalleryIdDetailGet);\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView();\n    }\n  }, [GalleryCommets, seperateGallerydetail, GalleryIdDetailGet]);\n\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n\n        const gid = String(receivedMessage.gallery_id); // Convert to string\n        const galleryIdDetail = String(GalleryIdDetailGet); // Convert to string as well\n\n        const log = LoginData.id;\n\n        // Check if gid matches the expected GalleryIdDetailGet\n        if (galleryIdDetail === gid) {\n          if (receivedMessage.event === \"GalleryLike\") {\n            console.log(receivedMessage);\n            // Update the local state based on the received message\n            setparamVl((prev) => {\n              if (prev.id === receivedMessage.gallery_id) {\n                return {\n                  ...prev,\n                  total_favourites: receivedMessage.total_favourites,\n                  user_favourited:\n                    log === receivedMessage.user_id\n                      ? receivedMessage.user_favourited // Update user_favourited only if IDs match\n                      : prev.user_favourited, // Toggle the favourited state\n                };\n              }\n              return prev;\n            });\n          }\n          if (receivedMessage.event === \"GalleryPost\") {\n            // Update state with the new comment\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.user_id,\n                username: receivedMessage.username,\n                description: receivedMessage.message,\n                profile_image: receivedMessage.profile_image,\n                makeImagePrivate: receivedMessage.makeImagePrivate,\n                date: receivedMessage.date,\n                lastInsertId: receivedMessage.lastInsertId,\n              },\n            ]);\n          }\n        } else {\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, GalleryIdDetailGet]);\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"ArrowRight\") {\n        nextImage(previousId); // Move to next image when Right Arrow is pressed\n      } else if (event.key === \"ArrowLeft\") {\n        prevImage(nextId); // Move to previous image when Left Arrow is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [previousId, nextId]);\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault(); // Prevent default only if `e` is an actual event\n\n    setspinner(true);\n\n    let formData = {\n      description: e.description || e.target.description.value,\n      gallery_id: e.gallery_id || e.target.gallery_id.value,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"GalleryPostSave\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(res.data);\n      setspinner(false);\n      setComments(\"\");\n      getCommentPost();\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const galleryPostLike = async (id) => {\n    let formData = {\n      user_id: LoginData.id,\n      id: id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"galleryPostLike\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      getUserfav(\"\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  // Function to handle next image\n  // Function to handle next image\n  const nextImage = (id_id) => {\n    getgallerydetialnext(id_id);\n  };\n\n  // Function to handle previous image\n  const prevImage = (id_id) => {\n    getgallerydetialprev(id_id);\n  };\n  const [showPicker, setShowPicker] = useState(false);\n  const pickerRef = useRef(null); // hold refs for each index\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n        setShowPicker(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        gallery_id: seperateGallerydetail.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let deleteev = {\n      user_id: userLogin.id,\n      id: seperateGallerydetail.id,\n      post_type: \"gallery\",\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletePostDashboard\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Post deleted successfully\");\n\n      setisPopupOpen_delete(false);\n\n      setTimeout(() => {\n        onClose1();\n        setShowPopSuccess(false);\n        window.location.reload();\n      }, 1000);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={() => nextImage(previousId)}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={() => prevImage(nextId)}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-2 p-md-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    {isparamVl.image && typeof isparamVl.image === \"string\" ? (\n                      // Check if the URL ends with a valid image extension\n                      <MediaRenderer\n                        className=\"w-100 h-100\"\n                        url={isparamVl.image}\n                      />\n                    ) : (\n                      // Fallback when `item.image` is undefined or invalid\n                      <p>{t(\"No_avalibale_media\")}</p>\n                    )}\n                  </div>\n                  {userLogin.id === isparamVl.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 py-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link to={`/friend/${isparamVl.uid}`}>\n                        {isparamVl.username}\n                      </Link>\n\n                      <h6>{formateTime(isparamVl.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {isparamVl &&\n                        isparamVl.description &&\n                        isparamVl.description.length > 150\n                          ? isparamVl.description.substring(0, 150) + \"...\"\n                          : isparamVl?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            onClick={() => galleryPostLike(isparamVl.id)}\n                            className=\"liked  fulw\"\n                          >\n                            {isparamVl.user_favourited ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {isparamVl.total_favourites}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">{GalleryCommetss.length}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GalleryCommetss.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GalleryCommetss.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          {spinner && (\n                            <div\n                              className=\"spinner-border text-success postloader\"\n                              role=\"status\"\n                            >\n                              <span className=\"visually-hidden\">\n                                Loading...\n                              </span>\n                            </div>\n                          )}\n                          <input\n                            type=\"hidden\"\n                            value={seperateGallerydetail.id}\n                            name=\"gallery_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                ref={pickerRef}\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 0.5 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Headertwo from \"../../components/Headertwo\";\nimport { LeftsidebarSearch } from \"../../components/LeftsidebarSearch\";\nimport { SlOptions } from \"react-icons/sl\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../../i18n\";\nimport { Usergallery } from \"../../components/Usergallery\";\nimport chat from \"../../assets/images/chatpost.png\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport MediaRenderer from \"../../components/MediaRenderer\";\nimport { DateTime } from \"luxon\";\nfunction Searchevent() {\n  const navigate = useNavigate();\n  var apiUrlevent = \"https://backend.amourette.no/api/\";\n  var apiUrlMembers = \"https://backend.amourette.no/api/members/\";\n  const [GalleryIdDetailGet, setGalleryIdDetailGet] = useState(\"\");\n  const [UserDetail, setUserDetail] = useState(\"\");\n  const commentRefs = useRef([]); // Ref to manage scroll to the last comment\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [GalleryCommets, setGalleryCommets] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [seperateGallerydetail, setseperateGallerydetail] = useState(\"\");\n  const [refreshNotifications, setRefreshNotifications] = useState(false);\n  const [isGroup, setGroup] = useState([]);\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  // const [commentInputs, setCommentInputs] = useState(\n  //   Array(isGroup.length).fill(\"\")\n  // );\n  const [restrictedStates, setRestrictedStates] = useState([]);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [postId, setpostId] = useState(\"\");\n  const [LoginData, setLoginData] = useState(\"\");\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const searchQuery = queryParams.get(\"q\");\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const { t, i18n } = useTranslation();\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const openModal = () => setModalOpen(true);\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    console.log(userLogin);\n    console.log(\"test\");\n    if (userLogin === null) {\n      navigate(\"/login\");\n    }\n  }, []);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    setLoginData(userLogin);\n  }, []);\n  useEffect(() => {\n    getUserDetail();\n  }, []);\n  const getUserDetail = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getUserDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        setUserDetail(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    getAllfriends();\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrlMembers + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n      console.log(friendUserIds, \"dd\");\n      setAllfriendId(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Treat input as a Europe/Oslo time (even though it has 'Z')\n    // Remove the 'Z' if it exists\n    const cleanDateString = dateString.replace(/Z$/, \"\");\n\n    // Parse it as if it's Oslo local time (not UTC)\n    const osloTime = DateTime.fromISO(cleanDateString, { zone: \"Europe/Oslo\" });\n\n    if (!osloTime.isValid) {\n      console.error(\"Invalid Oslo Time:\", osloTime.invalidExplanation);\n      return \"Invalid Date\";\n    }\n\n    // Convert to current system's local timezone\n    const localTime = osloTime.setZone(\n      Intl.DateTimeFormat().resolvedOptions().timeZone\n    );\n\n    const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    console.log(osloTime);\n    const now = DateTime.now().setZone(userTimeZone);\n    const localPostTime = localTime.toFormat(\"HH:mm\");\n\n    const diffInMinutes = now.diff(localTime, \"minutes\").minutes;\n    const diffInHours = now.diff(localTime, \"hours\").hours;\n    const diffInDays = now.diff(localTime, \"days\").days;\n    const diffInWeeks = Math.floor(diffInDays / 7);\n    const diffInMonths = Math.floor(diffInDays / 30);\n    const diffInYears = Math.floor(diffInDays / 365);\n\n    if (diffInMinutes < 60) return `${localPostTime}`;\n    if (diffInHours < 24) return `${localPostTime}`;\n    if (Math.floor(diffInDays) === 1) return `Yesterday at ${localPostTime}`;\n    if (diffInDays < 7) return `${Math.floor(diffInDays)}d ${localPostTime}`;\n    if (diffInWeeks < 4) return `${diffInWeeks}w ${localPostTime}`;\n    if (diffInMonths < 12) return `${diffInMonths}m ${localPostTime}`;\n    return `${diffInYears}y ${localPostTime}`;\n  };\n  const handlegroupPostDeleteconfirm = async (id) => {\n    setpostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this post\");\n  };\n\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  useEffect(() => {\n    if (searchQuery === null) {\n      var search = \"\";\n    } else {\n      var search = searchQuery;\n    }\n    geteventsearch(search);\n  }, [AllfriendId]);\n  const geteventsearch = async (search) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const userIdsWithSelf = [...AllfriendId, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      search: search,\n      user_id: userLogin.id,\n      user_ids: userIdsString,\n    };\n\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrlevent + \"get_eventSearch\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setGroup(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryDetail = async (galleryId) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    setGalleryIdDetailGet(galleryId);\n    getGalleryComments(galleryId);\n    let formData = {\n      id: galleryId,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlMembers + \"getGalleryDetail\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        openPopup1();\n        setseperateGallerydetail(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const getGalleryComments = async (g_id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      id: g_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlMembers + \"getGalleryComments\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      var respo = res.data.results;\n\n      setGalleryCommets(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getUserfav = async () => {\n    getGalleryDetail(GalleryIdDetailGet);\n  };\n  console.log(isGroup);\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      <section className=\"dashbox d-block\">\n        <div className=\"container-lg\">\n          <div className=\"row justify-content-between\">\n            <LeftsidebarSearch />\n\n            <div className=\"col-lg-8 col-xl-8\">\n              <div className=\"d-flex flex-column gap-3\">\n                {isGroup.length > 0 ? (\n                  isGroup.map((post, index) => (\n                    <div className=\"evname d-block mt-4\" key={index}>\n                      <div className=\"d-flex flex-column gap-2\">\n                        <Link\n                          target=\"_blank\"\n                          to={`/friend/${post.uid}`}\n                          className=\"d-flex gap-2 align-items-center\"\n                        >\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                              {post.event_owner_profile_image &&\n                              post.makeImagePrivate === 0 ? (\n                                <img\n                                  src={post.event_owner_profile_image}\n                                  alt=\"Selected\"\n                                />\n                              ) : (\n                                <img\n                                  src={require(\"../../assets/images/thumb.jpg\")}\n                                  alt=\"Profile\"\n                                />\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            <div className=\"d-flex flex-column gap-1 evettimeheaing\">\n                              <p>\n                                <strong className=\"textcolor\">\n                                  {post.event_owner_username}{\" \"}\n                                </strong>\n                              </p>\n                              <h5>{formateTime(post.event_date)}</h5>\n                            </div>\n                          </div>\n                        </Link>\n                        <div className=\"d-block contpost\">\n                          <p>{post.event_description}</p>\n                        </div>\n                        {post.event_image && (\n                          <Link\n                            className=\"postimgfull ofit rounded-2 overflow-hidden\"\n                            target=\"_blank\"\n                            to={`/singleevent/${post.event_slug}`}\n                          >\n                            <MediaRenderer url={post.event_image} />\n                          </Link>\n                        )}\n                        <div className=\"d-flex justify-content-end\">\n                          <div className=\"d-flex gap-3 postchatheart\">\n                            <div className=\"d-flex align-items-center gap-3\">\n                              <button type=\"button\" className=\"btn fulw\">\n                                <img src={chat} alt=\"chatpic\" />\n                              </button>\n                              <p>{post.total_posts}</p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <p>{t(\"Nopostsavailable\")}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"col-lg-3 col-xl-3 sidefixedbox sticky-top h-100 d-none d-lg-block\"></div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default Searchevent;\n"],"names":["Usergallery","_ref","isOpen1","onClose1","children","seperateGallerydetail","UserDetail","LoginData","getUserfav","GalleryCommets","getCommentPost","GalleryIdDetailGet","galleryData","previousId","nextId","getgallerydetialnext","getgallerydetialprev","successPopMessage","setPopsuccessMessage","useState","showPopSuccess","setShowPopSuccess","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","chatEndRef","useRef","currentIndex","setCurrentIndex","isparamVl","setparamVl","isgallid","setgallid","restr_message","setrestr_message","GalleryCommetss","setGalleryCommetss","t","useTranslation","input","setInput","inputRef","storedUsername","localStorage","getItem","userLogin","JSON","parse","useEffect","savedLanguage","console","log","i18n","language","changeLanguage","current","scrollIntoView","ws","WebSocket","onmessage","event","receivedMessage","data","gid","String","gallery_id","galleryIdDetail","id","prev","total_favourites","user_favourited","user_id","prevComments","username","description","message","profile_image","makeImagePrivate","date","lastInsertId","error","close","apiUrl","comments","setComments","spinner","setspinner","formateTime","dateString","postDate","Date","isNaN","getTime","now","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","handleKeyDown","key","nextImage","prevImage","window","addEventListener","removeEventListener","isButtonDisabled","trim","restrictedWords","handlePostSubmit","async","e","preventDefault","formData","target","value","res","axios","post","headers","Accept","behavior","err","response","request","id_id","showPicker","setShowPicker","pickerRef","handleClickOutside","contains","document","deletePost","deleteev","post_type","setTimeout","location","reload","_jsx","_Fragment","_jsxs","className","onClick","classList","AlertDelete","closePopup_delete","onReturnSent","SuccessPop","style","zIndex","type","FaChevronRight","FaChevronLeft","image","MediaRenderer","url","title","handledeletebtn","padding","textAlign","minWidth","background","width","height","borderRadius","position","top","right","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Link","to","uid","length","substring","galleryPostLike","FaHeart","FaRegHeart","src","require","alt","map","comment","index","ref","action","method","onSubmit","fontSize","role","name","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","focus","required","onChange","inputValue","hasRestrictedWord","some","word","toLowerCase","includes","onKeyDown","placeholder","disabled","opacity","navigate","useNavigate","apiUrlMembers","setGalleryIdDetailGet","setUserDetail","AllfriendId","setAllfriendId","setGalleryCommets","modalOpen","setModalOpen","setseperateGallerydetail","refreshNotifications","setRefreshNotifications","isGroup","setGroup","isPopupOpen1","setIsPopupOpen1","restrictedStates","setRestrictedStates","postId","setpostId","setLoginData","useLocation","searchQuery","URLSearchParams","search","get","getUserDetail","row","respo","getAllfriends","friendUserIds","results","friend","cleanDateString","replace","osloTime","DateTime","fromISO","zone","isValid","invalidExplanation","localTime","setZone","resolvedOptions","userTimeZone","localPostTime","toFormat","diffInMinutes","diff","diffInHours","diffInDays","diffInWeeks","diffInMonths","diffInYears","geteventsearch","userIdsString","join","user_ids","apiUrlevent","Headertwo","LeftsidebarSearch","event_owner_profile_image","event_owner_username","event_date","event_description","event_image","event_slug","chat","total_posts"],"sourceRoot":""}
{"version":3,"file":"static/js/7626.887c44a0.chunk.js","mappings":"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","sources":["../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/helpers/helpers.dataset.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getAxisCount() {\n    return this._getAxis().length;\n  }\n\n  getFirstScaleIdForIndexAxis() {\n    const scales = this.chart.scales;\n    const indexScaleId = this.chart.options.indexAxis;\n    return Object.keys(scales).filter(key => scales[key].axis === indexScaleId).shift();\n  }\n\n  _getAxis() {\n    const axis = {};\n    const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n    for (const dataset of this.chart.data.datasets) {\n      axis[valueOrDefault(\n        this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId\n      )] = true;\n    }\n    return Object.keys(axis);\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    const axisCount = this._getAxisCount();\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n      const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n      const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _angleDiff, _normalizeAngle, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\nfunction clipSelf(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, x, y, outerRadius, innerRadius, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n\n  if (innerRadius > 0) {\n    const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n  } else {\n    const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n\n    if (borderJoinStyle === 'round') {\n      ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n    } else if (borderJoinStyle === 'bevel') {\n      const r = 2 * clipWidth * clipWidth;\n      const endX = -r * Math.cos(endAngle + PI / 2) + x;\n      const endY = -r * Math.sin(endAngle + PI / 2) + y;\n      const startX = r * Math.cos(startAngle + PI / 2) + x;\n      const startY = r * Math.sin(startAngle + PI / 2) + y;\n      ctx.lineTo(endX, endY);\n      ctx.lineTo(startX, startY);\n    }\n  }\n  ctx.closePath();\n\n  ctx.moveTo(0, 0);\n  ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.clip('evenodd');\n}\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset, borderRadius} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n    clipSelf(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n    selfJoin: false,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","arguments","length","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","count","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","meta","_clip","disabled","xScale","yScale","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PieController","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","distanceToDefinedLo","findIndex","distanceToDefinedHi","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","_decimated","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","animated","_fullLoop","_points","_segments","_pointsUpdated","updateControlPoints","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel"],"sourceRoot":""}
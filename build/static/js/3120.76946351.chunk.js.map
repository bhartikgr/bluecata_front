{"version":3,"file":"static/js/3120.76946351.chunk.js","mappings":"+4xyPAEA,MAAMA,EAAO,CACT,OACA,cACA,YACA,WACA,aAEJ,IAAIC,EAAoB,GAExB,SAASC,IAA0B,IAAbC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGJ,EACzB,GAAIC,EAAkBI,OAClB,OAAOJ,EAEX,MAAMM,EAAWC,EAEjB,OADAP,GAAoBQ,EAAAA,EAAAA,IAA8B,OAATN,QAA0B,IAATA,EAAkBA,EAAOH,EAAMO,GAClFN,CACX,CAiCA,SACIC,eACAQ,iBAjCJ,SAA0BC,EAAaC,GACnC,OAAKA,GAEAD,EAEYT,IACOW,QAAQC,GACrBA,EAAMH,cAAgBA,GAAeG,EAAMF,YAAcA,IAEtDG,KAAKC,EAAAA,IAPR,EAQf,EAwBIC,mBAtBJ,SAA4BN,GACxB,OAAKA,EAEYT,IACOW,QAAQC,GACrBA,EAAMH,cAAgBA,IAEnBI,KAAKC,EAAAA,IALR,EAMf,EAeIE,mBAdJ,SAA4BC,GACxB,OAAOA,EAAOJ,MAAK,CAACK,EAAGC,KACnB,MAAMC,GAASN,EAAAA,EAAAA,IAAQI,EAAGC,GAAIE,GACnB,GAAGA,EAAOZ,eAAeY,EAAOX,cAE3C,OAAe,IAAXU,EACOA,GACJN,EAAAA,EAAAA,IAAQI,EAAGC,EAAE,GAE5B,E","sources":["../node_modules/country-state-city/lib/city.js"],"sourcesContent":["import cityList from './assets/city.json';\nimport { compare, convertArrayToObject } from './utils';\nconst KEYS = [\n    \"name\",\n    \"countryCode\",\n    \"stateCode\",\n    \"latitude\",\n    \"longitude\"\n];\nlet convertedCityList = [];\n// Get a list of all cities.\nfunction getAllCities(keys = KEYS) {\n    if (convertedCityList.length) {\n        return convertedCityList;\n    }\n    const cityJSON = cityList;\n    convertedCityList = convertArrayToObject(keys !== null && keys !== void 0 ? keys : KEYS, cityJSON);\n    return convertedCityList;\n}\n// Get a list of cities belonging to a specific state and country.\nfunction getCitiesOfState(countryCode, stateCode) {\n    if (!stateCode)\n        return [];\n    if (!countryCode)\n        return [];\n    const cityList = getAllCities();\n    const cities = cityList.filter((value) => {\n        return value.countryCode === countryCode && value.stateCode === stateCode;\n    });\n    return cities.sort(compare);\n}\n// Get a list of cities belonging to a specific country.\nfunction getCitiesOfCountry(countryCode) {\n    if (!countryCode)\n        return [];\n    const cityList = getAllCities();\n    const cities = cityList.filter((value) => {\n        return value.countryCode === countryCode;\n    });\n    return cities.sort(compare);\n}\nfunction sortByStateAndName(cities) {\n    return cities.sort((a, b) => {\n        const result = compare(a, b, (entity) => {\n            return `${entity.countryCode}-${entity.stateCode}`;\n        });\n        if (result !== 0)\n            return result;\n        return compare(a, b);\n    });\n}\nexport default {\n    getAllCities,\n    getCitiesOfState,\n    getCitiesOfCountry,\n    sortByStateAndName,\n};\n"],"names":["KEYS","convertedCityList","getAllCities","keys","arguments","length","undefined","cityJSON","cityList","convertArrayToObject","getCitiesOfState","countryCode","stateCode","filter","value","sort","compare","getCitiesOfCountry","sortByStateAndName","cities","a","b","result","entity"],"sourceRoot":""}
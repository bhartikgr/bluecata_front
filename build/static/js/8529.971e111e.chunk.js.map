{"version":3,"file":"static/js/8529.971e111e.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","pages/User/Dashboard.jsx","components/Styles/RegisterStyles.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","import React, { useState, useEffect } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport TopBar from \"../../components/Users/TopBar\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Stepblock,\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../components/Styles/RegisterStyles\";\r\nimport ModuleSideNav from \"../../components/Users/ModuleSideNav\";\r\n\r\nimport { Pie, Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport axios from \"axios\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport default function Dashboard() {\r\n  const apiURLDashboard = \"https://blueprintcatalyst.com/api/user/dashboard/\";\r\n  const apiUrlRound = \"https://blueprintcatalyst.com/api/user/capitalround/\";\r\n\r\n  const storedUsername = localStorage.getItem(\"SignatoryLoginData\");\r\n  const userLogin = JSON.parse(storedUsername);\r\n  const [CompanyData, setCompanyData] = useState(\"\");\r\n  const [CompanyDatashare, setCompanyDatashare] = useState(\"\");\r\n  const [Companyroundopen, setCompanyroundopen] = useState({\r\n    round_type: \"\",\r\n    target_raise: 0,\r\n    raised_to_date: 0,\r\n    expected_close: \"\",\r\n    fundraising_progress: \"0%\",\r\n    progresswidth: 0,\r\n    currency: \"USD\",\r\n    remaining_amount: 0,\r\n    total_investors: 0,\r\n  });\r\n  const [CompanyopenroundUserLog, setCompanyopenroundUserLog] = useState([]);\r\n  const [investorreportLogs, setinvestorreportLogs] = useState([]);\r\n  const [TotalInvestorscontact, setTotalInvestorscontact] = useState([]);\r\n  const [recentuploadFile, setrecentuploadFile] = useState([]);\r\n  const [investorDatarromreportLogs, setinvestorDatarromreportLogs] = useState(\r\n    []\r\n  );\r\n  const [InvestorRequestAccessLogs, setInvestorRequestAccessLogs] = useState(\r\n    []\r\n  );\r\n  const [investorStakesPercent, setInvestorStakesPercent] = useState(\"0\");\r\n  const [optionpoolLastestvalue, setoptionpoolLastestvalue] = useState({\r\n    option_pool: {\r\n      total_option_pool_percentage: 0,\r\n      total_option_pool_shares: 0,\r\n      available_percentage: 0,\r\n      allocated_percentage: 0,\r\n    },\r\n    latest_valuation: {\r\n      valuation_amount: 0,\r\n      currency: \"\",\r\n      price_per_share: 0,\r\n      total_company_shares: 0,\r\n    },\r\n    summary: {\r\n      total_company_shares: 0,\r\n      latest_valuation: 0,\r\n      option_pool_percentage: 0,\r\n    },\r\n  });\r\n  const [countrySymbolList, setCountrysymbollist] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [CompanyName, setCompanyName] = useState(\"\");\r\n  const [dilutionData, setDilutionforcastData] = useState({\r\n    labels: [],\r\n    datasets: [],\r\n  });\r\n  const [shareholderData, setShareholderData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        data: [],\r\n        backgroundColor: [],\r\n        borderColor: \"#ffffff\",\r\n        borderWidth: 2,\r\n        hoverBorderWidth: 3,\r\n        hoverOffset: 10,\r\n      },\r\n    ],\r\n  });\r\n  const [TotalInvestors, setTotalInvestors] = useState(\"\");\r\n  useEffect(() => {\r\n    getallcountrySymbolList();\r\n  }, []);\r\n  const getallcountrySymbolList = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrlRound + \"getallcountrySymbolList\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n\r\n      var respo = res.data.results;\r\n\r\n      setCountrysymbollist(respo);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getCompanyName();\r\n  }, []);\r\n  const getCompanyName = async () => {\r\n    let formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiURLDashboard + \"getCompanyName\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n\r\n      var respo = res.data.results;\r\n      if (respo.length > 0) {\r\n        setCompanyName(respo[0]);\r\n      }\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getCompanyTotalShares();\r\n  }, []);\r\n  useEffect(() => {\r\n    getTotalinvestor();\r\n    getTotalinvestorcontact();\r\n    getinvestorreportLogs();\r\n    getinvestorDatarromreportLogs();\r\n    getCompanyOptionPoolLastestValuation();\r\n    getShareholder();\r\n  }, []);\r\n  const getCompanyOptionPoolLastestValuation = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getCompanyOptionPoolLastestValuation\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (respo.data && respo.data.success) {\r\n        setoptionpoolLastestvalue(respo.data.data);\r\n      } else {\r\n        setError(\"Failed to fetch data\");\r\n        console.error(\"API Error:\", respo.data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error fetching option pool and valuation data\");\r\n      console.error(\"Error generating summary\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const getCurrencySymbol = (currencyCode) => {\r\n    const cleanCode = currencyCode?.replace(/[\\$\\s]/g, \"\").toUpperCase();\r\n    const country = countrySymbolList.find(\r\n      (c) => c.currency_code?.toUpperCase() === cleanCode\r\n    );\r\n    return country?.currency_symbol || \"\";\r\n  };\r\n  // Create dynamic currency map from country symbols\r\n  const createDynamicCurrencyMap = () => {\r\n    const dynamicMap = {};\r\n\r\n    countrySymbolList.forEach((country) => {\r\n      if (country.currency_code) {\r\n        // Clean currency code and add to map\r\n        const cleanCode = country.currency_code\r\n          .replace(/[\\$\\s]/g, \"\")\r\n          .toUpperCase();\r\n        dynamicMap[cleanCode] = cleanCode;\r\n\r\n        // Also map variations like \"CAD $\" to \"CAD\"\r\n        if (country.currency_symbol) {\r\n          const variation = `${cleanCode} ${country.currency_symbol}`.trim();\r\n          dynamicMap[variation] = cleanCode;\r\n        }\r\n      }\r\n    });\r\n\r\n    return dynamicMap;\r\n  };\r\n  const formatCurrency = (amount, currency = \"USD\") => {\r\n    if (!amount || amount === 0) return \"$0\";\r\n\r\n    // Create dynamic currency map from country symbols\r\n    const dynamicCurrencyMap = createDynamicCurrencyMap();\r\n\r\n    // Clean currency code - remove extra characters and spaces\r\n    let cleanCurrency = currency;\r\n    if (currency) {\r\n      // First try to find in dynamic map\r\n      if (dynamicCurrencyMap[currency]) {\r\n        cleanCurrency = dynamicCurrencyMap[currency];\r\n      } else {\r\n        // Fallback: clean the currency code manually\r\n        cleanCurrency = currency.replace(/[\\$\\s]/g, \"\").toUpperCase();\r\n\r\n        // Static fallback map for common currencies\r\n        const staticCurrencyMap = {\r\n          CAD: \"CAD\",\r\n          USD: \"USD\",\r\n          EUR: \"EUR\",\r\n          GBP: \"GBP\",\r\n          INR: \"INR\",\r\n        };\r\n\r\n        cleanCurrency = staticCurrencyMap[cleanCurrency] || \"USD\";\r\n      }\r\n    }\r\n\r\n    try {\r\n      const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: cleanCurrency,\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 0,\r\n      });\r\n\r\n      if (amount >= 1000000) {\r\n        return formatter.format(amount / 1000000) + \"M\";\r\n      } else if (amount >= 1000) {\r\n        return formatter.format(amount / 1000) + \"K\";\r\n      }\r\n\r\n      return formatter.format(amount);\r\n    } catch (error) {\r\n      console.warn(\r\n        `Invalid currency code: ${currency}, falling back to manual format`\r\n      );\r\n\r\n      // Manual formatting with symbol from database\r\n      const symbol = getCurrencySymbol(currency);\r\n\r\n      if (amount >= 1000000) {\r\n        return `${symbol}${(amount / 1000000).toFixed(1)}M`;\r\n      } else if (amount >= 1000) {\r\n        return `${symbol}${(amount / 1000).toFixed(1)}K`;\r\n      }\r\n\r\n      return `${symbol}${amount.toLocaleString()}`;\r\n    }\r\n  };\r\n\r\n  const formatPercentage = (percentage) => {\r\n    if (!percentage || percentage === 0) return \"0%\";\r\n    return `${parseFloat(percentage).toFixed(1)}%`;\r\n  };\r\n\r\n  const formatShares = (shares) => {\r\n    if (!shares || shares === 0) return \"0\";\r\n\r\n    if (shares >= 1000000) {\r\n      return `${(shares / 1000000).toFixed(1)}M`;\r\n    } else if (shares >= 1000) {\r\n      return `${(shares / 1000).toFixed(1)}K`;\r\n    }\r\n\r\n    return shares.toLocaleString();\r\n  };\r\n  const getTotalinvestor = async (dataa) => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getTotalinvestor\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setTotalInvestors(respo.data.results.length);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const getTotalinvestorcontact = async (dataa) => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getTotalinvestorcontact\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setTotalInvestorscontact(respo.data.results.length);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const getinvestorreportLogs = async (dataa) => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getinvestorreportLogs\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setinvestorreportLogs(respo.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const getinvestorDatarromreportLogs = async (dataa) => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getinvestorDatarromreportLogs\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setinvestorDatarromreportLogs(respo.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getCompanystokes();\r\n    getCompanyopenround();\r\n    getCompanyopenroundUserLog();\r\n    getDilutionForecast();\r\n    getrecentuploadFile();\r\n    getInvestorRequestCompanyInvest();\r\n  }, []);\r\n  const getInvestorRequestCompanyInvest = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getInvestorRequestCompanyInvest\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setInvestorRequestAccessLogs(respo.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const getrecentuploadFile = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getrecentuploadFile\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setrecentuploadFile(respo.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const [ownershipTable, setOwnershipTable] = useState([]);\r\n\r\n  // Update getShareholder function\r\n  const getShareholder = async () => {\r\n    setShareholderLoading(true);\r\n    setShareholderError(null);\r\n\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        apiURLDashboard + \"getShareholder\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.data && response.data.shareholders) {\r\n        const { labels, data, colors } = response.data.shareholders;\r\n        console.log(response.data.shareholders);\r\n        // Filter out zero values\r\n        const filteredData = [];\r\n        const filteredLabels = [];\r\n        const filteredColors = [];\r\n\r\n        labels.forEach((label, index) => {\r\n          if (data[index] > 0) {\r\n            filteredLabels.push(label);\r\n            filteredData.push(parseFloat(data[index]));\r\n            filteredColors.push(colors[index]);\r\n          }\r\n        });\r\n\r\n        const chartData = {\r\n          labels: filteredLabels,\r\n          datasets: [\r\n            {\r\n              data: filteredData,\r\n              backgroundColor: filteredColors,\r\n              borderColor: \"#ffffff\",\r\n              borderWidth: 2,\r\n              hoverBorderWidth: 3,\r\n              hoverOffset: 10,\r\n              hoverBackgroundColor: filteredColors.map((color) => color + \"CC\"),\r\n            },\r\n          ],\r\n        };\r\n\r\n        setShareholderData(chartData);\r\n        setOwnershipTable(response.data.ownershipTable || []); // NEW\r\n        setShareholderError(null);\r\n      } else {\r\n        setShareholderError(\"No shareholder data available\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching shareholder data:\", err);\r\n      const errorMessage =\r\n        err.response?.data?.error ||\r\n        err.response?.data?.message ||\r\n        \"Failed to load shareholder breakdown\";\r\n      setShareholderError(errorMessage);\r\n    } finally {\r\n      setShareholderLoading(false);\r\n    }\r\n  };\r\n\r\n  const getDilutionForecast = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        apiURLDashboard + \"getDilutionForecast\",\r\n        {\r\n          company_id: userLogin.companies[0].id,\r\n        }\r\n      );\r\n\r\n      if (response.data && response.data.labels) {\r\n        console.log(response.data);\r\n        setDilutionforcastData({\r\n          labels: response.data.labels,\r\n          datasets: response.data.datasets,\r\n        });\r\n      } else {\r\n        setError(\"No dilution data available\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating dilution forecast:\", err);\r\n      setError(\"Failed to load dilution forecast\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const getCompanyTotalShares = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getCompanyTotalShares\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setCompanyData(respo.data.results);\r\n      //getShareholder(respo.data.results[0]);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (CompanyDatashare && CompanyDatashare.length > 0) {\r\n      let cumulativeTotalShares = 0;\r\n      let cumulativeInvestorShares = 0;\r\n\r\n      CompanyDatashare.forEach((round) => {\r\n        const totalShares = parseFloat(round.total_issued_shares || 0);\r\n        const founderShares = parseFloat(round.founder_shares || 0);\r\n\r\n        cumulativeTotalShares += totalShares;\r\n        cumulativeInvestorShares += totalShares - founderShares;\r\n      });\r\n\r\n      // Use rounding to avoid floating-point issues\r\n      const investorStakesPercent =\r\n        cumulativeTotalShares > 0\r\n          ? Math.round(\r\n              (cumulativeInvestorShares / cumulativeTotalShares) * 10000\r\n            ) / 100\r\n          : 0;\r\n\r\n      setInvestorStakesPercent(investorStakesPercent.toFixed(2));\r\n    }\r\n  }, [CompanyDatashare]);\r\n\r\n  const getCompanystokes = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n      Companyshares: CompanyData.company_shares,\r\n    };\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getCompanystokes\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (respo.data.results.length > 0) {\r\n        var dataa = respo.data.results;\r\n        //console.log(dataa);\r\n        setCompanyDatashare(dataa);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const getCompanyopenround = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getCompanyopenround\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (respo.data && respo.data.success) {\r\n        const openroundData = respo.data.roundInfo;\r\n        setCompanyroundopen(openroundData);\r\n      } else {\r\n        setError(\"No active round found\");\r\n        console.error(\"API Error:\", respo.data.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const getCompanyopenroundUserLog = async () => {\r\n    const formData = {\r\n      company_id: userLogin.companies[0].id,\r\n    };\r\n    try {\r\n      const respo = await axios.post(\r\n        apiURLDashboard + \"getCompanyopenroundUserLog\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const roundaccessLog = respo.data;\r\n      if (roundaccessLog.length > 0) {\r\n        setCompanyopenroundUserLog(roundaccessLog);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n\r\n  const [dashboardData] = useState({\r\n    equity: {\r\n      totalShares: \"10,000,000\",\r\n      optionPool: \"0%\",\r\n      investorStakes: \"62%\",\r\n      valuation: \"$25M\",\r\n    },\r\n\r\n    shareholders: {\r\n      labels: [\r\n        \"Founders\",\r\n        \"Series A Investors\",\r\n        \"Series B Investors\",\r\n        \"Option Pool\",\r\n        \"Employees\",\r\n      ],\r\n      data: [35, 25, 20, 15, 5],\r\n      colors: [\r\n        \"#081828\",\r\n        \"#092f4e\",\r\n        \"#10395c\",\r\n        \"#1a588d\",\r\n        \"#2577bd\",\r\n        \"#2577bd\",\r\n      ],\r\n    },\r\n\r\n    openRound: {\r\n      type: \"Series B\",\r\n      target: \"$8M\",\r\n      raised: \"$5.2M\",\r\n      preMoney: \"$22M\",\r\n      closeDate: \"Dec 15, 2023\",\r\n    },\r\n\r\n    investors: {\r\n      total: 24,\r\n      contacts: 42,\r\n      messages: [\r\n        {\r\n          name: \"John Smith\",\r\n          firm: \"VC Partners\",\r\n          message: \"When will the next report be available?\",\r\n          time: \"2h ago\",\r\n        },\r\n        {\r\n          name: \"Sarah Johnson\",\r\n          firm: \"Capital Growth\",\r\n          message: \"Request for additional metrics...\",\r\n          time: \"1d ago\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    dataRoom: {\r\n      completion: 78,\r\n      recentUploads: [\r\n        {\r\n          name: \"Financials Q3 2023\",\r\n          description: \"Updated projections\",\r\n          time: \"Today\",\r\n        },\r\n        {\r\n          name: \"Cap Table\",\r\n          description: \"Latest revision\",\r\n          time: \"Yesterday\",\r\n        },\r\n      ],\r\n    },\r\n\r\n    accessLogs: [\r\n      {\r\n        name: \"David Wilson\",\r\n        action: \"Viewed Financial Reports\",\r\n        time: \"Today, 4:00 PM\",\r\n      },\r\n      {\r\n        name: \"Emily Chen\",\r\n        action: \"Downloaded Cap Table\",\r\n        time: \"Today, 5:00 PM\",\r\n      },\r\n      {\r\n        name: \"Michael Brown\",\r\n        action: \"Viewed Pitch Deck\",\r\n        time: \"Yesterday, 10:00 AM\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  // Dilution forecast data\r\n  // const dilutionData = {\r\n  //   labels: [\"Current\", \"After Series B\", \"After Series C\"],\r\n  //   datasets: [\r\n  //     {\r\n  //       label: \"Founders\",\r\n  //       data: [35, 28, 22],\r\n  //       backgroundColor: \"#081828\",\r\n  //     },\r\n\r\n  //     {\r\n  //       label: \"Series A\",\r\n  //       data: [25, 20, 16],\r\n  //       backgroundColor: \"#092f4e\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Series B\",\r\n  //       data: [0, 20, 16],\r\n  //       backgroundColor: \"#10395c\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Option Pool\",\r\n  //       data: [15, 15, 15],\r\n  //       backgroundColor: \"#1a588d\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Employees\",\r\n  //       data: [5, 5, 5],\r\n  //       backgroundColor: \"#2577bd\",\r\n  //     },\r\n  //     {\r\n  //       label: \"Series C\",\r\n  //       data: [0, 0, 15],\r\n  //       backgroundColor: \"#2a85d3\",\r\n  //     },\r\n  //   ],\r\n  // };\r\n\r\n  // Chart options\r\n  const dilutionOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: { duration: 0 },\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            // Show percentage with 2 decimals for small values\r\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}%`;\r\n          },\r\n          footer: function (tooltipItems) {\r\n            let sum = tooltipItems.reduce((acc, t) => acc + t.parsed.y, 0);\r\n            return `Total: ${sum.toFixed(2)}%`;\r\n          },\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Ownership Dilution Forecast\",\r\n        font: { size: 16, weight: \"bold\" },\r\n      },\r\n    },\r\n    scales: {\r\n      x: { stacked: true, title: { display: true, text: \"Funding Rounds\" } },\r\n      y: {\r\n        stacked: true,\r\n        max: 100,\r\n        min: 0,\r\n        title: { display: true, text: \"Ownership Percentage\" },\r\n        ticks: {\r\n          // Show small percentages properly\r\n          callback: function (value) {\r\n            return value.toFixed(2) + \"%\";\r\n          },\r\n        },\r\n      },\r\n    },\r\n    interaction: { mode: \"index\", intersect: false },\r\n  };\r\n\r\n  // const shareholderData = {\r\n  //   labels: dashboardData.shareholders.labels,\r\n  //   datasets: [\r\n  //     {\r\n  //       data: dashboardData.shareholders.data,\r\n  //       backgroundColor: dashboardData.shareholders.colors,\r\n  //       borderWidth: 0,\r\n  //     },\r\n  //   ],\r\n  // };\r\n  const [shareholderLoading, setShareholderLoading] = useState(false);\r\n  const [shareholderError, setShareholderError] = useState(null);\r\n  const shareholderOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: \"bottom\",\r\n        labels: {\r\n          usePointStyle: true,\r\n          pointStyle: \"circle\",\r\n          padding: 15,\r\n          font: {\r\n            size: 11,\r\n            weight: \"500\",\r\n          },\r\n          generateLabels: function (chart) {\r\n            const data = chart.data;\r\n            if (data.labels.length && data.datasets.length) {\r\n              return data.labels.map((label, i) => ({\r\n                text: `${label}: ${data.datasets[0].data[i]}%`,\r\n                fillStyle: data.datasets[0].backgroundColor[i],\r\n                strokeStyle: data.datasets[0].borderColor,\r\n                lineWidth: data.datasets[0].borderWidth,\r\n                hidden:\r\n                  isNaN(data.datasets[0].data[i]) ||\r\n                  data.datasets[0].data[i] === 0,\r\n                index: i,\r\n              }));\r\n            }\r\n            return [];\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            const label = context.label || \"\";\r\n            const value = context.parsed; // already percentage\r\n            return `${label}: ${value}%`;\r\n          },\r\n        },\r\n        backgroundColor: \"rgba(0,0,0,0.8)\",\r\n        titleColor: \"#fff\",\r\n        bodyColor: \"#fff\",\r\n        borderColor: \"rgba(255,255,255,0.2)\",\r\n        borderWidth: 1,\r\n        cornerRadius: 8,\r\n        displayColors: true,\r\n        usePointStyle: true,\r\n      },\r\n\r\n      datalabels: {\r\n        display: function (context) {\r\n          return context.parsed > 5; // Only show labels for slices > 5%\r\n        },\r\n        color: \"#ffffff\",\r\n        font: {\r\n          weight: \"bold\",\r\n          size: 10,\r\n        },\r\n        formatter: function (value) {\r\n          return value + \"%\";\r\n        },\r\n      },\r\n    },\r\n    elements: {\r\n      arc: {\r\n        borderWidth: 2,\r\n        hoverBorderWidth: 3,\r\n      },\r\n    },\r\n    animation: {\r\n      animateRotate: true,\r\n      animateScale: true,\r\n      duration: 1000,\r\n      easing: \"easeInOutQuart\",\r\n    },\r\n    interaction: {\r\n      intersect: false,\r\n      mode: \"nearest\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Dashboard Page\";\r\n  }, []);\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n\r\n  function formatCurrentDateTime(input) {\r\n    const date = new Date(input);\r\n\r\n    if (isNaN(date)) return \"\";\r\n\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n\r\n    const getOrdinal = (n) => {\r\n      if (n >= 11 && n <= 13) return \"th\";\r\n      switch (n % 10) {\r\n        case 1:\r\n          return \"st\";\r\n        case 2:\r\n          return \"nd\";\r\n        case 3:\r\n          return \"rd\";\r\n        default:\r\n          return \"th\";\r\n      }\r\n    };\r\n\r\n    let hours = date.getHours();\r\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n    const seconds = date.getSeconds().toString().padStart(2, \"0\");\r\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // 0 => 12\r\n\r\n    return `${month} ${day}${getOrdinal(\r\n      day\r\n    )}, ${year} ${hours}:${minutes} ${ampm}`;\r\n  }\r\n  // Helper functions for formatting\r\n  const formatCurrencyAmount = (amount, currency = \"USD\") => {\r\n    if (!amount || amount === 0) return \"0\";\r\n\r\n    // Get currency symbol from database\r\n    const currencySymbol = getCurrencySymbol(currency);\r\n    const numAmount = Number(String(amount).replace(/,/g, \"\"));\r\n\r\n    if (numAmount >= 1000000) {\r\n      return `${currencySymbol}${(numAmount / 1000000).toFixed(1)}M`;\r\n    } else if (numAmount >= 1000) {\r\n      return `${currencySymbol}${(numAmount / 1000).toFixed(1)}K`;\r\n    }\r\n\r\n    return `${currencySymbol}${numAmount.toLocaleString(\"en-US\")}`;\r\n  };\r\n  // Calculate pre-money valuation\r\n  const calculatePreMoneyValuation = () => {\r\n    // Pre-money = (Price per share × Total shares) - Money raised\r\n    const totalShares = Number(\r\n      String(CompanyData?.company_shares ?? \"0\").replace(/,/g, \"\")\r\n    );\r\n    const raisedAmount = Companyroundopen?.raised_to_date || 0;\r\n\r\n    // If we have price per share from latest valuation\r\n    if (optionpoolLastestvalue?.latest_valuation?.price_per_share > 0) {\r\n      const pricePerShare =\r\n        optionpoolLastestvalue.latest_valuation.price_per_share;\r\n      const currentValuation = totalShares * pricePerShare;\r\n      const preMoneyValuation = currentValuation - raisedAmount;\r\n      return preMoneyValuation > 0 ? preMoneyValuation : 0;\r\n    }\r\n\r\n    // Fallback: Use total shares as valuation basis\r\n    return totalShares;\r\n  };\r\n  const formatDateString = (dateStr) => {\r\n    if (!dateStr) return \"Not Set\";\r\n\r\n    try {\r\n      const date = new Date(dateStr);\r\n      return date.toLocaleDateString(\"en-US\", {\r\n        year: \"numeric\",\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n      });\r\n    } catch (error) {\r\n      return dateStr; // Return original if parsing fails\r\n    }\r\n  };\r\n  const getProgressColor = (percentage) => {\r\n    if (percentage >= 80) return \"#28a745\"; // Green\r\n    if (percentage >= 50) return \"#ffc107\"; // Yellow\r\n    if (percentage >= 25) return \"#fd7e14\"; // Orange\r\n    return \"#dc3545\"; // Red\r\n  };\r\n  //Basic Vs fully dilution chart\r\n  const [chartData, setChartData] = useState({ labels: [], datasets: [] });\r\n  useEffect(() => {\r\n    const fetchOwnership = async () => {\r\n      let formData = {\r\n        company_id: userLogin.companies[0].id,\r\n      };\r\n      setLoading(true);\r\n      try {\r\n        const res = await axios.post(\r\n          apiURLDashboard + \"getBasicVsFullyDilutedOwnership\",\r\n          formData,\r\n          {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (res.data && res.data.labels) {\r\n          setChartData(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error generating summary\", err);\r\n      }\r\n    };\r\n\r\n    fetchOwnership();\r\n  }, [userLogin.companies[0].id]);\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { position: \"top\" },\r\n      title: { display: true, text: \"Basic vs Fully Diluted Ownership\" },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (ctx) => `${ctx.dataset.label}: ${ctx.parsed.y}%`,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: { stacked: true },\r\n      y: {\r\n        stacked: true,\r\n        max: 100,\r\n        min: 0,\r\n        ticks: { callback: (v) => v + \"%\" },\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <div className=\"fullpage d-block\">\r\n          <div className=\"d-flex align-items-start gap-0\">\r\n            <ModuleSideNav\r\n              isCollapsed={isCollapsed}\r\n              setIsCollapsed={setIsCollapsed}\r\n            />\r\n            <div\r\n              className={`global_view ${isCollapsed ? \"global_view_col\" : \"\"}`}\r\n            >\r\n              <TopBar />\r\n              <SectionWrapper className=\"d-block p-md-4 p-3\">\r\n                <div className=\"container-fluid\">\r\n                  <Stepblock id=\"step5\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"pb-3 bar_design d-flex justify-content-between align-items-center\">\r\n                          <h4 className=\"h5 mb-0\">Equity Snapshot</h4>\r\n                          <h4 className=\"h5 mb-0\">\r\n                            Company Name (\r\n                            <strong>{CompanyName.company_name}</strong>)\r\n                          </h4>\r\n                        </div>\r\n\r\n                        <div class=\"row gap-0 dashboard-top\">\r\n                          <div class=\"col-6 col-md-3 p-0 bor\">\r\n                            <div class=\"p-3\">\r\n                              <p class=\"small fw-medium mb-1\">Total Shares</p>\r\n                              <div className=\"d-flex align-items-center gap-3 justify-content-between\">\r\n                                <p class=\"h4 fw-semibold mb-0\">\r\n                                  {getCurrencySymbol(CompanyData.currency)}\r\n                                  {Number(\r\n                                    String(\r\n                                      CompanyData.totalCompanyShares\r\n                                    ).replace(/,/g, \"\")\r\n                                  ).toLocaleString(\"en-US\")}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-6 col-md-3 p-0 bor\">\r\n                            <div className=\"p-3\">\r\n                              <p className=\"small fw-medium mb-1\">\r\n                                Option Pool\r\n                              </p>\r\n                              {loading ? (\r\n                                <div className=\"d-flex align-items-center\">\r\n                                  <div\r\n                                    className=\"spinner-border spinner-border-sm me-2\"\r\n                                    role=\"status\"\r\n                                  >\r\n                                    <span className=\"visually-hidden\">\r\n                                      Loading...\r\n                                    </span>\r\n                                  </div>\r\n                                  <span className=\"small\">Loading...</span>\r\n                                </div>\r\n                              ) : error ? (\r\n                                <p className=\"h4 fw-semibold mb-0 text-danger\">\r\n                                  0\r\n                                </p>\r\n                              ) : (\r\n                                <div>\r\n                                  <p className=\"h4 fw-semibold mb-0\">\r\n                                    {formatPercentage(\r\n                                      optionpoolLastestvalue.option_pool\r\n                                        ?.total_option_pool_percentage\r\n                                    )}\r\n                                  </p>\r\n                                  <small className=\"text-muted\">\r\n                                    {formatShares(\r\n                                      optionpoolLastestvalue.option_pool\r\n                                        ?.total_option_pool_shares\r\n                                    )}{\" \"}\r\n                                    shares\r\n                                  </small>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-6 col-md-3 p-0 bor\">\r\n                            <div class=\"p-3\">\r\n                              <p class=\"small fw-medium mb-1\">\r\n                                Investor Stakes\r\n                              </p>\r\n                              <p class=\"h4 fw-semibold mb-0\">\r\n                                {investorStakesPercent || 0}%\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-6 col-md-3 p-0\">\r\n                            <div className=\"p-3\">\r\n                              <p className=\"small fw-medium mb-1\">\r\n                                Latest Valuation\r\n                              </p>\r\n                              {loading ? (\r\n                                <div className=\"d-flex align-items-center\">\r\n                                  <div\r\n                                    className=\"spinner-border spinner-border-sm me-2\"\r\n                                    role=\"status\"\r\n                                  >\r\n                                    <span className=\"visually-hidden\">\r\n                                      Loading...\r\n                                    </span>\r\n                                  </div>\r\n                                  <span className=\"small\">Loading...</span>\r\n                                </div>\r\n                              ) : error ? (\r\n                                <p className=\"h4 fw-semibold mb-0 text-danger\">\r\n                                  0\r\n                                </p>\r\n                              ) : (\r\n                                <div>\r\n                                  <p className=\"h4 fw-semibold mb-0\">\r\n                                    {formatCurrency(\r\n                                      optionpoolLastestvalue.latest_valuation\r\n                                        ?.valuation_amount,\r\n                                      optionpoolLastestvalue.latest_valuation\r\n                                        ?.currency\r\n                                    )}\r\n                                  </p>\r\n                                  {optionpoolLastestvalue.latest_valuation\r\n                                    ?.price_per_share > 0 && (\r\n                                    <small className=\"text-muted\">\r\n                                      $\r\n                                      {optionpoolLastestvalue.latest_valuation.price_per_share.toFixed(\r\n                                        2\r\n                                      )}\r\n                                      /share\r\n                                    </small>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12 my-4\">\r\n                        <div class=\"dashboard_card  modern-chart m-0\">\r\n                          {/* <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Open Round Info</h3>\r\n                          </div> */}\r\n\r\n                          <div className=\"row px-3\">\r\n                            <div className=\"my-4 col-md-12\">\r\n                              <div className=\"dashboard_card modern-chart h-100\">\r\n                                <div className=\"card-header\">\r\n                                  <h3 className=\"card-title\">\r\n                                    Founder Dilution Across Funding Rounds\r\n                                  </h3>\r\n                                  {/* <button\r\n                                    onClick={getDilutionForecast}\r\n                                    className=\"global_btn w-fit  px-4 py-2 fn_size_sm  active d-flex align-items-center gap-2\"\r\n                                    disabled={loading}\r\n                                  >\r\n                                    {loading ? \"Loading...\" : \"Refresh\"}\r\n                                  </button> */}\r\n                                </div>\r\n                                <div className=\"card-body h-100\">\r\n                                  {loading ? (\r\n                                    <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n                                      <div\r\n                                        className=\"spinner-border\"\r\n                                        role=\"status\"\r\n                                      >\r\n                                        <span className=\"visually-hidden\">\r\n                                          Loading...\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                  ) : error ? (\r\n                                    <div className=\"alert alert-warning h-100 d-flex align-items-center justify-content-center\">\r\n                                      0\r\n                                    </div>\r\n                                  ) : dilutionData.labels.length > 0 ? (\r\n                                    <div style={{ height: \"300px\" }}>\r\n                                      <Bar\r\n                                        data={dilutionData}\r\n                                        options={dilutionOptions}\r\n                                      />\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div className=\"alert alert-info h-100 d-flex align-items-center justify-content-center\">\r\n                                      No rounds found. Create a round to see\r\n                                      dilution forecast.\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"my-4 col-md-12\">\r\n                              <div\r\n                                className=\"card-body\"\r\n                                style={{ minHeight: \"400px\" }}\r\n                              >\r\n                                {shareholderLoading ? (\r\n                                  <div className=\"text-center\">\r\n                                    <div\r\n                                      className=\"spinner-border text-primary mb-3\"\r\n                                      role=\"status\"\r\n                                    >\r\n                                      <span className=\"visually-hidden\">\r\n                                        Loading...\r\n                                      </span>\r\n                                    </div>\r\n                                    <p className=\"text-muted\">\r\n                                      Loading shareholder data...\r\n                                    </p>\r\n                                  </div>\r\n                                ) : shareholderError ? (\r\n                                  <div className=\"alert alert-warning text-center\">\r\n                                    <i className=\"fas fa-exclamation-triangle fa-2x mb-3 text-warning\"></i>\r\n                                    <h6>Unable to load shareholder data</h6>\r\n                                    <p className=\"mb-3\">{shareholderError}</p>\r\n                                    <button\r\n                                      onClick={getShareholder}\r\n                                      className=\"btn btn-sm btn-primary\"\r\n                                    >\r\n                                      Try Again\r\n                                    </button>\r\n                                  </div>\r\n                                ) : shareholderData.labels.length > 0 ? (\r\n                                  <>\r\n                                    {/* Pie Chart */}\r\n                                    <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n                                      <div\r\n                                        className=\"chart-container\"\r\n                                        style={{\r\n                                          width: \"100%\",\r\n                                          maxWidth: \"350px\",\r\n                                          height: \"350px\",\r\n                                        }}\r\n                                      >\r\n                                        <Pie\r\n                                          data={shareholderData}\r\n                                          options={shareholderOptions}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {/* Ownership Table */}\r\n                                    <div className=\"table-responsive\">\r\n                                      <h5 className=\"mb-3 text-center fw-bold\">\r\n                                        Final Ownership Structure\r\n                                      </h5>\r\n                                      <table className=\"table table-hover table-bordered align-middle\">\r\n                                        <thead className=\"table-light\">\r\n                                          <tr>\r\n                                            <th>Stakeholder</th>\r\n                                            <th className=\"text-end\">Shares</th>\r\n                                            <th className=\"text-end\">\r\n                                              Ownership %\r\n                                            </th>\r\n                                            <th>Security Type</th>\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          {ownershipTable.map((row, index) => (\r\n                                            <tr key={index}>\r\n                                              <td>\r\n                                                <div className=\"d-flex align-items-center\">\r\n                                                  <span\r\n                                                    className=\"badge me-2\"\r\n                                                    style={{\r\n                                                      backgroundColor:\r\n                                                        row.color,\r\n                                                      width: \"12px\",\r\n                                                      height: \"12px\",\r\n                                                      borderRadius: \"50%\",\r\n                                                    }}\r\n                                                  ></span>\r\n                                                  <strong>\r\n                                                    {row.stakeholder}\r\n                                                  </strong>\r\n                                                </div>\r\n                                              </td>\r\n                                              <td className=\"text-end\">\r\n                                                {row.shares.toLocaleString()}\r\n                                              </td>\r\n                                              <td className=\"text-end\">\r\n                                                <span className=\"badge bg-primary\">\r\n                                                  {row.percentage.toFixed(2)}%\r\n                                                </span>\r\n                                              </td>\r\n                                              <td>\r\n                                                <span className=\"badge bg-secondary\">\r\n                                                  {row.securityType}\r\n                                                </span>\r\n                                              </td>\r\n                                            </tr>\r\n                                          ))}\r\n                                        </tbody>\r\n                                        <tfoot className=\"table-light\">\r\n                                          <tr>\r\n                                            <td className=\"fw-bold\">Total</td>\r\n                                            <td className=\"text-end fw-bold\">\r\n                                              {ownershipTable\r\n                                                .reduce(\r\n                                                  (sum, row) =>\r\n                                                    sum + row.shares,\r\n                                                  0\r\n                                                )\r\n                                                .toLocaleString()}\r\n                                            </td>\r\n                                            <td className=\"text-end fw-bold\">\r\n                                              <span className=\"badge bg-success\">\r\n                                                100.00%\r\n                                              </span>\r\n                                            </td>\r\n                                            <td></td>\r\n                                          </tr>\r\n                                        </tfoot>\r\n                                      </table>\r\n                                    </div>\r\n                                  </>\r\n                                ) : (\r\n                                  <div className=\"alert alert-info text-center\">\r\n                                    <i className=\"fas fa-users fa-2x mb-3 text-info\"></i>\r\n                                    <h6>No Shareholders Found</h6>\r\n                                    <p className=\"mb-3\">\r\n                                      Add investors to see shareholder breakdown\r\n                                    </p>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"my-4 col-md-12\">\r\n                              <div className=\"dashboard_card modern-chart h-100\">\r\n                                <div className=\"card-header\">\r\n                                  <h3 className=\"card-title\">\r\n                                    Basic vs Fully Diluted Ownership\r\n                                  </h3>\r\n                                  {/* <button\r\n                                    onClick={getDilutionForecast}\r\n                                    className=\"global_btn w-fit  px-4 py-2 fn_size_sm  active d-flex align-items-center gap-2\"\r\n                                    disabled={loading}\r\n                                  >\r\n                                    {loading ? \"Loading...\" : \"Refresh\"}\r\n                                  </button> */}\r\n                                </div>\r\n                                <div className=\"card-body h-100\">\r\n                                  {loading ? (\r\n                                    <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n                                      <div\r\n                                        className=\"spinner-border\"\r\n                                        role=\"status\"\r\n                                      >\r\n                                        <span className=\"visually-hidden\">\r\n                                          Loading...\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                  ) : error ? (\r\n                                    <div className=\"alert alert-warning h-100 d-flex align-items-center justify-content-center\">\r\n                                      0\r\n                                    </div>\r\n                                  ) : chartData.labels.length > 0 ? (\r\n                                    <div style={{ height: \"300px\" }}>\r\n                                      <Bar data={chartData} options={options} />\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div className=\"alert alert-info h-100 d-flex align-items-center justify-content-center\">\r\n                                      No rounds found. Create a round to see\r\n                                      dilution forecast.\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"access-logs\">\r\n                            <h4 class=\"section-title\">Recent Activity</h4>\r\n\r\n                            <table class=\"log-table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>User</th>\r\n                                  <th>Class Type</th>\r\n                                  <th>Action</th>\r\n                                  <th>Date</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {CompanyopenroundUserLog?.length > 0 ? (\r\n                                  CompanyopenroundUserLog.map((log, index) => (\r\n                                    <tr key={index}>\r\n                                      <td>\r\n                                        <small>\r\n                                          {log.first_name} {log.last_name}\r\n                                        </small>\r\n                                      </td>\r\n                                      <td>\r\n                                        <small>\r\n                                          {log.shareClassType} (\r\n                                          {log.nameOfRound})\r\n                                        </small>\r\n                                      </td>\r\n                                      <td\r\n                                        style={{\r\n                                          padding: \"4px 12px\",\r\n                                          borderRadius: \"12px\",\r\n                                          fontWeight: \"600\",\r\n\r\n                                          backgroundColor: \"#065f46\", // green or red bg\r\n                                          fontSize: \"12px\",\r\n                                          display: \"inline-block\",\r\n                                        }}\r\n                                      >\r\n                                        <small\r\n                                          style={{\r\n                                            color: \"#fff\", // green or red text\r\n                                          }}\r\n                                        >\r\n                                          {log.access_status}\r\n                                        </small>\r\n                                      </td>\r\n                                      <td>\r\n                                        <small>\r\n                                          {formatCurrentDateTime(\r\n                                            log.activity_date\r\n                                          )}\r\n                                        </small>\r\n                                      </td>\r\n                                    </tr>\r\n                                  ))\r\n                                ) : (\r\n                                  <tr>\r\n                                    <td\r\n                                      colSpan=\"3\"\r\n                                      style={{ textAlign: \"center\" }}\r\n                                    >\r\n                                      No records found\r\n                                    </td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                          <div class=\"access-logs\">\r\n                            <table class=\"log-table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>User</th>\r\n                                  <th>Action</th>\r\n                                  <th>Description</th>\r\n                                  <th>Date</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {InvestorRequestAccessLogs?.length > 0 ? (\r\n                                  InvestorRequestAccessLogs.map(\r\n                                    (log, index) => (\r\n                                      <tr key={index}>\r\n                                        <td>\r\n                                          <small>\r\n                                            {log.first_name} {log.last_name}\r\n                                          </small>\r\n                                        </td>\r\n                                        <td>\r\n                                          <small>{log.action}</small>\r\n                                        </td>\r\n                                        <td>\r\n                                          <small>{log.description}</small>\r\n                                        </td>\r\n                                        <td>\r\n                                          <small>\r\n                                            {formatCurrentDateTime(\r\n                                              log.created_at\r\n                                            )}\r\n                                          </small>\r\n                                        </td>\r\n                                      </tr>\r\n                                    )\r\n                                  )\r\n                                ) : (\r\n                                  <tr>\r\n                                    <td\r\n                                      colSpan=\"3\"\r\n                                      style={{ textAlign: \"center\" }}\r\n                                    >\r\n                                      No records found\r\n                                    </td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"col-12 mb-4\">\r\n                        <div class=\"dashboard_card  modern-chart h-100\">\r\n                          <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Investor Reporting</h3>\r\n                          </div>\r\n\r\n                          <div class=\"stats-grid\">\r\n                            <div class=\"stat-card\">\r\n                              <div class=\"stat-label\">Total Investors</div>\r\n                              <div class=\"stat-value\">{TotalInvestors}</div>\r\n                            </div>\r\n                            <div class=\"stat-card\">\r\n                              <div class=\"stat-label\">Investor Contacts</div>\r\n                              <div class=\"stat-value\">\r\n                                {TotalInvestorscontact}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* <div class=\"messages-section\">\r\n                            <h4 class=\"section-title\">\r\n                              Messages From Investors\r\n                            </h4>\r\n\r\n                            <div class=\"message-item\">\r\n                              <div class=\"message-content\">\r\n                                <div class=\"message-header\">\r\n                                  <div class=\"message-sender\">John Smith</div>\r\n                                  <div class=\"message-time\">2h ago</div>\r\n                                </div>\r\n                                <div class=\"message-firm\">VC Partners</div>\r\n                                <div class=\"message-text\">\r\n                                  When will the next report be available?\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"message-item\">\r\n                              <div class=\"message-content\">\r\n                                <div class=\"message-header\">\r\n                                  <div class=\"message-sender\">\r\n                                    Sarah Johnson\r\n                                  </div>\r\n                                  <div class=\"message-time\">1d ago</div>\r\n                                </div>\r\n                                <div class=\"message-firm\">Capital Growth</div>\r\n                                <div class=\"message-text\">\r\n                                  Request for additional metrics...\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div> */}\r\n\r\n                          <div class=\"access-logs\">\r\n                            <h4 class=\"section-title\">Recent Activity</h4>\r\n\r\n                            <table class=\"log-table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>User</th>\r\n                                  <th>Action</th>\r\n                                  <th>Date Of View</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {investorreportLogs?.length > 0 ? (\r\n                                  investorreportLogs.map((log, index) => (\r\n                                    <tr key={index}>\r\n                                      <td>\r\n                                        <small>\r\n                                          {log.first_name} {log.last_name}\r\n                                        </small>\r\n                                      </td>\r\n                                      <td>\r\n                                        <small>\r\n                                          {log.document_name} (\r\n                                          {log.access_status})\r\n                                        </small>\r\n                                      </td>\r\n                                      <td>\r\n                                        <small>\r\n                                          {formatCurrentDateTime(log.date_view)}\r\n                                        </small>\r\n                                      </td>\r\n                                    </tr>\r\n                                  ))\r\n                                ) : (\r\n                                  <tr>\r\n                                    <td\r\n                                      colSpan=\"3\"\r\n                                      style={{ textAlign: \"center\" }}\r\n                                    >\r\n                                      No records found\r\n                                    </td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div class=\"dashboard_card  modern-chart h-100\">\r\n                          <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Data Room Status</h3>\r\n                          </div>\r\n\r\n                          {/* <div class=\"progress-container\">\r\n                            <div class=\"progress-info\">\r\n                              <div class=\"progress-label\">\r\n                                Completion Status\r\n                              </div>\r\n                              <div class=\"progress-value\">\r\n                                {dashboardData.dataRoom.completion}%\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"progress-bar\">\r\n                              <div\r\n                                class=\"progress-fill\"\r\n                                style={{\r\n                                  width: `${dashboardData.dataRoom.completion}%`,\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div class=\"info-section\">\r\n                            <div class=\"info-item d-flex flex-column gap-2 w-100\">\r\n                              <h4 class=\"section-title w-100 text-start\">\r\n                                {\" \"}\r\n                                Recent Uploads\r\n                              </h4>\r\n                              <table class=\"log-table\">\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Item Name</th>\r\n                                    <th>Upload Date</th>\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {recentuploadFile?.length > 0 ? (\r\n                                    recentuploadFile.map((log, index) => (\r\n                                      <tr key={index}>\r\n                                        <td>\r\n                                          <small>{log.doc_name}</small>\r\n                                        </td>\r\n                                        <td>\r\n                                          <small>{log.name}</small>\r\n                                        </td>\r\n                                        <td>\r\n                                          <small>\r\n                                            {formatCurrentDateTime(\r\n                                              log.created_at\r\n                                            )}\r\n                                          </small>\r\n                                        </td>\r\n                                      </tr>\r\n                                    ))\r\n                                  ) : (\r\n                                    <tr>\r\n                                      <td\r\n                                        colSpan=\"3\"\r\n                                        style={{ textAlign: \"center\" }}\r\n                                      >\r\n                                        No records found\r\n                                      </td>\r\n                                    </tr>\r\n                                  )}\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"access-logs\">\r\n                            <h4 class=\"section-title\">Recent Activity</h4>\r\n\r\n                            <table class=\"log-table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>User</th>\r\n                                  <th>Action</th>\r\n                                  <th>Date Of View</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {investorDatarromreportLogs?.length > 0 ? (\r\n                                  investorDatarromreportLogs.map(\r\n                                    (log, index) => (\r\n                                      <tr key={index}>\r\n                                        <td>\r\n                                          <small>\r\n                                            {log.first_name} {log.last_name}\r\n                                          </small>\r\n                                        </td>\r\n                                        <td>\r\n                                          <small>\r\n                                            {log.document_name} (\r\n                                            {log.access_status})\r\n                                          </small>\r\n                                        </td>\r\n                                        <td>\r\n                                          <small>\r\n                                            {formatCurrentDateTime(\r\n                                              log.date_view\r\n                                            )}\r\n                                          </small>\r\n                                        </td>\r\n                                      </tr>\r\n                                    )\r\n                                  )\r\n                                ) : (\r\n                                  <tr>\r\n                                    <td\r\n                                      colSpan=\"3\"\r\n                                      style={{ textAlign: \"center\" }}\r\n                                    >\r\n                                      No records found\r\n                                    </td>\r\n                                  </tr>\r\n                                )}\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Stepblock>\r\n                </div>\r\n              </SectionWrapper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\nconst styles = `\r\n.open-round-container {\r\n  background: #f8f9fa;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n}\r\n\r\n.info-section {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-item {\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 6px;\r\n  border-left: 4px solid #007bff;\r\n}\r\n\r\n.info-label {\r\n  font-size: 0.85rem;\r\n  font-weight: 500;\r\n  color: #6c757d;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.info-value {\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #212529;\r\n}\r\n\r\n.progress-container {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.progress-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.progress-label {\r\n  font-weight: 600;\r\n  color: #495057;\r\n}\r\n\r\n.progress-value {\r\n  font-size: 1.2rem;\r\n  font-weight: 700;\r\n  color: #007bff;\r\n}\r\n\r\n.progress-bar {\r\n  height: 12px;\r\n  background-color: #e9ecef;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background-color: #007bff;\r\n  border-radius: 6px;\r\n}\r\n\r\n.raised-amount {\r\n  font-size: 1.2rem;\r\n  font-weight: 700;\r\n}\r\n\r\n.progress-details {\r\n  text-align: center;\r\n}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  input,\r\n  textarea,\r\n  select,\r\n  a,\r\n  p,\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 0;\r\n    text-decoration: none;\r\n    outline: none;\r\n    word-break: break-word;\r\n    overflow-wrap: break-word;\r\n  }\r\n\r\n  input:focus,\r\n  textarea:focus,\r\n  select:focus {\r\n    outline: none;\r\n    box-shadow: none;\r\n    border-color: inherit;\r\n  }\r\n`;\r\nexport const StyledIcon = styled.span`\r\n  svg {\r\n    width: 16px;\r\n    height: 16px;\r\n    stroke: #9c9c9c;\r\n    stroke-width: 1.2;\r\n    margin-right: 6px;\r\n    vertical-align: middle;\r\n  }\r\n`;\r\nexport const DatePickerWrapper = styled.div`\r\n  .react-datepicker-wrapper {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  .react-datepicker__input-container {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  input.react-datepicker-ignore-onclickoutside {\r\n    width: 100%;\r\n    padding: 10px 12px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 6px;\r\n    font-size: 14px;\r\n    outline: none;\r\n    background: #fff;\r\n    color: #333;\r\n\r\n    &:focus {\r\n      border-color: #999;\r\n      box-shadow: none;\r\n    }\r\n  }\r\n\r\n  /* 🔻 Hide the triangle */\r\n  .react-datepicker__triangle {\r\n    display: none !important;\r\n  }\r\n`;\r\nexport const Tophead = styled.div`\r\n  margin-bottom: auto;\r\n  padding: 15px 0;\r\n  background: var(--primary);\r\n  border-bottom: 10px solid var(--secondary-color);\r\n  .logo {\r\n    display: inline-block;\r\n    width: 140px;\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Slan = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n  svg {\r\n    stroke: #fff;\r\n    stroke-width: 1.2; /* thinner stroke if needed */\r\n  }\r\n\r\n  select {\r\n    background: #fff;\r\n    color: #111;\r\n    border: none;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const SectionWrapper = styled.div`\r\n  display: block;\r\n  height: 100%;\r\n`;\r\nexport const Stepblock = styled.div`\r\n  // display: none;\r\n\r\n  border-radius: 0px;\r\n\r\n  &.active {\r\n    display: block;\r\n  }\r\n\r\n  label {\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n    color: #000;\r\n    // text-transform: capitalize;\r\n  }\r\n\r\n  input[type=\"text\"],\r\n  input[type=\"number\"],\r\n  input[type=\"email\"],\r\n  input[type=\"tel\"],\r\n  select {\r\n    padding: 6px 10px 6px 35px;\r\n    font-size: 15px;\r\n    height: 37px;\r\n    border: none;\r\n    width: 100%;\r\n    border-radius: 6px;\r\n    background: #00000012;\r\n  }\r\n\r\n  textarea {\r\n    padding: 6px 8px 6px 35px;\r\n    font-size: 0.9rem;\r\n    border-bottom: 2px solid #ccc;\r\n    border-top: none;\r\n    border-left: none;\r\n    border-right: none;\r\n    border-radius: 0px;\r\n    width: 100%;\r\n    background: #fff;\r\n  }\r\n\r\n  .sbtn {\r\n    border: none;\r\n    border-radius: 10px;\r\n    display: inline-block;\r\n    padding: 8px 20px;\r\n    font-size: 0.9rem;\r\n    width: 100%;\r\n  }\r\n\r\n  .nextbtn {\r\n    background: var(--primary);\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      background: var(--primary);\r\n    }\r\n  }\r\n\r\n  .backbtn {\r\n    background: #111;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      background: #2b2b2b;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Titletext = styled.div`\r\n  color: var(--black);\r\n  font-size: 30px;\r\n  text-align: start;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n\r\n  display: inline-block;\r\n\r\n  @media only screen and (max-width: 991.98px) {\r\n    font-size: 26px;\r\n  }\r\n`;\r\n\r\nexport const Titletext1 = styled.div`\r\n  color: var(--black);\r\n  font-size: 30px;\r\n  text-align: start;\r\n\r\n  font-weight: 600;\r\n\r\n  display: inline-block;\r\n\r\n  @media only screen and (max-width: 991.98px) {\r\n    font-size: 26px;\r\n  }\r\n`;\r\n\r\nexport const Subtext = styled.div`\r\n  color: var(--black);\r\n  font-size: 14px;\r\n\r\n  font-weight: 400;\r\n\r\n  display: inline-block;\r\n`;\r\n\r\nexport const RadioGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n`;\r\n\r\nexport const RadioOption = styled.div`\r\n  display: flex;\r\n  align-items: start;\r\n  gap: 12px;\r\n\r\n  input[type=\"radio\"] {\r\n    appearance: none;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    width: 17px;\r\n    height: 17px;\r\n    border: 2px solid var(--primary);\r\n    border-radius: 50%;\r\n    display: grid;\r\n    place-content: center;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    flex-shrink: 0;\r\n    margin-top: 2px;\r\n  }\r\n\r\n  input[type=\"radio\"]::before {\r\n    content: \"\";\r\n    width: 7px;\r\n    height: 7px;\r\n    border-radius: 50%;\r\n    transform: scale(0);\r\n    transition: transform 0.2s ease-in-out;\r\n    background-color: var(--primary);\r\n  }\r\n\r\n  input[type=\"radio\"]:checked::before {\r\n    transform: scale(1);\r\n  }\r\n\r\n  label {\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    line-height: 1.4;\r\n    color: var(--dark);\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  > .intl-tel-input.allow-dropdown {\r\n    flex: 1 1 auto;\r\n    width: 1%;\r\n  }\r\n`;\r\n\r\nexport const FlagContainer = styled.div`\r\n  &.intl-tel-input.allow-dropdown.separate-dial-code.iti-sdc-2 .flag-container {\r\n    margin-left: 35px;\r\n  }\r\n\r\n  &.intl-tel-input.allow-dropdown > .flag-container {\r\n    z-index: 4;\r\n  }\r\n`;\r\n\r\nexport const MobileInput = styled.input`\r\n  &.intl-tel-input.allow-dropdown.separate-dial-code.iti-sdc-2 #mobile {\r\n    padding-left: 120px;\r\n  }\r\n`;\r\n\r\nexport const Iconblock = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    position: absolute;\r\n    z-index: 2;\r\n    top: 9px;\r\n    left: 12px;\r\n    width: 16px; /* smaller width */\r\n    height: 16px; /* smaller height */\r\n    stroke: var(--primary-icon);\r\n    stroke-width: 1.2;\r\n  }\r\n`;\r\n\r\nexport const ItiFlag = styled.div`\r\n  background-image: url(\"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/12.1.6/img/flags.png\");\r\n\r\n  @media only screen and (-webkit-min-device-pixel-ratio: 2),\r\n    only screen and (min--moz-device-pixel-ratio: 2),\r\n    only screen and (-o-min-device-pixel-ratio: 2/1),\r\n    only screen and (min-device-pixel-ratio: 2),\r\n    only screen and (min-resolution: 192dpi),\r\n    only screen and (min-resolution: 2dppx) {\r\n    background-image: url(\"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/12.1.6/img/flags@2x.png\");\r\n  }\r\n`;\r\n\r\nexport const Dealcontent = styled.div`\r\n  .klogo {\r\n    width: 50px;\r\n  }\r\n  .inlogo {\r\n    width: 170px;\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    color: #999;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n  }\r\n\r\n  h4 {\r\n    color: var(--primary);\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n  }\r\n\r\n  h6 {\r\n    color: #999;\r\n    font-size: 14px;\r\n  }\r\n\r\n  p {\r\n    color: #111;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const Gblock = styled.div`\r\n  background: #fff;\r\n  border-radius: 0px;\r\n  padding: 40px 20px;\r\n  box-shadow: 2px 2px 3px #dddddd;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Gallery = styled.div`\r\n  &.popup {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n    container-type: inline-size;\r\n    container-name: video-gallery;\r\n  }\r\n`;\r\n\r\nexport const GalleryVid = styled.div`\r\n  display: inline-block;\r\n  margin: 0px;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid #cecece;\r\n  position: relative;\r\n  flex: 1 1 300px;\r\n  max-width: 100%;\r\n\r\n  video {\r\n    aspect-ratio: 16/9;\r\n  }\r\n\r\n  &:before {\r\n    content: \"▶\";\r\n    color: white;\r\n    font-size: 35px;\r\n    position: absolute;\r\n    width: 60px;\r\n    height: 60px;\r\n    left: 50%;\r\n    top: 50%;\r\n    text-align: center;\r\n    line-height: 60px;\r\n    transition: all 0.3s ease;\r\n    transform: translate(-50%, -50%);\r\n    pointer-events: none;\r\n    z-index: 2;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n\r\n    .desc {\r\n      padding-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  @container video-gallery (max-width: 800px) {\r\n    flex: 1 1 100%;\r\n  }\r\n`;\r\n\r\nexport const Playbtn = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-size: 35px;\r\n  position: absolute;\r\n  width: 60px;\r\n  height: 60px;\r\n  left: 50%;\r\n  top: 50%;\r\n  text-align: center;\r\n  line-height: 60px;\r\n  transition: all 0.3s ease;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 5;\r\n`;\r\n\r\nexport const Desc = styled.div`\r\n  transition: all 0.3s ease;\r\n  padding: 10px 10px;\r\n  color: white;\r\n  position: absolute;\r\n  top: 0px;\r\n  box-sizing: border-box;\r\n  left: 0px;\r\n  width: 100%;\r\n  margin-top: 0px;\r\n  font-family: arial;\r\n  font-size: 14px;\r\n  text-align: left;\r\n  background: linear-gradient(\r\n    to top,\r\n    rgba(0, 0, 0, 0.1) 0%,\r\n    rgba(0, 0, 0, 0.42) 36%,\r\n    rgb(0, 0, 0) 100%\r\n  );\r\n`;\r\n\r\nexport const VideoTag = styled.video`\r\n  background-color: black;\r\n  border: none;\r\n`;\r\n\r\nexport const Showvideo = styled.div`\r\n  z-index: 999;\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  .overlay {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    backdrop-filter: blur(10px);\r\n    position: absolute;\r\n  }\r\n\r\n  .vid-show {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: transparent;\r\n    padding: 0px;\r\n    background: none;\r\n    width: 80vw;\r\n  }\r\n\r\n  .close {\r\n    font-family: arial;\r\n    font-weight: bold;\r\n    background-color: #111;\r\n    color: white;\r\n    font-size: 20px;\r\n    position: absolute;\r\n    right: -5px;\r\n    top: -5px;\r\n    display: grid;\r\n    place-items: center;\r\n    border-radius: 100px;\r\n    width: 40px;\r\n    height: 40px;\r\n    text-align: center;\r\n    transition: all 0.3s ease;\r\n    cursor: pointer;\r\n    z-index: 888;\r\n\r\n    &:hover {\r\n      background-color: rgba(80, 80, 80, 0.8);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SliderControls = styled.div`\r\n  position: relative;\r\n  margin-top: 0px;\r\n  text-align: center;\r\n\r\n  video {\r\n    aspect-ratio: 16/9;\r\n    object-fit: cover;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const SliderBtn = styled.button`\r\n  display: grid;\r\n  color: #111;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  border: none;\r\n  border-radius: 10px;\r\n  width: 40px;\r\n  height: 40px;\r\n  font-size: 20px;\r\n  line-height: 40px;\r\n  padding: 9px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  z-index: 44;\r\n\r\n  i {\r\n    height: 20px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgb(255, 255, 255);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nexport const PrevBtn = styled(SliderBtn)`\r\n  left: -60px;\r\n\r\n  @media only screen and (max-width: 991.98px) {\r\n    left: -30px;\r\n  }\r\n`;\r\n\r\nexport const NextBtn = styled(SliderBtn)`\r\n  right: -60px;\r\n\r\n  @media only screen and (max-width: 991.98px) {\r\n    right: -30px;\r\n  }\r\n`;\r\n\r\nexport const Sup = styled.sup`\r\n  color: var(--primary);\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: ${({ show }) => (show ? \"flex\" : \"none\")};\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nexport const PopupBox = styled.div`\r\n  background: #fff;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 400px;\r\n  position: relative;\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: 10px 14px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 6px;\r\n    font-size: 14px;\r\n    color: #333;\r\n    background-color: #fff;\r\n    transition: border 0.3s ease;\r\n\r\n    &:focus {\r\n      border-color: #999;\r\n      outline: none;\r\n    }\r\n\r\n    &::placeholder {\r\n      color: #aaa;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: -8px;\r\n  right: -8px;\r\n  border: none;\r\n  background: #111;\r\n  color: #fff;\r\n  padding: 0px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  aspect-ratio: 1;\r\n  display: grid;\r\n  place-items: center;\r\n  height: 26px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  padding: 0.5rem;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  padding: 0.6rem 1.2rem;\r\n  background-color: var(--primary);\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`;\r\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Bar","BarController","Pie","PieController","Dashboard","_optionpoolLastestval2","_optionpoolLastestval3","_optionpoolLastestval4","_optionpoolLastestval5","_optionpoolLastestval6","apiURLDashboard","storedUsername","localStorage","getItem","userLogin","JSON","parse","CompanyData","setCompanyData","useState","CompanyDatashare","setCompanyDatashare","Companyroundopen","setCompanyroundopen","round_type","target_raise","raised_to_date","expected_close","fundraising_progress","progresswidth","currency","remaining_amount","total_investors","CompanyopenroundUserLog","setCompanyopenroundUserLog","investorreportLogs","setinvestorreportLogs","TotalInvestorscontact","setTotalInvestorscontact","recentuploadFile","setrecentuploadFile","investorDatarromreportLogs","setinvestorDatarromreportLogs","InvestorRequestAccessLogs","setInvestorRequestAccessLogs","investorStakesPercent","setInvestorStakesPercent","optionpoolLastestvalue","setoptionpoolLastestvalue","option_pool","total_option_pool_percentage","total_option_pool_shares","available_percentage","allocated_percentage","latest_valuation","valuation_amount","price_per_share","total_company_shares","summary","option_pool_percentage","countrySymbolList","setCountrysymbollist","loading","setLoading","error","setError","CompanyName","setCompanyName","dilutionData","setDilutionforcastData","shareholderData","setShareholderData","backgroundColor","borderColor","borderWidth","hoverBorderWidth","hoverOffset","TotalInvestors","setTotalInvestors","getallcountrySymbolList","async","formData","id","respo","axios","post","apiUrlRound","headers","Accept","results","err","getCompanyName","company_id","companies","getCompanyTotalShares","getTotalinvestor","getTotalinvestorcontact","getinvestorreportLogs","getinvestorDatarromreportLogs","getCompanyOptionPoolLastestValuation","getShareholder","success","console","message","getCurrencySymbol","currencyCode","cleanCode","replace","toUpperCase","country","c","_c$currency_code","currency_code","currency_symbol","getCompanystokes","getCompanyopenround","getCompanyopenroundUserLog","getDilutionForecast","getrecentuploadFile","getInvestorRequestCompanyInvest","ownershipTable","setOwnershipTable","setShareholderLoading","setShareholderError","response","shareholders","colors","log","filteredData","filteredLabels","filteredColors","forEach","label","index","parseFloat","chartData","hoverBackgroundColor","color","_err$response","_err$response$data","_err$response2","_err$response2$data","errorMessage","cumulativeTotalShares","cumulativeInvestorShares","round","totalShares","total_issued_shares","founderShares","founder_shares","Math","toFixed","Companyshares","company_shares","dataa","openroundData","roundInfo","roundaccessLog","dashboardData","equity","optionPool","investorStakes","valuation","openRound","target","raised","preMoney","closeDate","investors","total","contacts","messages","name","firm","time","dataRoom","completion","recentUploads","description","accessLogs","action","shareholderLoading","shareholderError","shareholderOptions","responsive","maintainAspectRatio","legend","position","usePointStyle","pointStyle","padding","font","size","weight","generateLabels","i","text","fillStyle","strokeStyle","lineWidth","hidden","isNaN","tooltip","callbacks","context","parsed","titleColor","bodyColor","cornerRadius","displayColors","datalabels","display","formatter","elements","arc","animation","animateRotate","animateScale","duration","easing","interaction","intersect","mode","document","title","isCollapsed","setIsCollapsed","formatCurrentDateTime","input","date","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","toString","padStart","ampm","getSeconds","n","getOrdinal","setChartData","res","fetchOwnership","_jsx","_Fragment","children","Wrapper","className","_jsxs","ModuleSideNav","TopBar","SectionWrapper","Stepblock","company_name","class","Number","String","totalCompanyShares","toLocaleString","percentage","shares","amount","undefined","dynamicCurrencyMap","createDynamicCurrencyMap","dynamicMap","variation","trim","cleanCurrency","CAD","USD","EUR","GBP","INR","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","warn","symbol","formatCurrency","y","footer","tooltipItems","reduce","acc","t","scales","x","stacked","max","min","ticks","callback","minHeight","onClick","maxWidth","row","borderRadius","stakeholder","securityType","sum","ctx","v","first_name","last_name","shareClassType","nameOfRound","fontWeight","fontSize","access_status","activity_date","colSpan","textAlign","created_at","document_name","date_view","doc_name","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","ArcElement","Title","Tooltip","Legend","styled","div","StyledIcon","span","Titletext","Titletext1","Subtext","RadioGroup","RadioOption","Iconblock","Dealcontent","SliderBtn","button","video","Sup","sup","Overlay","_ref","show","PopupBox","CloseBtn","Input","SubmitBtn"],"sourceRoot":""}